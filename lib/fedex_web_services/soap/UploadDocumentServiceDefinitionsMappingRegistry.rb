# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'UploadDocumentServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module UploadDocument

module UploadDocumentServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV19 = "http://fedex.com/ws/uploaddocument/v19"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV19, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AdditionalLabelsType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Address,
    :schema_type => XSD::QName.new(NsV19, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV19, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GeographicCoordinates")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdrLicenseDetail,
    :schema_type => XSD::QName.new(NsV19, "AdrLicenseDetail"),
    :schema_element => [
      ["licenseOrPermitDetail", ["FedexWebServices::Soap::UploadDocument::LicenseOrPermitDetail", XSD::QName.new(NsV19, "LicenseOrPermitDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV19, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::UploadDocument::AlcoholRecipientType", XSD::QName.new(NsV19, "RecipientType")], [0, 1]],
      ["shipperAgreementType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShipperAgreementType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV19, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTaxType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV19, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedAccountNumberType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV19, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "AssociatedShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedShipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["sender", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Sender")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["shipmentOperationalDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail", XSD::QName.new(NsV19, "ShipmentOperationalDetail")], [0, 1]],
      ["packageOperationalDetail", ["FedexWebServices::Soap::UploadDocument::PackageOperationalDetail", XSD::QName.new(NsV19, "PackageOperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedTrackingId,
    :schema_type => XSD::QName.new(NsV19, "AssociatedTrackingId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingIdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV19, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::UploadDocument::BatteryMaterialType", XSD::QName.new(NsV19, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::UploadDocument::BatteryPackingType", XSD::QName.new(NsV19, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::UploadDocument::BatteryRegulatorySubType", XSD::QName.new(NsV19, "RegulatorySubType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BinaryBarcode,
    :schema_type => XSD::QName.new(NsV19, "BinaryBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::BinaryBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BrokerDetail,
    :schema_type => XSD::QName.new(NsV19, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::BrokerType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Broker")], [0, 1]],
      ["brokerageProcessingChargesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "BrokerageProcessingChargesPayment")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ClientDetail,
    :schema_type => XSD::QName.new(NsV19, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV19, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::UploadDocument::RateTypeBasisType", XSD::QName.new(NsV19, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::UploadDocument::CodAddTransportationChargeBasisType", XSD::QName.new(NsV19, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::UploadDocument::ChargeBasisLevelType", XSD::QName.new(NsV19, "ChargeBasisLevel")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::UploadDocument::RateLevelBasisType", XSD::QName.new(NsV19, "RateLevelBasis")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodDetail,
    :schema_type => XSD::QName.new(NsV19, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::UploadDocument::CodAddTransportationChargesDetail", XSD::QName.new(NsV19, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::UploadDocument::CodCollectionType", XSD::QName.new(NsV19, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::UploadDocument::CodReturnReferenceIndicatorType", XSD::QName.new(NsV19, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "ReturnTrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodReturnPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CodReturnPackageDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::UploadDocument::CodAdjustmentType", XSD::QName.new(NsV19, "AdjustmentType")], [0, 1]],
      ["electronic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Electronic")], [0, 1]],
      ["barcodes", ["FedexWebServices::Soap::UploadDocument::PackageBarcodes", XSD::QName.new(NsV19, "Barcodes")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV19, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Comments")], [0, nil]],
      ["freightCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::UploadDocument::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV19, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::UploadDocument::PurposeOfShipmentType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["purposeOfShipmentDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PurposeOfShipmentDescription")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TermsOfSale")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV19, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormVersion")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Commodity,
    :schema_type => XSD::QName.new(NsV19, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::UploadDocument::CommodityPurposeType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::UploadDocument::Measure[]", XSD::QName.new(NsV19, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::UploadDocument::EdtExciseCondition[]", XSD::QName.new(NsV19, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["usmcaDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCommodityDetail", XSD::QName.new(NsV19, "UsmcaDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedCodDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedCodDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::UploadDocument::CodAdjustmentType", XSD::QName.new(NsV19, "AdjustmentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedEtdDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedEtdDetail"),
    :schema_element => [
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FolderId")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::CompletedEtdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["uploadDocumentReferenceDetails", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "UploadDocumentReferenceDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousPackageDetail"),
    :schema_element => [
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReferenceId")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType", XSD::QName.new(NsV19, "Regulation")], [0, 1]],
      ["radioactiveTransportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "RadioactiveTransportIndex")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::UploadDocument::RadioactiveLabelType", XSD::QName.new(NsV19, "LabelType")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousContainer[]", XSD::QName.new(NsV19, "Containers")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousShipmentDetail"),
    :schema_element => [
      ["hazardousSummaryDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousSummaryDetail", XSD::QName.new(NsV19, "HazardousSummaryDetail")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "DryIceDetail")], [0, 1]],
      ["adrLicense", ["FedexWebServices::Soap::UploadDocument::AdrLicenseDetail", XSD::QName.new(NsV19, "AdrLicense")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousSummaryDetail"),
    :schema_element => [
      ["smallQuantityExceptionPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SmallQuantityExceptionPackageCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHoldAtLocationDetail"),
    :schema_element => [
      ["holdingLocation", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "HoldingLocation")], [0, 1]],
      ["holdingLocationType", ["FedexWebServices::Soap::UploadDocument::FedExLocationType", XSD::QName.new(NsV19, "HoldingLocationType")], [0, 1]],
      ["holdingLocationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HoldingLocationTypeForDisplay")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedPackageDetail"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::UploadDocument::TrackingId[]", XSD::QName.new(NsV19, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupNumber")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::UploadDocument::OversizeClassType", XSD::QName.new(NsV19, "OversizeClass")], [0, 1]],
      ["packageRating", ["FedexWebServices::Soap::UploadDocument::PackageRating", XSD::QName.new(NsV19, "PackageRating")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::UploadDocument::SpecialServiceDescription[]", XSD::QName.new(NsV19, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::UploadDocument::PackageOperationalDetail", XSD::QName.new(NsV19, "OperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]],
      ["packageDocuments", ["FedexWebServices::Soap::UploadDocument::ShippingDocument[]", XSD::QName.new(NsV19, "PackageDocuments")], [0, nil]],
      ["codReturnDetail", ["FedexWebServices::Soap::UploadDocument::CodReturnPackageDetail", XSD::QName.new(NsV19, "CodReturnDetail")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::UploadDocument::SignatureOptionType", XSD::QName.new(NsV19, "SignatureOption")], [0, 1]],
      ["dryIceWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DryIceWeight")], [0, 1]],
      ["hazardousPackageDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousPackageDetail", XSD::QName.new(NsV19, "HazardousPackageDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedShipmentConsolidationDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedShipmentConsolidationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ConsolidationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["completedTransborderDistributionDetail", ["FedexWebServices::Soap::UploadDocument::CompletedTransborderDistributionDetail", XSD::QName.new(NsV19, "CompletedTransborderDistributionDetail")], [0, 1]],
      ["associatedTrackingIds", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingId[]", XSD::QName.new(NsV19, "AssociatedTrackingIds")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedShipmentDetail"),
    :schema_element => [
      ["usDomestic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "UsDomestic")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "MasterTrackingId")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::UploadDocument::ServiceDescription", XSD::QName.new(NsV19, "ServiceDescription")], [0, 1]],
      ["packagingDescription", ["FedexWebServices::Soap::UploadDocument::PackagingDescription", XSD::QName.new(NsV19, "PackagingDescription")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::UploadDocument::SpecialServiceDescription[]", XSD::QName.new(NsV19, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail", XSD::QName.new(NsV19, "OperationalDetail")], [0, 1]],
      ["accessDetail", ["FedexWebServices::Soap::UploadDocument::PendingShipmentAccessDetail", XSD::QName.new(NsV19, "AccessDetail")], [0, 1]],
      ["tagDetail", ["FedexWebServices::Soap::UploadDocument::CompletedTagDetail", XSD::QName.new(NsV19, "TagDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::UploadDocument::CompletedSmartPostDetail", XSD::QName.new(NsV19, "SmartPostDetail")], [0, 1]],
      ["hazardousShipmentDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousShipmentDetail", XSD::QName.new(NsV19, "HazardousShipmentDetail")], [0, 1]],
      ["shipmentRating", ["FedexWebServices::Soap::UploadDocument::ShipmentRating", XSD::QName.new(NsV19, "ShipmentRating")], [0, 1]],
      ["consolidationDetail", ["FedexWebServices::Soap::UploadDocument::CompletedShipmentConsolidationDetail", XSD::QName.new(NsV19, "ConsolidationDetail")], [0, 1]],
      ["completedHoldAtLocationDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHoldAtLocationDetail", XSD::QName.new(NsV19, "CompletedHoldAtLocationDetail")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportComplianceStatement")], [0, 1]],
      ["documentRequirements", ["FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail", XSD::QName.new(NsV19, "DocumentRequirements")], [0, 1]],
      ["completedEtdDetail", ["FedexWebServices::Soap::UploadDocument::CompletedEtdDetail", XSD::QName.new(NsV19, "CompletedEtdDetail")], [0, 1]],
      ["shipmentDocuments", ["FedexWebServices::Soap::UploadDocument::ShippingDocument[]", XSD::QName.new(NsV19, "ShipmentDocuments")], [0, nil]],
      ["associatedShipments", ["FedexWebServices::Soap::UploadDocument::AssociatedShipmentDetail[]", XSD::QName.new(NsV19, "AssociatedShipments")], [0, nil]],
      ["completedCodDetail", ["FedexWebServices::Soap::UploadDocument::CompletedCodDetail", XSD::QName.new(NsV19, "CompletedCodDetail")], [0, 1]],
      ["completedPackageDetails", ["FedexWebServices::Soap::UploadDocument::CompletedPackageDetail[]", XSD::QName.new(NsV19, "CompletedPackageDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedSmartPostDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedSmartPostDetail"),
    :schema_element => [
      ["pickUpCarrier", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "PickUpCarrier")], [0, 1]],
      ["machinable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Machinable")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedTagDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTagDetail"),
    :schema_element => [
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ConfirmationNumber")], [0, 1]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "AccessTime")], [0, 1]],
      ["cutoffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "CutoffTime")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Location")], [0, 1]],
      ["deliveryCommitment", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "DeliveryCommitment")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "DispatchDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedTransborderDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTransborderDistributionDetail"),
    :schema_element => [
      ["deconsolidationLocationPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeconsolidationLocationPostalCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV19, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LiteralValue")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::UploadDocument::PriorityAlertDetail", XSD::QName.new(NsV19, "PriorityAlertDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Contact,
    :schema_type => XSD::QName.new(NsV19, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ContentRecord,
    :schema_type => XSD::QName.new(NsV19, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCard,
    :schema_type => XSD::QName.new(NsV19, "CreditCard"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::UploadDocument::CreditCardType", XSD::QName.new(NsV19, "CreditCardType")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]],
      ["lastAuthenticationByFedexDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "LastAuthenticationByFedexDate")], [0, 1]],
      ["verificationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "VerificationCode")], [0, 1]],
      ["creditCardHolder", ["FedexWebServices::Soap::UploadDocument::ParsedContactAndAddress", XSD::QName.new(NsV19, "CreditCardHolder")], [0, 1]],
      ["trackData", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "TrackData")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributesDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionAttributesDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributeType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionDetail"),
    :schema_element => [
      ["authorizationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AuthorizationId")], [0, 1]],
      ["authorizationType", ["FedexWebServices::Soap::UploadDocument::CreditCardAuthorizationType", XSD::QName.new(NsV19, "AuthorizationType")], [0, 1]],
      ["settlementScheduleType", ["FedexWebServices::Soap::UploadDocument::CreditCardSettlementScheduleType", XSD::QName.new(NsV19, "SettlementScheduleType")], [0, 1]],
      ["fraudDetectionDetail", ["FedexWebServices::Soap::UploadDocument::CreditFraudDetectionDetail", XSD::QName.new(NsV19, "FraudDetectionDetail")], [0, 1]],
      ["payorAuthenticationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PayorAuthenticationCode")], [0, 1]],
      ["payorAuthenticationSessionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PayorAuthenticationSessionId")], [0, 1]],
      ["attributesDetail", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributesDetail", XSD::QName.new(NsV19, "AttributesDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditFraudDetectionDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditFraudDetectionDetail"),
    :schema_element => [
      ["ipAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IpAddress")], [0, 1]],
      ["clientCookiesEnabled", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ClientCookiesEnabled")], [0, 1]],
      ["devicePrint", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DevicePrint")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV19, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Rate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::UploadDocument::DateRange", XSD::QName.new(NsV19, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "RequestDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDiscountExclusionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDiscountExclusionDetail"),
    :schema_element => [
      ["excludedTypes", ["FedexWebServices::Soap::UploadDocument::RateDiscountType[]", XSD::QName.new(NsV19, "ExcludedTypes")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType", XSD::QName.new(NsV19, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::UploadDocument::LabelRotationType", XSD::QName.new(NsV19, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecificationId")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomDocumentIdentifier")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType", XSD::QName.new(NsV19, "BarcodeSymbology")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "BottomRightCorner")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::UploadDocument::CustomLabelCoordinateUnits", XSD::QName.new(NsV19, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelTextEntry[]", XSD::QName.new(NsV19, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelGraphicEntry[]", XSD::QName.new(NsV19, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelBoxEntry[]", XSD::QName.new(NsV19, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV19, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV19, "BarcodeEntries")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileGraphicFullName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "X")], [0, 1]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Y")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::UploadDocument::RotationType", XSD::QName.new(NsV19, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::UploadDocument::RotationType", XSD::QName.new(NsV19, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomRatingOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomRatingOptionDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::CustomRatingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["customDiscountExclusionDetail", ["FedexWebServices::Soap::UploadDocument::CustomDiscountExclusionDetail", XSD::QName.new(NsV19, "CustomDiscountExclusionDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomTransitTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomTransitTimeDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV19, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsageType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::UploadDocument::InternalImageType", XSD::QName.new(NsV19, "InternalImageType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerProvidedImage,
    :schema_type => XSD::QName.new(NsV19, "CustomerProvidedImage"),
    :schema_element => [
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]],
      ["imageReferenceDetail", ["FedexWebServices::Soap::UploadDocument::ImageReferenceDetail", XSD::QName.new(NsV19, "ImageReferenceDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerReference,
    :schema_type => XSD::QName.new(NsV19, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "CustomerReferenceType")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType", XSD::QName.new(NsV19, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::UploadDocument::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV19, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::UploadDocument::LabelMaskableDataType[]", XSD::QName.new(NsV19, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::UploadDocument::SecondaryBarcodeType", XSD::QName.new(NsV19, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::UploadDocument::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV19, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::UploadDocument::AdditionalLabelsDetail[]", XSD::QName.new(NsV19, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::UploadDocument::BrokerDetail[]", XSD::QName.new(NsV19, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::UploadDocument::ClearanceBrokerageType", XSD::QName.new(NsV19, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::UploadDocument::CustomsOptionDetail", XSD::QName.new(NsV19, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::UploadDocument::RecipientCustomsId", XSD::QName.new(NsV19, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::UploadDocument::InternationalDocumentContentType", XSD::QName.new(NsV19, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::UploadDocument::FreightOnValueType", XSD::QName.new(NsV19, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::UploadDocument::CommercialInvoice", XSD::QName.new(NsV19, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::UploadDocument::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::UploadDocument::ExportDetail", XSD::QName.new(NsV19, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::UploadDocument::RegulatoryControlType[]", XSD::QName.new(NsV19, "RegulatoryControls")], [0, nil]],
      ["declarationStatementDetail", ["FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementDetail", XSD::QName.new(NsV19, "DeclarationStatementDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsDeclarationStatementDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomsOptionType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::UploadDocument::HazardousContainerPackingType", XSD::QName.new(NsV19, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::UploadDocument::RadioactiveContainerClassType", XSD::QName.new(NsV19, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityContent[]", XSD::QName.new(NsV19, "HazardousCommodities")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsDetail"),
    :schema_element => [
      ["uploadedTrackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UploadedTrackingNumber")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType", XSD::QName.new(NsV19, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["dangerousGoodsDescriptors", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDescriptorType[]", XSD::QName.new(NsV19, "DangerousGoodsDescriptors")], [0, nil]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsPackingOptionType", XSD::QName.new(NsV19, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsContainer[]", XSD::QName.new(NsV19, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackagingDetail", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsSignatory", XSD::QName.new(NsV19, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::UploadDocument::RadioactivityDetail", XSD::QName.new(NsV19, "RadioactivityDetail")], [0, 1]],
      ["regulatoryLineItems", ["FedexWebServices::Soap::UploadDocument::DocumentLineItem[]", XSD::QName.new(NsV19, "RegulatoryLineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Place")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DateRange,
    :schema_type => XSD::QName.new(NsV19, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeletionDetail,
    :schema_type => XSD::QName.new(NsV19, "DeletionDetail"),
    :schema_element => [
      ["deleteStatus", ["FedexWebServices::Soap::UploadDocument::DeleteRecordedShipmentRequestServiceLevel", XSD::QName.new(NsV19, "DeleteStatus")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV19, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::UploadDocument::DestinationControlStatementType[]", XSD::QName.new(NsV19, "StatementTypes")], [0, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EndUser")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DetentionDetail,
    :schema_type => XSD::QName.new(NsV19, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Dimensions,
    :schema_type => XSD::QName.new(NsV19, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::UploadDocument::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContent,
    :schema_type => XSD::QName.new(NsV19, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::UploadDocument::DocTabContentType", XSD::QName.new(NsV19, "DocTabContentType")], [0, 1]],
      ["zone001", ["FedexWebServices::Soap::UploadDocument::DocTabContentZone001", XSD::QName.new(NsV19, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::UploadDocument::DocTabContentBarcoded", XSD::QName.new(NsV19, "Barcoded")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType", XSD::QName.new(NsV19, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification", XSD::QName.new(NsV19, "Specification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification[]", XSD::QName.new(NsV19, "DocTabZoneSpecifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV19, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::UploadDocument::DocTabZoneJustificationType", XSD::QName.new(NsV19, "Justification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::DocumentFormatOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentGenerationDetail,
    :schema_type => XSD::QName.new(NsV19, "DocumentGenerationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["minimumCopiesRequired", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "MinimumCopiesRequired")], [0, 1]],
      ["letterhead", ["FedexWebServices::Soap::UploadDocument::RequirementType", XSD::QName.new(NsV19, "Letterhead")], [0, 1]],
      ["electronicSignature", ["FedexWebServices::Soap::UploadDocument::RequirementType", XSD::QName.new(NsV19, "ElectronicSignature")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentLineItem,
    :schema_type => XSD::QName.new(NsV19, "DocumentLineItem"),
    :schema_element => [
      ["values", ["FedexWebServices::Soap::UploadDocument::KeyValueDetail[]", XSD::QName.new(NsV19, "Values")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail,
    :schema_type => XSD::QName.new(NsV19, "DocumentRequirementsDetail"),
    :schema_element => [
      ["requiredDocuments", ["FedexWebServices::Soap::UploadDocument::RequiredDocumentType[]", XSD::QName.new(NsV19, "RequiredDocuments")], [0, nil]],
      ["generationDetails", ["FedexWebServices::Soap::UploadDocument::DocumentGenerationDetail[]", XSD::QName.new(NsV19, "GenerationDetails")], [0, nil]],
      ["prohibitedDocuments", ["FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType[]", XSD::QName.new(NsV19, "ProhibitedDocuments")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::UploadDocument::EMailRecipient[]", XSD::QName.new(NsV19, "Recipients")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailRecipient,
    :schema_type => XSD::QName.new(NsV19, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::AccessorRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::UploadDocument::EmailOptionsRequested", XSD::QName.new(NsV19, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentDetail,
    :schema_type => XSD::QName.new(NsV19, "EPaymentDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["ePaymentProcessor", ["FedexWebServices::Soap::UploadDocument::EPaymentProcessorType", XSD::QName.new(NsV19, "EPaymentProcessor")], [0, 1]],
      ["ePaymentMode", ["FedexWebServices::Soap::UploadDocument::EPaymentModeType", XSD::QName.new(NsV19, "EPaymentMode")], [0, 1]],
      ["maskedCreditCard", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MaskedCreditCard")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::UploadDocument::CreditCardType", XSD::QName.new(NsV19, "CreditCardType")], [0, 1]],
      ["creditCardExpirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CreditCardExpirationDate")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV19, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::EdtTaxDetail[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Total")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV19, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV19, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::UploadDocument::EdtTaxType", XSD::QName.new(NsV19, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::EmailOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdDetail,
    :schema_type => XSD::QName.new(NsV19, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::UploadDocument::EtdConfirmationType", XSD::QName.new(NsV19, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::UploadDocument::EtdAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "RequestedDocumentCopies")], [0, nil]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV19, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExportDetail,
    :schema_type => XSD::QName.new(NsV19, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::UploadDocument::B13AFilingOptionType", XSD::QName.new(NsV19, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::UploadDocument::DestinationControlDetail", XSD::QName.new(NsV19, "DestinationControlDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV19, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact", XSD::QName.new(NsV19, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact", XSD::QName.new(NsV19, "UndeliverableContact")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV19, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Phone")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV19, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FaxDetail,
    :schema_type => XSD::QName.new(NsV19, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV19, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::FlatbedTrailerOption[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::UploadDocument::PageQuadrantType", XSD::QName.new(NsV19, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType", XSD::QName.new(NsV19, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV19, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::UploadDocument::FreightChargeBasisType", XSD::QName.new(NsV19, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "ExtendedAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBillOfLadingDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightBillOfLadingDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::FreightGuaranteeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "Time")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::UploadDocument::FreightRateQuoteType", XSD::QName.new(NsV19, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::UploadDocument::FreightBaseChargeCalculationType", XSD::QName.new(NsV19, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::UploadDocument::FreightBaseCharge[]", XSD::QName.new(NsV19, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::UploadDocument::FreightRateNotation[]", XSD::QName.new(NsV19, "Notations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV19, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "AlternateBilling")], [0, 1]],
      ["printedReferences", ["FedexWebServices::Soap::UploadDocument::PrintedReference[]", XSD::QName.new(NsV19, "PrintedReferences")], [0, nil]],
      ["role", ["FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::UploadDocument::FreightCollectTermsType", XSD::QName.new(NsV19, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail", XSD::QName.new(NsV19, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::UploadDocument::FreightSpecialServicePayment[]", XSD::QName.new(NsV19, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsEmergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardousMaterialsEmergencyContactNumber")], [0, 1]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::UploadDocument::FreightShipmentLineItem[]", XSD::QName.new(NsV19, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "FreightClass")], [0, 1]],
      ["classProvidedByCustomer", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ClassProvidedByCustomer")], [0, 1]],
      ["billingMaskName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "BillingMaskName")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail", XSD::QName.new(NsV19, "LiabilityCoverageDetail")], [0, 1]],
      ["handlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "HandlingUnits")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::UploadDocument::PhysicalPackagingType", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Pieces")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NmfcCode")], [0, 1]],
      ["hazardousMaterials", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType", XSD::QName.new(NsV19, "HazardousMaterials")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PurchaseOrderNumber")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::UploadDocument::Volume", XSD::QName.new(NsV19, "Volume")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV19, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV19, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityDescription", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV19, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail", XSD::QName.new(NsV19, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::UploadDocument::RadionuclideDetail", XSD::QName.new(NsV19, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::UploadDocument::NetExplosiveDetail", XSD::QName.new(NsV19, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType", XSD::QName.new(NsV19, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingDetail", XSD::QName.new(NsV19, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV19, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Authorization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV19, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackingInstructions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityType", XSD::QName.new(NsV19, "QuantityType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV19, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::UploadDocument::FedExLocationType", XSD::QName.new(NsV19, "LocationType")], [0, 1]],
      ["locationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationTypeForDisplay")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "LocationNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV19, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumType", XSD::QName.new(NsV19, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageReferenceDetail,
    :schema_type => XSD::QName.new(NsV19, "ImageReferenceDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::UploadDocument::InternalImageType", XSD::QName.new(NsV19, "InternalImageType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageUploadStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "ImageUploadStatusDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["status", ["FedexWebServices::Soap::UploadDocument::UploadImageStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusInfo", ["FedexWebServices::Soap::UploadDocument::UploadImageStatusInfoType", XSD::QName.new(NsV19, "StatusInfo")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::InternationalControlledExportType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalDistributionSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalDistributionSummaryDetail"),
    :schema_element => [
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["totalPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalPackageCount")], [0, 1]],
      ["totalUniqueAddressCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalUniqueAddressCount")], [0, 1]],
      ["totalCustomsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalCustomsValue")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuredValue")], [0, 1]],
      ["totalFreightCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightCharges")], [0, 1]],
      ["totalInsuranceCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuranceCharges")], [0, 1]],
      ["totalTaxesOrMiscellaneousCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxesOrMiscellaneousCharges")], [0, 1]],
      ["totalHandlingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalHandlingCosts")], [0, 1]],
      ["totalPackingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalPackingCosts")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "DryIceDetail")], [0, 1]],
      ["dangerousGoodsAccessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "DangerousGoodsAccessibility")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::KeyValueDetail,
    :schema_type => XSD::QName.new(NsV19, "KeyValueDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecification,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecification"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["dispositions", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["labelFormatType", ["FedexWebServices::Soap::UploadDocument::LabelFormatType", XSD::QName.new(NsV19, "LabelFormatType")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::UploadDocument::LabelStockType", XSD::QName.new(NsV19, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType", XSD::QName.new(NsV19, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::UploadDocument::LabelRotationType", XSD::QName.new(NsV19, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::UploadDocument::LabelOrderType", XSD::QName.new(NsV19, "LabelOrder")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV19, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecificationProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV19, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageType", XSD::QName.new(NsV19, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CoverageAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LicenseOrPermitDetail,
    :schema_type => XSD::QName.new(NsV19, "LicenseOrPermitDetail"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LinearMeasure,
    :schema_type => XSD::QName.new(NsV19, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::UploadDocument::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Localization,
    :schema_type => XSD::QName.new(NsV19, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV19, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "Count")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Measure,
    :schema_type => XSD::QName.new(NsV19, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Money,
    :schema_type => XSD::QName.new(NsV19, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV19, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::NetExplosiveClassificationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PersonHours")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Notification,
    :schema_type => XSD::QName.new(NsV19, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::UploadDocument::NotificationParameter[]", XSD::QName.new(NsV19, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationContentSpecification,
    :schema_type => XSD::QName.new(NsV19, "NotificationContentSpecification"),
    :schema_element => [
      ["exclusions", ["FedexWebServices::Soap::UploadDocument::NotificationContentType[]", XSD::QName.new(NsV19, "Exclusions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::UploadDocument::NotificationType", XSD::QName.new(NsV19, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::UploadDocument::EMailDetail", XSD::QName.new(NsV19, "EmailDetail")], [0, 1]],
      ["faxDetail", ["FedexWebServices::Soap::UploadDocument::FaxDetail", XSD::QName.new(NsV19, "FaxDetail")], [0, 1]],
      ["smsDetail", ["FedexWebServices::Soap::UploadDocument::SmsDetail", XSD::QName.new(NsV19, "SmsDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationParameter,
    :schema_type => XSD::QName.new(NsV19, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OfferingIdentifierDetail,
    :schema_type => XSD::QName.new(NsV19, "OfferingIdentifierDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Op900Detail,
    :schema_type => XSD::QName.new(NsV19, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SignatureName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OperationalInstruction,
    :schema_type => XSD::QName.new(NsV19, "OperationalInstruction"),
    :schema_element => [
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["content", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Content")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageBarcodes,
    :schema_type => XSD::QName.new(NsV19, "PackageBarcodes"),
    :schema_element => [
      ["binaryBarcodes", ["FedexWebServices::Soap::UploadDocument::BinaryBarcode[]", XSD::QName.new(NsV19, "BinaryBarcodes")], [0, nil]],
      ["stringBarcodes", ["FedexWebServices::Soap::UploadDocument::StringBarcode[]", XSD::QName.new(NsV19, "StringBarcodes")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageOperationalDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageOperationalDetail"),
    :schema_element => [
      ["astraHandlingText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraHandlingText")], [0, 1]],
      ["operationalInstructions", ["FedexWebServices::Soap::UploadDocument::OperationalInstruction[]", XSD::QName.new(NsV19, "OperationalInstructions")], [0, nil]],
      ["barcodes", ["FedexWebServices::Soap::UploadDocument::PackageBarcodes", XSD::QName.new(NsV19, "Barcodes")], [0, 1]],
      ["groundServiceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GroundServiceCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageRating,
    :schema_type => XSD::QName.new(NsV19, "PackageRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "EffectiveNetDiscount")], [0, 1]],
      ["packageRateDetails", ["FedexWebServices::Soap::UploadDocument::PackageRateDetail[]", XSD::QName.new(NsV19, "PackageRateDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageSpecialHandlingDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageSpecialHandlingDetail"),
    :schema_element => [
      ["packedBy", ["FedexWebServices::Soap::UploadDocument::PackagePackedByType", XSD::QName.new(NsV19, "PackedBy")], [0, 1]],
      ["damageKnown", ["FedexWebServices::Soap::UploadDocument::DamageStatusType", XSD::QName.new(NsV19, "DamageKnown")], [0, 1]],
      ["inspectionStatus", ["FedexWebServices::Soap::UploadDocument::InspectionStatusType", XSD::QName.new(NsV19, "InspectionStatus")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::UploadDocument::CodDetail", XSD::QName.new(NsV19, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail", XSD::QName.new(NsV19, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::UploadDocument::BatteryClassificationDetail[]", XSD::QName.new(NsV19, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::UploadDocument::SignatureOptionDetail", XSD::QName.new(NsV19, "SignatureOptionDetail")], [0, 1]],
      ["pieceCountVerificationBoxCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCountVerificationBoxCount")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::UploadDocument::PriorityAlertDetail", XSD::QName.new(NsV19, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::UploadDocument::AlcoholDetail", XSD::QName.new(NsV19, "AlcoholDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageStatusDetail"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::UploadDocument::PackageLineItemStatusType[]", XSD::QName.new(NsV19, "Status")], [0, nil]],
      ["deletionDetail", ["FedexWebServices::Soap::UploadDocument::DeletionDetail", XSD::QName.new(NsV19, "DeletionDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackagingDescription,
    :schema_type => XSD::QName.new(NsV19, "PackagingDescription"),
    :schema_element => [
      ["packagingId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingId")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV19, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV19, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedContact,
    :schema_type => XSD::QName.new(NsV19, "ParsedContact"),
    :schema_element => [
      ["personName", ["FedexWebServices::Soap::UploadDocument::ParsedPersonName", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberCountryCode")], [0, 1]],
      ["phoneNumberAreaCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberAreaCode")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ParsedContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::UploadDocument::ParsedContact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedPersonName,
    :schema_type => XSD::QName.new(NsV19, "ParsedPersonName"),
    :schema_element => [
      ["prefix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Prefix")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FirstName")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MiddleName")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LastName")], [0, 1]],
      ["suffix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Suffix")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Party,
    :schema_type => XSD::QName.new(NsV19, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::UploadDocument::TaxpayerIdentification[]", XSD::QName.new(NsV19, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Payment,
    :schema_type => XSD::QName.new(NsV19, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::UploadDocument::PaymentType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::UploadDocument::Payor", XSD::QName.new(NsV19, "Payor")], [0, 1]],
      ["ePaymentDetail", ["FedexWebServices::Soap::UploadDocument::EPaymentDetail", XSD::QName.new(NsV19, "EPaymentDetail")], [0, 1]],
      ["creditCard", ["FedexWebServices::Soap::UploadDocument::CreditCard", XSD::QName.new(NsV19, "CreditCard")], [0, 1]],
      ["creditCardTransactionDetail", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionDetail", XSD::QName.new(NsV19, "CreditCardTransactionDetail")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Payor,
    :schema_type => XSD::QName.new(NsV19, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::UploadDocument::AssociatedAccount[]", XSD::QName.new(NsV19, "AssociatedAccounts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentAccessDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentAccessDetail"),
    :schema_element => [
      ["accessorDetails", ["FedexWebServices::Soap::UploadDocument::PendingShipmentAccessorDetail[]", XSD::QName.new(NsV19, "AccessorDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentAccessorDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentAccessorDetail"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::UploadDocument::AccessorRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")], [0, 1]],
      ["emailLabelUrl", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailLabelUrl")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::PendingShipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::UploadDocument::EMailLabelDetail", XSD::QName.new(NsV19, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::UploadDocument::RecommendedDocumentSpecification", XSD::QName.new(NsV19, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupDetail,
    :schema_type => XSD::QName.new(NsV19, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::UploadDocument::PickupRequestType", XSD::QName.new(NsV19, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::UploadDocument::PickupRequestSourceType", XSD::QName.new(NsV19, "RequestSource")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PostShipmentUploadDetail,
    :schema_type => XSD::QName.new(NsV19, "PostShipmentUploadDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PrintedReference,
    :schema_type => XSD::QName.new(NsV19, "PrintedReference"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::PrintedReferenceType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV19, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::UploadDocument::PriorityAlertEnhancementType[]", XSD::QName.new(NsV19, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Content")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ProductName,
    :schema_type => XSD::QName.new(NsV19, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV19, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV19, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::UploadDocument::RadioactivityUnitOfMeasure", XSD::QName.new(NsV19, "UnitOfMeasure")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV19, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::UploadDocument::RadionuclideActivity", XSD::QName.new(NsV19, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::UploadDocument::PhysicalFormType", XSD::QName.new(NsV19, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ChemicalForm")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDiscount,
    :schema_type => XSD::QName.new(NsV19, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::UploadDocument::RateDiscountType", XSD::QName.new(NsV19, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Rebate,
    :schema_type => XSD::QName.new(NsV19, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::UploadDocument::RebateType", XSD::QName.new(NsV19, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV19, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::RecipientCustomsIdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::RecommendedDocumentType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::RegulatoryLabelType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV19, "GenerationOptions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedDistributionLocation,
    :schema_type => XSD::QName.new(NsV19, "RequestedDistributionLocation"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::FedExDistributionLocationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "LocationNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "LocationContactAndAddress")], [0, 1]],
      ["clearanceNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceNumber")], [0, 1]],
      ["inclusionSpecifications", ["FedexWebServices::Soap::UploadDocument::ShipmentInclusionSpecification[]", XSD::QName.new(NsV19, "InclusionSpecifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV19, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupPackageCount")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::UploadDocument::PackageStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::UploadDocument::TrackingId[]", XSD::QName.new(NsV19, "TrackingIds")], [0, nil]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail", XSD::QName.new(NsV19, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["weightSource", ["FedexWebServices::Soap::UploadDocument::WeightSource", XSD::QName.new(NsV19, "WeightSource")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::UploadDocument::PhysicalPackagingType", XSD::QName.new(NsV19, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::UploadDocument::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV19, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::PackageSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["specialHandlingDetail", ["FedexWebServices::Soap::UploadDocument::PackageSpecialHandlingDetail", XSD::QName.new(NsV19, "SpecialHandlingDetail")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::UploadDocument::ContentRecord[]", XSD::QName.new(NsV19, "ContentRecords")], [0, nil]],
      ["commodities", ["FedexWebServices::Soap::UploadDocument::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::UploadDocument::ShipperConveyanceDetail", XSD::QName.new(NsV19, "ConveyanceDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedShipment,
    :schema_type => XSD::QName.new(NsV19, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ShipTimestamp")], [0, 1]],
      ["dropoffType", ["FedexWebServices::Soap::UploadDocument::DropoffType", XSD::QName.new(NsV19, "DropoffType")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["shippingCycle", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShippingCycle")], [0, 1]],
      ["manifestDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentManifestDetail", XSD::QName.new(NsV19, "ManifestDetail")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::UploadDocument::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV19, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuredValue")], [0, 1]],
      ["totalDimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "TotalDimensions")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentAuthorizationDetail", XSD::QName.new(NsV19, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Shipper")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::ShipmentSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetail", XSD::QName.new(NsV19, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::UploadDocument::FreightShipmentDetail", XSD::QName.new(NsV19, "FreightShipmentDetail")], [0, 1]],
      ["consolidationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentConsolidationDetail", XSD::QName.new(NsV19, "ConsolidationDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail", XSD::QName.new(NsV19, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::UploadDocument::CustomsClearanceDetail", XSD::QName.new(NsV19, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::UploadDocument::PickupDetail", XSD::QName.new(NsV19, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentDetail", XSD::QName.new(NsV19, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "BlockInsightVisibility")], [0, 1]],
      ["errorLabelBehavior", ["FedexWebServices::Soap::UploadDocument::ErrorLabelBehaviorType", XSD::QName.new(NsV19, "ErrorLabelBehavior")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::UploadDocument::LabelSpecification", XSD::QName.new(NsV19, "LabelSpecification")], [0, 1]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentSpecification", XSD::QName.new(NsV19, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::UploadDocument::RateRequestType[]", XSD::QName.new(NsV19, "RateRequestTypes")], [0, nil]],
      ["customerSelectedActualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "CustomerSelectedActualRateType")], [0, 1]],
      ["edtRequestType", ["FedexWebServices::Soap::UploadDocument::EdtRequestType", XSD::QName.new(NsV19, "EdtRequestType")], [0, 1]],
      ["customRatingOptionDetail", ["FedexWebServices::Soap::UploadDocument::CustomRatingOptionDetail", XSD::QName.new(NsV19, "CustomRatingOptionDetail")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "MasterTrackingId")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["shipmentOnlyFields", ["FedexWebServices::Soap::UploadDocument::ShipmentOnlyFieldsType[]", XSD::QName.new(NsV19, "ShipmentOnlyFields")], [0, nil]],
      ["configurationData", ["FedexWebServices::Soap::UploadDocument::ShipmentConfigurationData", XSD::QName.new(NsV19, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::UploadDocument::RequestedPackageLineItem[]", XSD::QName.new(NsV19, "RequestedPackageLineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::UploadDocument::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV19, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::UploadDocument::ReturnType", XSD::QName.new(NsV19, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::UploadDocument::Rma", XSD::QName.new(NsV19, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::UploadDocument::ReturnEMailDetail", XSD::QName.new(NsV19, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::UploadDocument::ReturnAssociationDetail", XSD::QName.new(NsV19, "ReturnAssociation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Rma,
    :schema_type => XSD::QName.new(NsV19, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ServiceDescription,
    :schema_type => XSD::QName.new(NsV19, "ServiceDescription"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]],
      ["operatingOrgCodes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "OperatingOrgCodes")], [0, nil]],
      ["serviceCategory", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCategory")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV19, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail[]", XSD::QName.new(NsV19, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentConsolidationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentConsolidationDetail"),
    :schema_element => [
      ["relationshipTimestamp", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RelationshipTimestamp")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::ConsolidationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["associatedTrackingIds", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingId[]", XSD::QName.new(NsV19, "AssociatedTrackingIds")], [0, nil]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["consolidationOriginAddress", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "ConsolidationOriginAddress")], [0, 1]],
      ["internationalDistributionDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentInternationalDistributionDetail", XSD::QName.new(NsV19, "InternationalDistributionDetail")], [0, 1]],
      ["transborderDistributionDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentTransborderDistributionDetail", XSD::QName.new(NsV19, "TransborderDistributionDetail")], [0, 1]],
      ["distributionLocations", ["FedexWebServices::Soap::UploadDocument::RequestedDistributionLocation[]", XSD::QName.new(NsV19, "DistributionLocations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationAggregationType", XSD::QName.new(NsV19, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV19, "EventNotifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::UploadDocument::NotificationEventType[]", XSD::QName.new(NsV19, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::UploadDocument::NotificationDetail", XSD::QName.new(NsV19, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV19, "FormatSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentInclusionSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentInclusionSpecification"),
    :schema_element => [
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["serviceCategory", ["FedexWebServices::Soap::UploadDocument::ServiceCategoryType", XSD::QName.new(NsV19, "ServiceCategory")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentInternationalDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentInternationalDistributionDetail"),
    :schema_element => [
      ["clearanceFacilityLocId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceFacilityLocId")], [0, 1]],
      ["clearanceType", ["FedexWebServices::Soap::UploadDocument::DistributionClearanceType", XSD::QName.new(NsV19, "ClearanceType")], [0, 1]],
      ["summaryDetail", ["FedexWebServices::Soap::UploadDocument::InternationalDistributionSummaryDetail", XSD::QName.new(NsV19, "SummaryDetail")], [0, 1]],
      ["splitPaymentSpecification", ["FedexWebServices::Soap::UploadDocument::SplitPaymentSpecification", XSD::QName.new(NsV19, "SplitPaymentSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::UploadDocument::PricingCodeType", XSD::QName.new(NsV19, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate", XSD::QName.new(NsV19, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType[]", XSD::QName.new(NsV19, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType", XSD::QName.new(NsV19, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::UploadDocument::FreightRateDetail", XSD::QName.new(NsV19, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::EdtCommodityTax[]", XSD::QName.new(NsV19, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentManifestDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentManifestDetail"),
    :schema_element => [
      ["manifestReferenceType", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "ManifestReferenceType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::NotificationFormatType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentOperationalDetail"),
    :schema_element => [
      ["ursaPrefixCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrsaPrefixCode")], [0, 1]],
      ["ursaSuffixCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrsaSuffixCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginLocationId")], [0, 1]],
      ["originLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "OriginLocationNumber")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginServiceArea")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationId")], [0, 1]],
      ["destinationLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "DestinationLocationNumber")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceArea")], [0, 1]],
      ["destinationLocationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationStateOrProvinceCode")], [0, 1]],
      ["deliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "DeliveryDate")], [0, 1]],
      ["deliveryDay", ["FedexWebServices::Soap::UploadDocument::DayOfWeekType", XSD::QName.new(NsV19, "DeliveryDay")], [0, 1]],
      ["publishedDeliveryTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "PublishedDeliveryTime")], [0, 1]],
      ["commitDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "CommitDate")], [0, 1]],
      ["commitDay", ["FedexWebServices::Soap::UploadDocument::DayOfWeekType", XSD::QName.new(NsV19, "CommitDay")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "MaximumTransitTime")], [0, 1]],
      ["customTransitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "CustomTransitTime")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["deliveryEligibilities", ["FedexWebServices::Soap::UploadDocument::GroundDeliveryEligibilityType[]", XSD::QName.new(NsV19, "DeliveryEligibilities")], [0, nil]],
      ["astraPlannedServiceLevel", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraPlannedServiceLevel")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AirportId")], [0, 1]],
      ["serviceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCode")], [0, 1]],
      ["packagingCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingCode")], [0, 1]],
      ["scac", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Scac")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["customTransitTimeDetail", ["FedexWebServices::Soap::UploadDocument::CustomTransitTimeDetail", XSD::QName.new(NsV19, "CustomTransitTimeDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::UploadDocument::PricingCodeType", XSD::QName.new(NsV19, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["quoteCreatorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuoteCreatorId")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate", XSD::QName.new(NsV19, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType[]", XSD::QName.new(NsV19, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType", XSD::QName.new(NsV19, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::UploadDocument::ShipmentLegRateDetail[]", XSD::QName.new(NsV19, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::UploadDocument::FreightRateDetail", XSD::QName.new(NsV19, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::EdtCommodityTax[]", XSD::QName.new(NsV19, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTax[]", XSD::QName.new(NsV19, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentRating,
    :schema_type => XSD::QName.new(NsV19, "ShipmentRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "EffectiveNetDiscount")], [0, 1]],
      ["shipmentRateDetails", ["FedexWebServices::Soap::UploadDocument::ShipmentRateDetail[]", XSD::QName.new(NsV19, "ShipmentRateDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::UploadDocument::CodDetail", XSD::QName.new(NsV19, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::UploadDocument::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV19, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::UploadDocument::HoldAtLocationDetail", XSD::QName.new(NsV19, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationDetail", XSD::QName.new(NsV19, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::UploadDocument::ReturnShipmentDetail", XSD::QName.new(NsV19, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::UploadDocument::PendingShipmentDetail", XSD::QName.new(NsV19, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::UploadDocument::InternationalControlledExportDetail", XSD::QName.new(NsV19, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::UploadDocument::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV19, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumDetail", XSD::QName.new(NsV19, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::UploadDocument::FlatbedTrailerDetail", XSD::QName.new(NsV19, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::UploadDocument::FreightGuaranteeDetail", XSD::QName.new(NsV19, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::UploadDocument::EtdDetail", XSD::QName.new(NsV19, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::UploadDocument::ExtraLaborDetail", XSD::QName.new(NsV19, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::UploadDocument::PalletShrinkwrapDetail", XSD::QName.new(NsV19, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::UploadDocument::PalletsProvidedDetail", XSD::QName.new(NsV19, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::UploadDocument::DetentionDetail", XSD::QName.new(NsV19, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::UploadDocument::MarkingOrTaggingDetail", XSD::QName.new(NsV19, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::UploadDocument::NonBusinessTimeDetail", XSD::QName.new(NsV19, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentAssemblyDetail", XSD::QName.new(NsV19, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::UploadDocument::SortAndSegregateDetail", XSD::QName.new(NsV19, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentDetail", XSD::QName.new(NsV19, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::UploadDocument::StorageDetail", XSD::QName.new(NsV19, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::UploadDocument::WeighingDetail", XSD::QName.new(NsV19, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowDetail", XSD::QName.new(NsV19, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentTransborderDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentTransborderDistributionDetail"),
    :schema_element => [
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["summaryDetail", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSummaryDetail", XSD::QName.new(NsV19, "SummaryDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Values")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocument,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ReturnedShippingDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::UploadDocument::Localization[]", XSD::QName.new(NsV19, "Localizations")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["shippingDocumentDisposition", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType", XSD::QName.new(NsV19, "ShippingDocumentDisposition")], [0, 1]],
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccessReference")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Resolution")], [0, 1]],
      ["copiesToPrint", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "CopiesToPrint")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentPart[]", XSD::QName.new(NsV19, "Parts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType", XSD::QName.new(NsV19, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetail", XSD::QName.new(NsV19, "StorageDetail")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailDetail", XSD::QName.new(NsV19, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentPrintDetail", XSD::QName.new(NsV19, "PrintDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV19, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::UploadDocument::EMailNotificationRecipientType", XSD::QName.new(NsV19, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::UploadDocument::LinearMeasure", XSD::QName.new(NsV19, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStockType", XSD::QName.new(NsV19, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::UploadDocument::DocumentFormatOptionsRequested", XSD::QName.new(NsV19, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomDocumentIdentifier")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentPart,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentPart"),
    :schema_element => [
      ["documentPartSequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "DocumentPartSequenceNumber")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PrinterId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "ShippingDocumentTypes")], [0, nil]],
      ["notificationContentSpecification", ["FedexWebServices::Soap::UploadDocument::NotificationContentSpecification", XSD::QName.new(NsV19, "NotificationContentSpecification")], [0, 1]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::UploadDocument::CertificateOfOriginDetail", XSD::QName.new(NsV19, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::UploadDocument::CommercialInvoiceDetail", XSD::QName.new(NsV19, "CommercialInvoiceDetail")], [0, 1]],
      ["usmcaCommercialInvoiceCertificationOfOriginDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCommercialInvoiceCertificationOfOriginDetail", XSD::QName.new(NsV19, "UsmcaCommercialInvoiceCertificationOfOriginDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::UploadDocument::CustomDocumentDetail[]", XSD::QName.new(NsV19, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::UploadDocument::CustomDocumentDetail[]", XSD::QName.new(NsV19, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::UploadDocument::ExportDeclarationDetail", XSD::QName.new(NsV19, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::UploadDocument::GeneralAgencyAgreementDetail", XSD::QName.new(NsV19, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["usmcaCertificationOfOriginDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCertificationOfOriginDetail", XSD::QName.new(NsV19, "UsmcaCertificationOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::UploadDocument::Op900Detail", XSD::QName.new(NsV19, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV19, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::UploadDocument::FreightAddressLabelDetail", XSD::QName.new(NsV19, "FreightAddressLabelDetail")], [0, 1]],
      ["freightBillOfLadingDetail", ["FedexWebServices::Soap::UploadDocument::FreightBillOfLadingDetail", XSD::QName.new(NsV19, "FreightBillOfLadingDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::UploadDocument::ReturnInstructionsDetail", XSD::QName.new(NsV19, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStorageDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetailType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["filePath", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FilePath")], [0, 1]],
      ["fileNaming", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentNamingType", XSD::QName.new(NsV19, "FileNaming")], [0, 1]],
      ["fileSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileSuffix")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::UploadDocument::SignatureOptionType", XSD::QName.new(NsV19, "OptionType")], [0, 1]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::UploadDocument::SmartPostIndiciaType", XSD::QName.new(NsV19, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::UploadDocument::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV19, "AncillaryEndorsement")], [0, 1]],
      ["specialServices", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServices")], [0, nil]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerManifestId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmsDetail,
    :schema_type => XSD::QName.new(NsV19, "SmsDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberCountryCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV19, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentLineItem[]", XSD::QName.new(NsV19, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialServiceDescription,
    :schema_type => XSD::QName.new(NsV19, "SpecialServiceDescription"),
    :schema_element => [
      ["identifier", ["FedexWebServices::Soap::UploadDocument::OfferingIdentifierDetail", XSD::QName.new(NsV19, "Identifier")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentDetail,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::SplitPaymentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "Payment")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentSpecification,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentSpecification"),
    :schema_element => [
      ["payments", ["FedexWebServices::Soap::UploadDocument::SplitPaymentDetail[]", XSD::QName.new(NsV19, "Payments")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StorageDetail,
    :schema_type => XSD::QName.new(NsV19, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StringBarcode,
    :schema_type => XSD::QName.new(NsV19, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::StringBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Surcharge,
    :schema_type => XSD::QName.new(NsV19, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::UploadDocument::SurchargeType", XSD::QName.new(NsV19, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::UploadDocument::SurchargeLevelType", XSD::QName.new(NsV19, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Tax,
    :schema_type => XSD::QName.new(NsV19, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::UploadDocument::TaxType", XSD::QName.new(NsV19, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV19, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::UploadDocument::TinType", XSD::QName.new(NsV19, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TrackingId,
    :schema_type => XSD::QName.new(NsV19, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::UploadDocument::TrackingIdType", XSD::QName.new(NsV19, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionLtlDetail,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionLtlDetail"),
    :schema_element => [
      ["payment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "Payment")], [0, 1]],
      ["ltlScacCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LtlScacCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["transborderDistributionLtlDetail", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionLtlDetail", XSD::QName.new(NsV19, "TransborderDistributionLtlDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSummaryDetail"),
    :schema_element => [
      ["expressPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ExpressPackageCount")], [0, 1]],
      ["expressTotalPackageWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalPackageWeight")], [0, 1]],
      ["expressTotalPackageAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalPackageAdjustedWeight")], [0, 1]],
      ["expressFreightPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ExpressFreightPackageCount")], [0, 1]],
      ["expressTotalFreightWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalFreightWeight")], [0, 1]],
      ["expressTotalFreightAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalFreightAdjustedWeight")], [0, 1]],
      ["groundPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroundPackageCount")], [0, 1]],
      ["groundTotalPackageWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "GroundTotalPackageWeight")], [0, 1]],
      ["groundTotalPackageAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "GroundTotalPackageAdjustedWeight")], [0, 1]],
      ["numberOfUnconsolidatedCommodities", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfUnconsolidatedCommodities")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileName")], [0, 1]],
      ["documentContent", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "DocumentContent")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType", XSD::QName.new(NsV19, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer", XSD::QName.new(NsV19, "DocumentIdProducer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType", XSD::QName.new(NsV19, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileName")], [0, 1]],
      ["status", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusInfo", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusInfoType", XSD::QName.new(NsV19, "StatusInfo")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer", XSD::QName.new(NsV19, "DocumentIdProducer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["postShipmentUploadDetail", ["FedexWebServices::Soap::UploadDocument::PostShipmentUploadDetail", XSD::QName.new(NsV19, "PostShipmentUploadDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsReply,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentRequirements", ["FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail", XSD::QName.new(NsV19, "DocumentRequirements")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]],
      ["originCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginCountryCode")], [0, 1]],
      ["originStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginStateOrProvinceCode")], [0, 1]],
      ["originPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginPostalCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginLocationId")], [0, 1]],
      ["destinationCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationCountryCode")], [0, 1]],
      ["destinationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationStateOrProvinceCode")], [0, 1]],
      ["destinationPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationPostalCode")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationId")], [0, 1]],
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FolderId")], [0, 1]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ShipTimestamp")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["usage", ["FedexWebServices::Soap::UploadDocument::DocumentUsageType", XSD::QName.new(NsV19, "Usage")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataReply,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentReferenceStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentReferenceStatuses")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["shippingDocumentTypesToProduce", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "ShippingDocumentTypesToProduce")], [0, nil]],
      ["customerProvidedImages", ["FedexWebServices::Soap::UploadDocument::CustomerProvidedImage[]", XSD::QName.new(NsV19, "CustomerProvidedImages")], [0, nil]],
      ["requestedShipment", ["FedexWebServices::Soap::UploadDocument::RequestedShipment", XSD::QName.new(NsV19, "RequestedShipment")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::UploadDocument::CompletedShipmentDetail", XSD::QName.new(NsV19, "CompletedShipmentDetail")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadImageDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesReply,
    :schema_type => XSD::QName.new(NsV19, "UploadImagesReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["imageStatuses", ["FedexWebServices::Soap::UploadDocument::ImageUploadStatusDetail[]", XSD::QName.new(NsV19, "ImageStatuses")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadImagesRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["images", ["FedexWebServices::Soap::UploadDocument::UploadImageDetail[]", XSD::QName.new(NsV19, "Images")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::UploadDocument::DateRange", XSD::QName.new(NsV19, "BlanketPeriod")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType", XSD::QName.new(NsV19, "CertifierSpecification")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaImporterSpecificationType", XSD::QName.new(NsV19, "ImporterSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType", XSD::QName.new(NsV19, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Producer")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCommercialInvoiceCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCommercialInvoiceCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormVersion")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType", XSD::QName.new(NsV19, "CertifierSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType", XSD::QName.new(NsV19, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Producer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCommodityDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCommodityDetail"),
    :schema_element => [
      ["originCriterion", ["FedexWebServices::Soap::UploadDocument::UsmcaOriginCriterionCode", XSD::QName.new(NsV19, "OriginCriterion")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityDescription", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["massPoints", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "MassPoints")], [0, 1]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail", XSD::QName.new(NsV19, "Options")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::UploadDocument::NetExplosiveDetail", XSD::QName.new(NsV19, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType", XSD::QName.new(NsV19, "PackingGroup")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackingInstructions")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingName")], [0, 1]],
      ["properShippingNameAndDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingNameAndDescription")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TechnicalName")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SubsidiaryClasses")], [0, nil]],
      ["symbols", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Symbols")], [0, 1]],
      ["tunnelRestrictionCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TunnelRestrictionCode")], [0, 1]],
      ["specialProvisions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialProvisions")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Authorization")], [0, 1]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LabelText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousContainer,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousContainer"),
    :schema_element => [
      ["qValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "QValue")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityContent[]", XSD::QName.new(NsV19, "HazardousCommodities")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV19, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::UploadDocument::RateElementBasisType", XSD::QName.new(NsV19, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::UploadDocument::RateTypeBasisType", XSD::QName.new(NsV19, "RateTypeBasis")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::UploadDocument::RateLevelBasisType", XSD::QName.new(NsV19, "RateLevelBasis")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV19, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Volume,
    :schema_type => XSD::QName.new(NsV19, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::UploadDocument::VolumeUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeighingDetail,
    :schema_type => XSD::QName.new(NsV19, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::WeighingScaleType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Weight,
    :schema_type => XSD::QName.new(NsV19, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::UploadDocument::WeightUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential", XSD::QName.new(NsV19, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential", XSD::QName.new(NsV19, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VersionId,
    :schema_type => XSD::QName.new(NsV19, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV19, "AccessorRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV19, "AdditionalLabelsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV19, "AlcoholRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV19, "AncillaryFeeAndTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedAccountNumberType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedShipmentType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedTrackingIdType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedTrackingIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV19, "B13AFilingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV19, "BarcodeSymbologyType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV19, "BatteryMaterialType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV19, "BatteryPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV19, "BatteryRegulatorySubType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BinaryBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "BinaryBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BrokerType,
    :schema_type => XSD::QName.new(NsV19, "BrokerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV19, "CarrierCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV19, "ChargeBasisLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV19, "ClearanceBrokerageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV19, "CodAddTransportationChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAdjustmentType,
    :schema_type => XSD::QName.new(NsV19, "CodAdjustmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodCollectionType,
    :schema_type => XSD::QName.new(NsV19, "CodCollectionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV19, "CodReturnReferenceIndicatorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV19, "CommodityPurposeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedEtdType,
    :schema_type => XSD::QName.new(NsV19, "CompletedEtdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationShipmentRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardAuthorizationType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardAuthorizationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardSettlementScheduleType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardSettlementScheduleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributeType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV19, "CustomDeliveryWindowType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelCoordinateUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomRatingOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomRatingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV19, "CustomerImageUsageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV19, "CustomerReferenceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomerSpecifiedLabelGenerationOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementType,
    :schema_type => XSD::QName.new(NsV19, "CustomsDeclarationStatementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DamageStatusType,
    :schema_type => XSD::QName.new(NsV19, "DamageStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsAccessibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsDescriptorType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsDescriptorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsPackingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV19, "DayOfWeekType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeleteRecordedShipmentRequestServiceLevel,
    :schema_type => XSD::QName.new(NsV19, "DeleteRecordedShipmentRequestServiceLevel")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV19, "DestinationControlStatementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DistributionClearanceType,
    :schema_type => XSD::QName.new(NsV19, "DistributionClearanceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentType,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV19, "DocTabZoneJustificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV19, "DocumentFormatOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentUsageType,
    :schema_type => XSD::QName.new(NsV19, "DocumentUsageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DropoffType,
    :schema_type => XSD::QName.new(NsV19, "DropoffType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV19, "EMailNotificationRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentModeType,
    :schema_type => XSD::QName.new(NsV19, "EPaymentModeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentProcessorType,
    :schema_type => XSD::QName.new(NsV19, "EPaymentProcessorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtRequestType,
    :schema_type => XSD::QName.new(NsV19, "EdtRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtTaxType,
    :schema_type => XSD::QName.new(NsV19, "EdtTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EmailOptionType,
    :schema_type => XSD::QName.new(NsV19, "EmailOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType,
    :schema_type => XSD::QName.new(NsV19, "EnterpriseDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ErrorLabelBehaviorType,
    :schema_type => XSD::QName.new(NsV19, "ErrorLabelBehaviorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV19, "EtdAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV19, "EtdConfirmationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FedExDistributionLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExDistributionLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FedExLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV19, "FlatbedTrailerOption")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV19, "FreightBaseChargeCalculationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV19, "FreightChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightClassType,
    :schema_type => XSD::QName.new(NsV19, "FreightClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV19, "FreightCollectTermsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV19, "FreightGuaranteeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV19, "FreightOnValueType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV19, "FreightRateQuoteType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::GroundDeliveryEligibilityType,
    :schema_type => XSD::QName.new(NsV19, "GroundDeliveryEligibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityAttributeType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityDescriptionProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityLabelTextOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackingGroupType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityQuantityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityRegulationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV19, "HazardousContainerPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV19, "HomeDeliveryPremiumType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageId,
    :schema_type => XSD::QName.new(NsV19, "ImageId")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InspectionStatusType,
    :schema_type => XSD::QName.new(NsV19, "InspectionStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternalImageType,
    :schema_type => XSD::QName.new(NsV19, "InternalImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV19, "InternationalControlledExportType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV19, "InternationalDocumentContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelFormatType,
    :schema_type => XSD::QName.new(NsV19, "LabelFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV19, "LabelMaskableDataType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelOrderType,
    :schema_type => XSD::QName.new(NsV19, "LabelOrderType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV19, "LabelPrintingOrientationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelRotationType,
    :schema_type => XSD::QName.new(NsV19, "LabelRotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecificationProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelStockType,
    :schema_type => XSD::QName.new(NsV19, "LabelStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV19, "LiabilityCoverageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LinearUnits,
    :schema_type => XSD::QName.new(NsV19, "LinearUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV19, "MinimumChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV19, "NetExplosiveClassificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationContentType,
    :schema_type => XSD::QName.new(NsV19, "NotificationContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationEventType,
    :schema_type => XSD::QName.new(NsV19, "NotificationEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV19, "NotificationFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV19, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationType,
    :schema_type => XSD::QName.new(NsV19, "NotificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OversizeClassType,
    :schema_type => XSD::QName.new(NsV19, "OversizeClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageLineItemStatusType,
    :schema_type => XSD::QName.new(NsV19, "PackageLineItemStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackagePackedByType,
    :schema_type => XSD::QName.new(NsV19, "PackagePackedByType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV19, "PageQuadrantType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PaymentType,
    :schema_type => XSD::QName.new(NsV19, "PaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalFormType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalPackagingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV19, "PickupRequestSourceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupRequestType,
    :schema_type => XSD::QName.new(NsV19, "PickupRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PricingCodeType,
    :schema_type => XSD::QName.new(NsV19, "PricingCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PrintedReferenceType,
    :schema_type => XSD::QName.new(NsV19, "PrintedReferenceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV19, "PriorityAlertEnhancementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV19, "PurposeOfShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV19, "RadioactiveContainerClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactiveLabelType,
    :schema_type => XSD::QName.new(NsV19, "RadioactiveLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV19, "RadioactivityUnitOfMeasure")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV19, "RateDimensionalDivisorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDiscountType,
    :schema_type => XSD::QName.new(NsV19, "RateDiscountType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateElementBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateLevelBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateLevelBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateRequestType,
    :schema_type => XSD::QName.new(NsV19, "RateRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateTypeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV19, "RatedWeightMethod")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RebateType,
    :schema_type => XSD::QName.new(NsV19, "RebateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV19, "RecipientCustomsIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RecommendedDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryControlType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV19, "RelativeVerticalPositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RequestedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequiredDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RequiredDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequirementType,
    :schema_type => XSD::QName.new(NsV19, "RequirementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "ReturnEMailAllowedSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnType,
    :schema_type => XSD::QName.new(NsV19, "ReturnType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV19, "ReturnedRateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "ReturnedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RotationType,
    :schema_type => XSD::QName.new(NsV19, "RotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "SecondaryBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ServiceCategoryType,
    :schema_type => XSD::QName.new(NsV19, "ServiceCategoryType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationAggregationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentOnlyFieldsType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentOnlyFieldsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentDispositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentNamingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentNamingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetailType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStorageDetailType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV19, "SignatureOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostAncillaryEndorsementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostIndiciaType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV19, "SpecialRatingAppliedType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentType,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "StringBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV19, "SurchargeLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SurchargeType,
    :schema_type => XSD::QName.new(NsV19, "SurchargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxType,
    :schema_type => XSD::QName.new(NsV19, "TaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV19, "TaxesOrMiscellaneousChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TinType,
    :schema_type => XSD::QName.new(NsV19, "TinType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TrackingIdType,
    :schema_type => XSD::QName.new(NsV19, "TrackingIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransitTimeType,
    :schema_type => XSD::QName.new(NsV19, "TransitTimeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentIdProducer")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentProducerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusInfoType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusInfoType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageStatusInfoType,
    :schema_type => XSD::QName.new(NsV19, "UploadImageStatusInfoType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageStatusType,
    :schema_type => XSD::QName.new(NsV19, "UploadImageStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCertifierSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaImporterSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaOriginCriterionCode,
    :schema_type => XSD::QName.new(NsV19, "UsmcaOriginCriterionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaProducerSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VolumeUnits,
    :schema_type => XSD::QName.new(NsV19, "VolumeUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV19, "WeighingScaleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeightSource,
    :schema_type => XSD::QName.new(NsV19, "WeightSource")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeightUnits,
    :schema_type => XSD::QName.new(NsV19, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV19, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AdditionalLabelsType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Address,
    :schema_type => XSD::QName.new(NsV19, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV19, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GeographicCoordinates")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdrLicenseDetail,
    :schema_type => XSD::QName.new(NsV19, "AdrLicenseDetail"),
    :schema_element => [
      ["licenseOrPermitDetail", ["FedexWebServices::Soap::UploadDocument::LicenseOrPermitDetail", XSD::QName.new(NsV19, "LicenseOrPermitDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV19, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::UploadDocument::AlcoholRecipientType", XSD::QName.new(NsV19, "RecipientType")], [0, 1]],
      ["shipperAgreementType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShipperAgreementType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV19, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTaxType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV19, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedAccountNumberType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV19, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "AssociatedShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedShipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["sender", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Sender")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["shipmentOperationalDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail", XSD::QName.new(NsV19, "ShipmentOperationalDetail")], [0, 1]],
      ["packageOperationalDetail", ["FedexWebServices::Soap::UploadDocument::PackageOperationalDetail", XSD::QName.new(NsV19, "PackageOperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedTrackingId,
    :schema_type => XSD::QName.new(NsV19, "AssociatedTrackingId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingIdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV19, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::UploadDocument::BatteryMaterialType", XSD::QName.new(NsV19, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::UploadDocument::BatteryPackingType", XSD::QName.new(NsV19, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::UploadDocument::BatteryRegulatorySubType", XSD::QName.new(NsV19, "RegulatorySubType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BinaryBarcode,
    :schema_type => XSD::QName.new(NsV19, "BinaryBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::BinaryBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BrokerDetail,
    :schema_type => XSD::QName.new(NsV19, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::BrokerType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Broker")], [0, 1]],
      ["brokerageProcessingChargesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "BrokerageProcessingChargesPayment")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ClientDetail,
    :schema_type => XSD::QName.new(NsV19, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV19, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::UploadDocument::RateTypeBasisType", XSD::QName.new(NsV19, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::UploadDocument::CodAddTransportationChargeBasisType", XSD::QName.new(NsV19, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::UploadDocument::ChargeBasisLevelType", XSD::QName.new(NsV19, "ChargeBasisLevel")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::UploadDocument::RateLevelBasisType", XSD::QName.new(NsV19, "RateLevelBasis")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodDetail,
    :schema_type => XSD::QName.new(NsV19, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::UploadDocument::CodAddTransportationChargesDetail", XSD::QName.new(NsV19, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::UploadDocument::CodCollectionType", XSD::QName.new(NsV19, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::UploadDocument::CodReturnReferenceIndicatorType", XSD::QName.new(NsV19, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "ReturnTrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodReturnPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CodReturnPackageDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::UploadDocument::CodAdjustmentType", XSD::QName.new(NsV19, "AdjustmentType")], [0, 1]],
      ["electronic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Electronic")], [0, 1]],
      ["barcodes", ["FedexWebServices::Soap::UploadDocument::PackageBarcodes", XSD::QName.new(NsV19, "Barcodes")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV19, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Comments")], [0, nil]],
      ["freightCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::UploadDocument::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV19, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::UploadDocument::PurposeOfShipmentType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["purposeOfShipmentDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PurposeOfShipmentDescription")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TermsOfSale")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV19, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormVersion")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Commodity,
    :schema_type => XSD::QName.new(NsV19, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::UploadDocument::CommodityPurposeType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::UploadDocument::Measure[]", XSD::QName.new(NsV19, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::UploadDocument::EdtExciseCondition[]", XSD::QName.new(NsV19, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["usmcaDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCommodityDetail", XSD::QName.new(NsV19, "UsmcaDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedCodDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedCodDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::UploadDocument::CodAdjustmentType", XSD::QName.new(NsV19, "AdjustmentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedEtdDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedEtdDetail"),
    :schema_element => [
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FolderId")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::CompletedEtdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["uploadDocumentReferenceDetails", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "UploadDocumentReferenceDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousPackageDetail"),
    :schema_element => [
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReferenceId")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType", XSD::QName.new(NsV19, "Regulation")], [0, 1]],
      ["radioactiveTransportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "RadioactiveTransportIndex")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::UploadDocument::RadioactiveLabelType", XSD::QName.new(NsV19, "LabelType")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousContainer[]", XSD::QName.new(NsV19, "Containers")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousShipmentDetail"),
    :schema_element => [
      ["hazardousSummaryDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousSummaryDetail", XSD::QName.new(NsV19, "HazardousSummaryDetail")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "DryIceDetail")], [0, 1]],
      ["adrLicense", ["FedexWebServices::Soap::UploadDocument::AdrLicenseDetail", XSD::QName.new(NsV19, "AdrLicense")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHazardousSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHazardousSummaryDetail"),
    :schema_element => [
      ["smallQuantityExceptionPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SmallQuantityExceptionPackageCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedHoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedHoldAtLocationDetail"),
    :schema_element => [
      ["holdingLocation", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "HoldingLocation")], [0, 1]],
      ["holdingLocationType", ["FedexWebServices::Soap::UploadDocument::FedExLocationType", XSD::QName.new(NsV19, "HoldingLocationType")], [0, 1]],
      ["holdingLocationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HoldingLocationTypeForDisplay")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedPackageDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedPackageDetail"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::UploadDocument::TrackingId[]", XSD::QName.new(NsV19, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupNumber")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::UploadDocument::OversizeClassType", XSD::QName.new(NsV19, "OversizeClass")], [0, 1]],
      ["packageRating", ["FedexWebServices::Soap::UploadDocument::PackageRating", XSD::QName.new(NsV19, "PackageRating")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::UploadDocument::SpecialServiceDescription[]", XSD::QName.new(NsV19, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::UploadDocument::PackageOperationalDetail", XSD::QName.new(NsV19, "OperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::UploadDocument::ShippingDocument", XSD::QName.new(NsV19, "Label")], [0, 1]],
      ["packageDocuments", ["FedexWebServices::Soap::UploadDocument::ShippingDocument[]", XSD::QName.new(NsV19, "PackageDocuments")], [0, nil]],
      ["codReturnDetail", ["FedexWebServices::Soap::UploadDocument::CodReturnPackageDetail", XSD::QName.new(NsV19, "CodReturnDetail")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::UploadDocument::SignatureOptionType", XSD::QName.new(NsV19, "SignatureOption")], [0, 1]],
      ["dryIceWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DryIceWeight")], [0, 1]],
      ["hazardousPackageDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousPackageDetail", XSD::QName.new(NsV19, "HazardousPackageDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedShipmentConsolidationDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedShipmentConsolidationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ConsolidationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["completedTransborderDistributionDetail", ["FedexWebServices::Soap::UploadDocument::CompletedTransborderDistributionDetail", XSD::QName.new(NsV19, "CompletedTransborderDistributionDetail")], [0, 1]],
      ["associatedTrackingIds", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingId[]", XSD::QName.new(NsV19, "AssociatedTrackingIds")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedShipmentDetail"),
    :schema_element => [
      ["usDomestic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "UsDomestic")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "MasterTrackingId")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::UploadDocument::ServiceDescription", XSD::QName.new(NsV19, "ServiceDescription")], [0, 1]],
      ["packagingDescription", ["FedexWebServices::Soap::UploadDocument::PackagingDescription", XSD::QName.new(NsV19, "PackagingDescription")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::UploadDocument::SpecialServiceDescription[]", XSD::QName.new(NsV19, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail", XSD::QName.new(NsV19, "OperationalDetail")], [0, 1]],
      ["accessDetail", ["FedexWebServices::Soap::UploadDocument::PendingShipmentAccessDetail", XSD::QName.new(NsV19, "AccessDetail")], [0, 1]],
      ["tagDetail", ["FedexWebServices::Soap::UploadDocument::CompletedTagDetail", XSD::QName.new(NsV19, "TagDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::UploadDocument::CompletedSmartPostDetail", XSD::QName.new(NsV19, "SmartPostDetail")], [0, 1]],
      ["hazardousShipmentDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHazardousShipmentDetail", XSD::QName.new(NsV19, "HazardousShipmentDetail")], [0, 1]],
      ["shipmentRating", ["FedexWebServices::Soap::UploadDocument::ShipmentRating", XSD::QName.new(NsV19, "ShipmentRating")], [0, 1]],
      ["consolidationDetail", ["FedexWebServices::Soap::UploadDocument::CompletedShipmentConsolidationDetail", XSD::QName.new(NsV19, "ConsolidationDetail")], [0, 1]],
      ["completedHoldAtLocationDetail", ["FedexWebServices::Soap::UploadDocument::CompletedHoldAtLocationDetail", XSD::QName.new(NsV19, "CompletedHoldAtLocationDetail")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportComplianceStatement")], [0, 1]],
      ["documentRequirements", ["FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail", XSD::QName.new(NsV19, "DocumentRequirements")], [0, 1]],
      ["completedEtdDetail", ["FedexWebServices::Soap::UploadDocument::CompletedEtdDetail", XSD::QName.new(NsV19, "CompletedEtdDetail")], [0, 1]],
      ["shipmentDocuments", ["FedexWebServices::Soap::UploadDocument::ShippingDocument[]", XSD::QName.new(NsV19, "ShipmentDocuments")], [0, nil]],
      ["associatedShipments", ["FedexWebServices::Soap::UploadDocument::AssociatedShipmentDetail[]", XSD::QName.new(NsV19, "AssociatedShipments")], [0, nil]],
      ["completedCodDetail", ["FedexWebServices::Soap::UploadDocument::CompletedCodDetail", XSD::QName.new(NsV19, "CompletedCodDetail")], [0, 1]],
      ["completedPackageDetails", ["FedexWebServices::Soap::UploadDocument::CompletedPackageDetail[]", XSD::QName.new(NsV19, "CompletedPackageDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedSmartPostDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedSmartPostDetail"),
    :schema_element => [
      ["pickUpCarrier", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "PickUpCarrier")], [0, 1]],
      ["machinable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Machinable")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedTagDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTagDetail"),
    :schema_element => [
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ConfirmationNumber")], [0, 1]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "AccessTime")], [0, 1]],
      ["cutoffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "CutoffTime")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Location")], [0, 1]],
      ["deliveryCommitment", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "DeliveryCommitment")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "DispatchDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedTransborderDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTransborderDistributionDetail"),
    :schema_element => [
      ["deconsolidationLocationPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeconsolidationLocationPostalCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV19, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LiteralValue")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::UploadDocument::PriorityAlertDetail", XSD::QName.new(NsV19, "PriorityAlertDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Contact,
    :schema_type => XSD::QName.new(NsV19, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ContentRecord,
    :schema_type => XSD::QName.new(NsV19, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCard,
    :schema_type => XSD::QName.new(NsV19, "CreditCard"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::UploadDocument::CreditCardType", XSD::QName.new(NsV19, "CreditCardType")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]],
      ["lastAuthenticationByFedexDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "LastAuthenticationByFedexDate")], [0, 1]],
      ["verificationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "VerificationCode")], [0, 1]],
      ["creditCardHolder", ["FedexWebServices::Soap::UploadDocument::ParsedContactAndAddress", XSD::QName.new(NsV19, "CreditCardHolder")], [0, 1]],
      ["trackData", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "TrackData")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributesDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionAttributesDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributeType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionDetail"),
    :schema_element => [
      ["authorizationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AuthorizationId")], [0, 1]],
      ["authorizationType", ["FedexWebServices::Soap::UploadDocument::CreditCardAuthorizationType", XSD::QName.new(NsV19, "AuthorizationType")], [0, 1]],
      ["settlementScheduleType", ["FedexWebServices::Soap::UploadDocument::CreditCardSettlementScheduleType", XSD::QName.new(NsV19, "SettlementScheduleType")], [0, 1]],
      ["fraudDetectionDetail", ["FedexWebServices::Soap::UploadDocument::CreditFraudDetectionDetail", XSD::QName.new(NsV19, "FraudDetectionDetail")], [0, 1]],
      ["payorAuthenticationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PayorAuthenticationCode")], [0, 1]],
      ["payorAuthenticationSessionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PayorAuthenticationSessionId")], [0, 1]],
      ["attributesDetail", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributesDetail", XSD::QName.new(NsV19, "AttributesDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditFraudDetectionDetail,
    :schema_type => XSD::QName.new(NsV19, "CreditFraudDetectionDetail"),
    :schema_element => [
      ["ipAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IpAddress")], [0, 1]],
      ["clientCookiesEnabled", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ClientCookiesEnabled")], [0, 1]],
      ["devicePrint", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DevicePrint")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV19, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Rate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::UploadDocument::DateRange", XSD::QName.new(NsV19, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "RequestDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDiscountExclusionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDiscountExclusionDetail"),
    :schema_element => [
      ["excludedTypes", ["FedexWebServices::Soap::UploadDocument::RateDiscountType[]", XSD::QName.new(NsV19, "ExcludedTypes")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType", XSD::QName.new(NsV19, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::UploadDocument::LabelRotationType", XSD::QName.new(NsV19, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecificationId")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomDocumentIdentifier")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType", XSD::QName.new(NsV19, "BarcodeSymbology")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "BottomRightCorner")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::UploadDocument::CustomLabelCoordinateUnits", XSD::QName.new(NsV19, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelTextEntry[]", XSD::QName.new(NsV19, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelGraphicEntry[]", XSD::QName.new(NsV19, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelBoxEntry[]", XSD::QName.new(NsV19, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV19, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::UploadDocument::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV19, "BarcodeEntries")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileGraphicFullName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "X")], [0, 1]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Y")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::UploadDocument::RotationType", XSD::QName.new(NsV19, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::UploadDocument::CustomLabelPosition", XSD::QName.new(NsV19, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::UploadDocument::RotationType", XSD::QName.new(NsV19, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomRatingOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomRatingOptionDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::CustomRatingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["customDiscountExclusionDetail", ["FedexWebServices::Soap::UploadDocument::CustomDiscountExclusionDetail", XSD::QName.new(NsV19, "CustomDiscountExclusionDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomTransitTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomTransitTimeDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV19, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsageType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::UploadDocument::InternalImageType", XSD::QName.new(NsV19, "InternalImageType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerProvidedImage,
    :schema_type => XSD::QName.new(NsV19, "CustomerProvidedImage"),
    :schema_element => [
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]],
      ["imageReferenceDetail", ["FedexWebServices::Soap::UploadDocument::ImageReferenceDetail", XSD::QName.new(NsV19, "ImageReferenceDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerReference,
    :schema_type => XSD::QName.new(NsV19, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "CustomerReferenceType")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType", XSD::QName.new(NsV19, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::UploadDocument::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV19, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::UploadDocument::LabelMaskableDataType[]", XSD::QName.new(NsV19, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::UploadDocument::SecondaryBarcodeType", XSD::QName.new(NsV19, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::UploadDocument::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV19, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::UploadDocument::AdditionalLabelsDetail[]", XSD::QName.new(NsV19, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::UploadDocument::BrokerDetail[]", XSD::QName.new(NsV19, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::UploadDocument::ClearanceBrokerageType", XSD::QName.new(NsV19, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::UploadDocument::CustomsOptionDetail", XSD::QName.new(NsV19, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::UploadDocument::RecipientCustomsId", XSD::QName.new(NsV19, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::UploadDocument::InternationalDocumentContentType", XSD::QName.new(NsV19, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::UploadDocument::FreightOnValueType", XSD::QName.new(NsV19, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::UploadDocument::CommercialInvoice", XSD::QName.new(NsV19, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::UploadDocument::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::UploadDocument::ExportDetail", XSD::QName.new(NsV19, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::UploadDocument::RegulatoryControlType[]", XSD::QName.new(NsV19, "RegulatoryControls")], [0, nil]],
      ["declarationStatementDetail", ["FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementDetail", XSD::QName.new(NsV19, "DeclarationStatementDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsDeclarationStatementDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::CustomsOptionType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::UploadDocument::HazardousContainerPackingType", XSD::QName.new(NsV19, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::UploadDocument::RadioactiveContainerClassType", XSD::QName.new(NsV19, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityContent[]", XSD::QName.new(NsV19, "HazardousCommodities")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsDetail"),
    :schema_element => [
      ["uploadedTrackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UploadedTrackingNumber")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType", XSD::QName.new(NsV19, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["dangerousGoodsDescriptors", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDescriptorType[]", XSD::QName.new(NsV19, "DangerousGoodsDescriptors")], [0, nil]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsPackingOptionType", XSD::QName.new(NsV19, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsContainer[]", XSD::QName.new(NsV19, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackagingDetail", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsSignatory", XSD::QName.new(NsV19, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::UploadDocument::RadioactivityDetail", XSD::QName.new(NsV19, "RadioactivityDetail")], [0, 1]],
      ["regulatoryLineItems", ["FedexWebServices::Soap::UploadDocument::DocumentLineItem[]", XSD::QName.new(NsV19, "RegulatoryLineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Place")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DateRange,
    :schema_type => XSD::QName.new(NsV19, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeletionDetail,
    :schema_type => XSD::QName.new(NsV19, "DeletionDetail"),
    :schema_element => [
      ["deleteStatus", ["FedexWebServices::Soap::UploadDocument::DeleteRecordedShipmentRequestServiceLevel", XSD::QName.new(NsV19, "DeleteStatus")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "TrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV19, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::UploadDocument::DestinationControlStatementType[]", XSD::QName.new(NsV19, "StatementTypes")], [0, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EndUser")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DetentionDetail,
    :schema_type => XSD::QName.new(NsV19, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Dimensions,
    :schema_type => XSD::QName.new(NsV19, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::UploadDocument::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContent,
    :schema_type => XSD::QName.new(NsV19, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::UploadDocument::DocTabContentType", XSD::QName.new(NsV19, "DocTabContentType")], [0, 1]],
      ["zone001", ["FedexWebServices::Soap::UploadDocument::DocTabContentZone001", XSD::QName.new(NsV19, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::UploadDocument::DocTabContentBarcoded", XSD::QName.new(NsV19, "Barcoded")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType", XSD::QName.new(NsV19, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification", XSD::QName.new(NsV19, "Specification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification[]", XSD::QName.new(NsV19, "DocTabZoneSpecifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV19, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::UploadDocument::DocTabZoneJustificationType", XSD::QName.new(NsV19, "Justification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::DocumentFormatOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentGenerationDetail,
    :schema_type => XSD::QName.new(NsV19, "DocumentGenerationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["minimumCopiesRequired", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "MinimumCopiesRequired")], [0, 1]],
      ["letterhead", ["FedexWebServices::Soap::UploadDocument::RequirementType", XSD::QName.new(NsV19, "Letterhead")], [0, 1]],
      ["electronicSignature", ["FedexWebServices::Soap::UploadDocument::RequirementType", XSD::QName.new(NsV19, "ElectronicSignature")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentLineItem,
    :schema_type => XSD::QName.new(NsV19, "DocumentLineItem"),
    :schema_element => [
      ["values", ["FedexWebServices::Soap::UploadDocument::KeyValueDetail[]", XSD::QName.new(NsV19, "Values")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail,
    :schema_type => XSD::QName.new(NsV19, "DocumentRequirementsDetail"),
    :schema_element => [
      ["requiredDocuments", ["FedexWebServices::Soap::UploadDocument::RequiredDocumentType[]", XSD::QName.new(NsV19, "RequiredDocuments")], [0, nil]],
      ["generationDetails", ["FedexWebServices::Soap::UploadDocument::DocumentGenerationDetail[]", XSD::QName.new(NsV19, "GenerationDetails")], [0, nil]],
      ["prohibitedDocuments", ["FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType[]", XSD::QName.new(NsV19, "ProhibitedDocuments")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::UploadDocument::EMailRecipient[]", XSD::QName.new(NsV19, "Recipients")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailRecipient,
    :schema_type => XSD::QName.new(NsV19, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::AccessorRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::UploadDocument::EmailOptionsRequested", XSD::QName.new(NsV19, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentDetail,
    :schema_type => XSD::QName.new(NsV19, "EPaymentDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["ePaymentProcessor", ["FedexWebServices::Soap::UploadDocument::EPaymentProcessorType", XSD::QName.new(NsV19, "EPaymentProcessor")], [0, 1]],
      ["ePaymentMode", ["FedexWebServices::Soap::UploadDocument::EPaymentModeType", XSD::QName.new(NsV19, "EPaymentMode")], [0, 1]],
      ["maskedCreditCard", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MaskedCreditCard")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::UploadDocument::CreditCardType", XSD::QName.new(NsV19, "CreditCardType")], [0, 1]],
      ["creditCardExpirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CreditCardExpirationDate")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV19, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::EdtTaxDetail[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Total")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV19, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV19, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::UploadDocument::EdtTaxType", XSD::QName.new(NsV19, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::EmailOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdDetail,
    :schema_type => XSD::QName.new(NsV19, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::UploadDocument::EtdConfirmationType", XSD::QName.new(NsV19, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::UploadDocument::EtdAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "RequestedDocumentCopies")], [0, nil]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV19, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExportDetail,
    :schema_type => XSD::QName.new(NsV19, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::UploadDocument::B13AFilingOptionType", XSD::QName.new(NsV19, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::UploadDocument::DestinationControlDetail", XSD::QName.new(NsV19, "DestinationControlDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV19, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact", XSD::QName.new(NsV19, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact", XSD::QName.new(NsV19, "UndeliverableContact")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV19, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Phone")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV19, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FaxDetail,
    :schema_type => XSD::QName.new(NsV19, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV19, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::FlatbedTrailerOption[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::UploadDocument::PageQuadrantType", XSD::QName.new(NsV19, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::UploadDocument::DocTabContent", XSD::QName.new(NsV19, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType", XSD::QName.new(NsV19, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::UploadDocument::CustomLabelDetail", XSD::QName.new(NsV19, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV19, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::UploadDocument::FreightChargeBasisType", XSD::QName.new(NsV19, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "ExtendedAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBillOfLadingDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightBillOfLadingDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::FreightGuaranteeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "Time")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::UploadDocument::FreightRateQuoteType", XSD::QName.new(NsV19, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::UploadDocument::FreightBaseChargeCalculationType", XSD::QName.new(NsV19, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::UploadDocument::FreightBaseCharge[]", XSD::QName.new(NsV19, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::UploadDocument::FreightRateNotation[]", XSD::QName.new(NsV19, "Notations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV19, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "AlternateBilling")], [0, 1]],
      ["printedReferences", ["FedexWebServices::Soap::UploadDocument::PrintedReference[]", XSD::QName.new(NsV19, "PrintedReferences")], [0, nil]],
      ["role", ["FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::UploadDocument::FreightCollectTermsType", XSD::QName.new(NsV19, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail", XSD::QName.new(NsV19, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::UploadDocument::FreightSpecialServicePayment[]", XSD::QName.new(NsV19, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsEmergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardousMaterialsEmergencyContactNumber")], [0, 1]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::UploadDocument::FreightShipmentLineItem[]", XSD::QName.new(NsV19, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::UploadDocument::FreightClassType", XSD::QName.new(NsV19, "FreightClass")], [0, 1]],
      ["classProvidedByCustomer", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ClassProvidedByCustomer")], [0, 1]],
      ["billingMaskName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "BillingMaskName")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail", XSD::QName.new(NsV19, "LiabilityCoverageDetail")], [0, 1]],
      ["handlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "HandlingUnits")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::UploadDocument::PhysicalPackagingType", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Pieces")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NmfcCode")], [0, 1]],
      ["hazardousMaterials", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType", XSD::QName.new(NsV19, "HazardousMaterials")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PurchaseOrderNumber")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::UploadDocument::Volume", XSD::QName.new(NsV19, "Volume")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV19, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV19, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityDescription", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV19, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail", XSD::QName.new(NsV19, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::UploadDocument::RadionuclideDetail", XSD::QName.new(NsV19, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::UploadDocument::NetExplosiveDetail", XSD::QName.new(NsV19, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType", XSD::QName.new(NsV19, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingDetail", XSD::QName.new(NsV19, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV19, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Authorization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV19, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackingInstructions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityType", XSD::QName.new(NsV19, "QuantityType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV19, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::UploadDocument::FedExLocationType", XSD::QName.new(NsV19, "LocationType")], [0, 1]],
      ["locationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationTypeForDisplay")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "LocationNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV19, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumType", XSD::QName.new(NsV19, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageReferenceDetail,
    :schema_type => XSD::QName.new(NsV19, "ImageReferenceDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::UploadDocument::InternalImageType", XSD::QName.new(NsV19, "InternalImageType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageUploadStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "ImageUploadStatusDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["status", ["FedexWebServices::Soap::UploadDocument::UploadImageStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusInfo", ["FedexWebServices::Soap::UploadDocument::UploadImageStatusInfoType", XSD::QName.new(NsV19, "StatusInfo")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::InternationalControlledExportType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalDistributionSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalDistributionSummaryDetail"),
    :schema_element => [
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["totalPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalPackageCount")], [0, 1]],
      ["totalUniqueAddressCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalUniqueAddressCount")], [0, 1]],
      ["totalCustomsValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalCustomsValue")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuredValue")], [0, 1]],
      ["totalFreightCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightCharges")], [0, 1]],
      ["totalInsuranceCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuranceCharges")], [0, 1]],
      ["totalTaxesOrMiscellaneousCharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxesOrMiscellaneousCharges")], [0, 1]],
      ["totalHandlingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalHandlingCosts")], [0, 1]],
      ["totalPackingCosts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalPackingCosts")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "DryIceDetail")], [0, 1]],
      ["dangerousGoodsAccessibility", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType", XSD::QName.new(NsV19, "DangerousGoodsAccessibility")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV19, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::KeyValueDetail,
    :schema_type => XSD::QName.new(NsV19, "KeyValueDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecification,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecification"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["dispositions", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["labelFormatType", ["FedexWebServices::Soap::UploadDocument::LabelFormatType", XSD::QName.new(NsV19, "LabelFormatType")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::UploadDocument::LabelStockType", XSD::QName.new(NsV19, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType", XSD::QName.new(NsV19, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::UploadDocument::LabelRotationType", XSD::QName.new(NsV19, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::UploadDocument::LabelOrderType", XSD::QName.new(NsV19, "LabelOrder")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV19, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecificationProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV19, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::UploadDocument::LiabilityCoverageType", XSD::QName.new(NsV19, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "CoverageAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LicenseOrPermitDetail,
    :schema_type => XSD::QName.new(NsV19, "LicenseOrPermitDetail"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LinearMeasure,
    :schema_type => XSD::QName.new(NsV19, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::UploadDocument::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Localization,
    :schema_type => XSD::QName.new(NsV19, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV19, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "Count")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Measure,
    :schema_type => XSD::QName.new(NsV19, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Money,
    :schema_type => XSD::QName.new(NsV19, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV19, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::NetExplosiveClassificationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PersonHours")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Notification,
    :schema_type => XSD::QName.new(NsV19, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::UploadDocument::NotificationParameter[]", XSD::QName.new(NsV19, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationContentSpecification,
    :schema_type => XSD::QName.new(NsV19, "NotificationContentSpecification"),
    :schema_element => [
      ["exclusions", ["FedexWebServices::Soap::UploadDocument::NotificationContentType[]", XSD::QName.new(NsV19, "Exclusions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::UploadDocument::NotificationType", XSD::QName.new(NsV19, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::UploadDocument::EMailDetail", XSD::QName.new(NsV19, "EmailDetail")], [0, 1]],
      ["faxDetail", ["FedexWebServices::Soap::UploadDocument::FaxDetail", XSD::QName.new(NsV19, "FaxDetail")], [0, 1]],
      ["smsDetail", ["FedexWebServices::Soap::UploadDocument::SmsDetail", XSD::QName.new(NsV19, "SmsDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationParameter,
    :schema_type => XSD::QName.new(NsV19, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OfferingIdentifierDetail,
    :schema_type => XSD::QName.new(NsV19, "OfferingIdentifierDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Op900Detail,
    :schema_type => XSD::QName.new(NsV19, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SignatureName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OperationalInstruction,
    :schema_type => XSD::QName.new(NsV19, "OperationalInstruction"),
    :schema_element => [
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["content", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Content")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageBarcodes,
    :schema_type => XSD::QName.new(NsV19, "PackageBarcodes"),
    :schema_element => [
      ["binaryBarcodes", ["FedexWebServices::Soap::UploadDocument::BinaryBarcode[]", XSD::QName.new(NsV19, "BinaryBarcodes")], [0, nil]],
      ["stringBarcodes", ["FedexWebServices::Soap::UploadDocument::StringBarcode[]", XSD::QName.new(NsV19, "StringBarcodes")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageOperationalDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageOperationalDetail"),
    :schema_element => [
      ["astraHandlingText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraHandlingText")], [0, 1]],
      ["operationalInstructions", ["FedexWebServices::Soap::UploadDocument::OperationalInstruction[]", XSD::QName.new(NsV19, "OperationalInstructions")], [0, nil]],
      ["barcodes", ["FedexWebServices::Soap::UploadDocument::PackageBarcodes", XSD::QName.new(NsV19, "Barcodes")], [0, 1]],
      ["groundServiceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GroundServiceCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageRating,
    :schema_type => XSD::QName.new(NsV19, "PackageRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "EffectiveNetDiscount")], [0, 1]],
      ["packageRateDetails", ["FedexWebServices::Soap::UploadDocument::PackageRateDetail[]", XSD::QName.new(NsV19, "PackageRateDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageSpecialHandlingDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageSpecialHandlingDetail"),
    :schema_element => [
      ["packedBy", ["FedexWebServices::Soap::UploadDocument::PackagePackedByType", XSD::QName.new(NsV19, "PackedBy")], [0, 1]],
      ["damageKnown", ["FedexWebServices::Soap::UploadDocument::DamageStatusType", XSD::QName.new(NsV19, "DamageKnown")], [0, 1]],
      ["inspectionStatus", ["FedexWebServices::Soap::UploadDocument::InspectionStatusType", XSD::QName.new(NsV19, "InspectionStatus")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::UploadDocument::CodDetail", XSD::QName.new(NsV19, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail", XSD::QName.new(NsV19, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::UploadDocument::BatteryClassificationDetail[]", XSD::QName.new(NsV19, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::UploadDocument::SignatureOptionDetail", XSD::QName.new(NsV19, "SignatureOptionDetail")], [0, 1]],
      ["pieceCountVerificationBoxCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCountVerificationBoxCount")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::UploadDocument::PriorityAlertDetail", XSD::QName.new(NsV19, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::UploadDocument::AlcoholDetail", XSD::QName.new(NsV19, "AlcoholDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "PackageStatusDetail"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::UploadDocument::PackageLineItemStatusType[]", XSD::QName.new(NsV19, "Status")], [0, nil]],
      ["deletionDetail", ["FedexWebServices::Soap::UploadDocument::DeletionDetail", XSD::QName.new(NsV19, "DeletionDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackagingDescription,
    :schema_type => XSD::QName.new(NsV19, "PackagingDescription"),
    :schema_element => [
      ["packagingId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingId")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV19, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV19, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedContact,
    :schema_type => XSD::QName.new(NsV19, "ParsedContact"),
    :schema_element => [
      ["personName", ["FedexWebServices::Soap::UploadDocument::ParsedPersonName", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberCountryCode")], [0, 1]],
      ["phoneNumberAreaCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberAreaCode")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ParsedContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::UploadDocument::ParsedContact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ParsedPersonName,
    :schema_type => XSD::QName.new(NsV19, "ParsedPersonName"),
    :schema_element => [
      ["prefix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Prefix")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FirstName")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MiddleName")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LastName")], [0, 1]],
      ["suffix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Suffix")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Party,
    :schema_type => XSD::QName.new(NsV19, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::UploadDocument::TaxpayerIdentification[]", XSD::QName.new(NsV19, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::UploadDocument::Contact", XSD::QName.new(NsV19, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Payment,
    :schema_type => XSD::QName.new(NsV19, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::UploadDocument::PaymentType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::UploadDocument::Payor", XSD::QName.new(NsV19, "Payor")], [0, 1]],
      ["ePaymentDetail", ["FedexWebServices::Soap::UploadDocument::EPaymentDetail", XSD::QName.new(NsV19, "EPaymentDetail")], [0, 1]],
      ["creditCard", ["FedexWebServices::Soap::UploadDocument::CreditCard", XSD::QName.new(NsV19, "CreditCard")], [0, 1]],
      ["creditCardTransactionDetail", ["FedexWebServices::Soap::UploadDocument::CreditCardTransactionDetail", XSD::QName.new(NsV19, "CreditCardTransactionDetail")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Payor,
    :schema_type => XSD::QName.new(NsV19, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::UploadDocument::AssociatedAccount[]", XSD::QName.new(NsV19, "AssociatedAccounts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentAccessDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentAccessDetail"),
    :schema_element => [
      ["accessorDetails", ["FedexWebServices::Soap::UploadDocument::PendingShipmentAccessorDetail[]", XSD::QName.new(NsV19, "AccessorDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentAccessorDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentAccessorDetail"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::UploadDocument::AccessorRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")], [0, 1]],
      ["emailLabelUrl", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailLabelUrl")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::PendingShipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::UploadDocument::EMailLabelDetail", XSD::QName.new(NsV19, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::UploadDocument::RecommendedDocumentSpecification", XSD::QName.new(NsV19, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupDetail,
    :schema_type => XSD::QName.new(NsV19, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::UploadDocument::PickupRequestType", XSD::QName.new(NsV19, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::UploadDocument::PickupRequestSourceType", XSD::QName.new(NsV19, "RequestSource")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PostShipmentUploadDetail,
    :schema_type => XSD::QName.new(NsV19, "PostShipmentUploadDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PrintedReference,
    :schema_type => XSD::QName.new(NsV19, "PrintedReference"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::PrintedReferenceType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV19, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::UploadDocument::PriorityAlertEnhancementType[]", XSD::QName.new(NsV19, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Content")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ProductName,
    :schema_type => XSD::QName.new(NsV19, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV19, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV19, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::UploadDocument::RadioactivityUnitOfMeasure", XSD::QName.new(NsV19, "UnitOfMeasure")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV19, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::UploadDocument::RadionuclideActivity", XSD::QName.new(NsV19, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::UploadDocument::PhysicalFormType", XSD::QName.new(NsV19, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ChemicalForm")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDiscount,
    :schema_type => XSD::QName.new(NsV19, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::UploadDocument::RateDiscountType", XSD::QName.new(NsV19, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Rebate,
    :schema_type => XSD::QName.new(NsV19, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::UploadDocument::RebateType", XSD::QName.new(NsV19, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV19, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::RecipientCustomsIdType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::UploadDocument::RecommendedDocumentType[]", XSD::QName.new(NsV19, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::RegulatoryLabelType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV19, "GenerationOptions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedDistributionLocation,
    :schema_type => XSD::QName.new(NsV19, "RequestedDistributionLocation"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::FedExDistributionLocationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "LocationNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "LocationContactAndAddress")], [0, 1]],
      ["clearanceNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceNumber")], [0, 1]],
      ["inclusionSpecifications", ["FedexWebServices::Soap::UploadDocument::ShipmentInclusionSpecification[]", XSD::QName.new(NsV19, "InclusionSpecifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV19, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroupPackageCount")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::UploadDocument::PackageStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::UploadDocument::TrackingId[]", XSD::QName.new(NsV19, "TrackingIds")], [0, nil]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail", XSD::QName.new(NsV19, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["weightSource", ["FedexWebServices::Soap::UploadDocument::WeightSource", XSD::QName.new(NsV19, "WeightSource")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::UploadDocument::PhysicalPackagingType", XSD::QName.new(NsV19, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::UploadDocument::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV19, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::UploadDocument::CustomerReference[]", XSD::QName.new(NsV19, "CustomerReferences")], [0, nil]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::PackageSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["specialHandlingDetail", ["FedexWebServices::Soap::UploadDocument::PackageSpecialHandlingDetail", XSD::QName.new(NsV19, "SpecialHandlingDetail")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::UploadDocument::ContentRecord[]", XSD::QName.new(NsV19, "ContentRecords")], [0, nil]],
      ["commodities", ["FedexWebServices::Soap::UploadDocument::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::UploadDocument::ShipperConveyanceDetail", XSD::QName.new(NsV19, "ConveyanceDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedShipment,
    :schema_type => XSD::QName.new(NsV19, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ShipTimestamp")], [0, 1]],
      ["dropoffType", ["FedexWebServices::Soap::UploadDocument::DropoffType", XSD::QName.new(NsV19, "DropoffType")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingType")], [0, 1]],
      ["shippingCycle", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShippingCycle")], [0, 1]],
      ["manifestDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentManifestDetail", XSD::QName.new(NsV19, "ManifestDetail")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::UploadDocument::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV19, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalInsuredValue")], [0, 1]],
      ["totalDimensions", ["FedexWebServices::Soap::UploadDocument::Dimensions", XSD::QName.new(NsV19, "TotalDimensions")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentAuthorizationDetail", XSD::QName.new(NsV19, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Shipper")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::UploadDocument::ContactAndAddress", XSD::QName.new(NsV19, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::ShipmentSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::UploadDocument::ExpressFreightDetail", XSD::QName.new(NsV19, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::UploadDocument::FreightShipmentDetail", XSD::QName.new(NsV19, "FreightShipmentDetail")], [0, 1]],
      ["consolidationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentConsolidationDetail", XSD::QName.new(NsV19, "ConsolidationDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail", XSD::QName.new(NsV19, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::UploadDocument::CustomsClearanceDetail", XSD::QName.new(NsV19, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::UploadDocument::PickupDetail", XSD::QName.new(NsV19, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentDetail", XSD::QName.new(NsV19, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "BlockInsightVisibility")], [0, 1]],
      ["errorLabelBehavior", ["FedexWebServices::Soap::UploadDocument::ErrorLabelBehaviorType", XSD::QName.new(NsV19, "ErrorLabelBehavior")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::UploadDocument::LabelSpecification", XSD::QName.new(NsV19, "LabelSpecification")], [0, 1]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentSpecification", XSD::QName.new(NsV19, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::UploadDocument::RateRequestType[]", XSD::QName.new(NsV19, "RateRequestTypes")], [0, nil]],
      ["customerSelectedActualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "CustomerSelectedActualRateType")], [0, 1]],
      ["edtRequestType", ["FedexWebServices::Soap::UploadDocument::EdtRequestType", XSD::QName.new(NsV19, "EdtRequestType")], [0, 1]],
      ["customRatingOptionDetail", ["FedexWebServices::Soap::UploadDocument::CustomRatingOptionDetail", XSD::QName.new(NsV19, "CustomRatingOptionDetail")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::UploadDocument::TrackingId", XSD::QName.new(NsV19, "MasterTrackingId")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["shipmentOnlyFields", ["FedexWebServices::Soap::UploadDocument::ShipmentOnlyFieldsType[]", XSD::QName.new(NsV19, "ShipmentOnlyFields")], [0, nil]],
      ["configurationData", ["FedexWebServices::Soap::UploadDocument::ShipmentConfigurationData", XSD::QName.new(NsV19, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::UploadDocument::RequestedPackageLineItem[]", XSD::QName.new(NsV19, "RequestedPackageLineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::UploadDocument::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV19, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::UploadDocument::ReturnType", XSD::QName.new(NsV19, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::UploadDocument::Rma", XSD::QName.new(NsV19, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::UploadDocument::ReturnEMailDetail", XSD::QName.new(NsV19, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::UploadDocument::ReturnAssociationDetail", XSD::QName.new(NsV19, "ReturnAssociation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Rma,
    :schema_type => XSD::QName.new(NsV19, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ServiceDescription,
    :schema_type => XSD::QName.new(NsV19, "ServiceDescription"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]],
      ["operatingOrgCodes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "OperatingOrgCodes")], [0, nil]],
      ["serviceCategory", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCategory")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV19, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsDetail[]", XSD::QName.new(NsV19, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentConsolidationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentConsolidationDetail"),
    :schema_element => [
      ["relationshipTimestamp", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RelationshipTimestamp")], [0, 1]],
      ["type", ["FedexWebServices::Soap::UploadDocument::ConsolidationType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["role", ["FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["associatedTrackingIds", ["FedexWebServices::Soap::UploadDocument::AssociatedTrackingId[]", XSD::QName.new(NsV19, "AssociatedTrackingIds")], [0, nil]],
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["consolidationOriginAddress", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "ConsolidationOriginAddress")], [0, 1]],
      ["internationalDistributionDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentInternationalDistributionDetail", XSD::QName.new(NsV19, "InternationalDistributionDetail")], [0, 1]],
      ["transborderDistributionDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentTransborderDistributionDetail", XSD::QName.new(NsV19, "TransborderDistributionDetail")], [0, 1]],
      ["distributionLocations", ["FedexWebServices::Soap::UploadDocument::RequestedDistributionLocation[]", XSD::QName.new(NsV19, "DistributionLocations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationAggregationType", XSD::QName.new(NsV19, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV19, "EventNotifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::UploadDocument::NotificationEventType[]", XSD::QName.new(NsV19, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::UploadDocument::NotificationDetail", XSD::QName.new(NsV19, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::UploadDocument::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV19, "FormatSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentInclusionSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentInclusionSpecification"),
    :schema_element => [
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["serviceCategory", ["FedexWebServices::Soap::UploadDocument::ServiceCategoryType", XSD::QName.new(NsV19, "ServiceCategory")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentInternationalDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentInternationalDistributionDetail"),
    :schema_element => [
      ["clearanceFacilityLocId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceFacilityLocId")], [0, 1]],
      ["clearanceType", ["FedexWebServices::Soap::UploadDocument::DistributionClearanceType", XSD::QName.new(NsV19, "ClearanceType")], [0, 1]],
      ["summaryDetail", ["FedexWebServices::Soap::UploadDocument::InternationalDistributionSummaryDetail", XSD::QName.new(NsV19, "SummaryDetail")], [0, 1]],
      ["splitPaymentSpecification", ["FedexWebServices::Soap::UploadDocument::SplitPaymentSpecification", XSD::QName.new(NsV19, "SplitPaymentSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::UploadDocument::Address", XSD::QName.new(NsV19, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::UploadDocument::PricingCodeType", XSD::QName.new(NsV19, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate", XSD::QName.new(NsV19, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType[]", XSD::QName.new(NsV19, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType", XSD::QName.new(NsV19, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::UploadDocument::FreightRateDetail", XSD::QName.new(NsV19, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::EdtCommodityTax[]", XSD::QName.new(NsV19, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentManifestDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentManifestDetail"),
    :schema_element => [
      ["manifestReferenceType", ["FedexWebServices::Soap::UploadDocument::CustomerReferenceType", XSD::QName.new(NsV19, "ManifestReferenceType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::NotificationFormatType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentOperationalDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentOperationalDetail"),
    :schema_element => [
      ["ursaPrefixCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrsaPrefixCode")], [0, 1]],
      ["ursaSuffixCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrsaSuffixCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginLocationId")], [0, 1]],
      ["originLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "OriginLocationNumber")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginServiceArea")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationId")], [0, 1]],
      ["destinationLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "DestinationLocationNumber")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceArea")], [0, 1]],
      ["destinationLocationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationStateOrProvinceCode")], [0, 1]],
      ["deliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "DeliveryDate")], [0, 1]],
      ["deliveryDay", ["FedexWebServices::Soap::UploadDocument::DayOfWeekType", XSD::QName.new(NsV19, "DeliveryDay")], [0, 1]],
      ["publishedDeliveryTime", ["SOAP::SOAPTime", XSD::QName.new(NsV19, "PublishedDeliveryTime")], [0, 1]],
      ["commitDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "CommitDate")], [0, 1]],
      ["commitDay", ["FedexWebServices::Soap::UploadDocument::DayOfWeekType", XSD::QName.new(NsV19, "CommitDay")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "MaximumTransitTime")], [0, 1]],
      ["customTransitTime", ["FedexWebServices::Soap::UploadDocument::TransitTimeType", XSD::QName.new(NsV19, "CustomTransitTime")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["deliveryEligibilities", ["FedexWebServices::Soap::UploadDocument::GroundDeliveryEligibilityType[]", XSD::QName.new(NsV19, "DeliveryEligibilities")], [0, nil]],
      ["astraPlannedServiceLevel", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraPlannedServiceLevel")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AstraDescription")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AirportId")], [0, 1]],
      ["serviceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCode")], [0, 1]],
      ["packagingCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackagingCode")], [0, 1]],
      ["scac", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Scac")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["customTransitTimeDetail", ["FedexWebServices::Soap::UploadDocument::CustomTransitTimeDetail", XSD::QName.new(NsV19, "CustomTransitTimeDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV19, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::UploadDocument::PricingCodeType", XSD::QName.new(NsV19, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::UploadDocument::RatedWeightMethod", XSD::QName.new(NsV19, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::UploadDocument::MinimumChargeType", XSD::QName.new(NsV19, "MinimumChargeType")], [0, 1]],
      ["quoteCreatorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuoteCreatorId")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::UploadDocument::CurrencyExchangeRate", XSD::QName.new(NsV19, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType[]", XSD::QName.new(NsV19, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType", XSD::QName.new(NsV19, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::UploadDocument::ShipmentLegRateDetail[]", XSD::QName.new(NsV19, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::UploadDocument::FreightRateDetail", XSD::QName.new(NsV19, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::UploadDocument::RateDiscount[]", XSD::QName.new(NsV19, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::UploadDocument::Rebate[]", XSD::QName.new(NsV19, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::UploadDocument::Surcharge[]", XSD::QName.new(NsV19, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::UploadDocument::Tax[]", XSD::QName.new(NsV19, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::UploadDocument::EdtCommodityTax[]", XSD::QName.new(NsV19, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTax[]", XSD::QName.new(NsV19, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::UploadDocument::VariableHandlingCharges", XSD::QName.new(NsV19, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentRating,
    :schema_type => XSD::QName.new(NsV19, "ShipmentRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::UploadDocument::ReturnedRateType", XSD::QName.new(NsV19, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "EffectiveNetDiscount")], [0, 1]],
      ["shipmentRateDetails", ["FedexWebServices::Soap::UploadDocument::ShipmentRateDetail[]", XSD::QName.new(NsV19, "ShipmentRateDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::UploadDocument::CodDetail", XSD::QName.new(NsV19, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::UploadDocument::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV19, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::UploadDocument::HoldAtLocationDetail", XSD::QName.new(NsV19, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentEventNotificationDetail", XSD::QName.new(NsV19, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::UploadDocument::ReturnShipmentDetail", XSD::QName.new(NsV19, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::UploadDocument::PendingShipmentDetail", XSD::QName.new(NsV19, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::UploadDocument::InternationalControlledExportDetail", XSD::QName.new(NsV19, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::UploadDocument::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV19, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentDryIceDetail", XSD::QName.new(NsV19, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumDetail", XSD::QName.new(NsV19, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::UploadDocument::FlatbedTrailerDetail", XSD::QName.new(NsV19, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::UploadDocument::FreightGuaranteeDetail", XSD::QName.new(NsV19, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::UploadDocument::EtdDetail", XSD::QName.new(NsV19, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::UploadDocument::ExtraLaborDetail", XSD::QName.new(NsV19, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::UploadDocument::PalletShrinkwrapDetail", XSD::QName.new(NsV19, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::UploadDocument::PalletsProvidedDetail", XSD::QName.new(NsV19, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::UploadDocument::DetentionDetail", XSD::QName.new(NsV19, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::UploadDocument::MarkingOrTaggingDetail", XSD::QName.new(NsV19, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::UploadDocument::NonBusinessTimeDetail", XSD::QName.new(NsV19, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::UploadDocument::ShipmentAssemblyDetail", XSD::QName.new(NsV19, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::UploadDocument::SortAndSegregateDetail", XSD::QName.new(NsV19, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentDetail", XSD::QName.new(NsV19, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::UploadDocument::StorageDetail", XSD::QName.new(NsV19, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::UploadDocument::WeighingDetail", XSD::QName.new(NsV19, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowDetail", XSD::QName.new(NsV19, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentTransborderDistributionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentTransborderDistributionDetail"),
    :schema_element => [
      ["specialServicesRequested", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServicesRequested", XSD::QName.new(NsV19, "SpecialServicesRequested")], [0, 1]],
      ["summaryDetail", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSummaryDetail", XSD::QName.new(NsV19, "SummaryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "Values")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocument,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ReturnedShippingDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::UploadDocument::Localization[]", XSD::QName.new(NsV19, "Localizations")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["shippingDocumentDisposition", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType", XSD::QName.new(NsV19, "ShippingDocumentDisposition")], [0, 1]],
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccessReference")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Resolution")], [0, 1]],
      ["copiesToPrint", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "CopiesToPrint")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentPart[]", XSD::QName.new(NsV19, "Parts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType", XSD::QName.new(NsV19, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetail", XSD::QName.new(NsV19, "StorageDetail")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailDetail", XSD::QName.new(NsV19, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentPrintDetail", XSD::QName.new(NsV19, "PrintDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV19, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::UploadDocument::EMailNotificationRecipientType", XSD::QName.new(NsV19, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::UploadDocument::LinearMeasure", XSD::QName.new(NsV19, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStockType", XSD::QName.new(NsV19, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::UploadDocument::DocumentFormatOptionsRequested", XSD::QName.new(NsV19, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomDocumentIdentifier")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentPart,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentPart"),
    :schema_element => [
      ["documentPartSequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "DocumentPartSequenceNumber")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PrinterId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "ShippingDocumentTypes")], [0, nil]],
      ["notificationContentSpecification", ["FedexWebServices::Soap::UploadDocument::NotificationContentSpecification", XSD::QName.new(NsV19, "NotificationContentSpecification")], [0, 1]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::UploadDocument::CertificateOfOriginDetail", XSD::QName.new(NsV19, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::UploadDocument::CommercialInvoiceDetail", XSD::QName.new(NsV19, "CommercialInvoiceDetail")], [0, 1]],
      ["usmcaCommercialInvoiceCertificationOfOriginDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCommercialInvoiceCertificationOfOriginDetail", XSD::QName.new(NsV19, "UsmcaCommercialInvoiceCertificationOfOriginDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::UploadDocument::CustomDocumentDetail[]", XSD::QName.new(NsV19, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::UploadDocument::CustomDocumentDetail[]", XSD::QName.new(NsV19, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::UploadDocument::ExportDeclarationDetail", XSD::QName.new(NsV19, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::UploadDocument::GeneralAgencyAgreementDetail", XSD::QName.new(NsV19, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["usmcaCertificationOfOriginDetail", ["FedexWebServices::Soap::UploadDocument::UsmcaCertificationOfOriginDetail", XSD::QName.new(NsV19, "UsmcaCertificationOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::UploadDocument::Op900Detail", XSD::QName.new(NsV19, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::UploadDocument::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV19, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::UploadDocument::FreightAddressLabelDetail", XSD::QName.new(NsV19, "FreightAddressLabelDetail")], [0, 1]],
      ["freightBillOfLadingDetail", ["FedexWebServices::Soap::UploadDocument::FreightBillOfLadingDetail", XSD::QName.new(NsV19, "FreightBillOfLadingDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::UploadDocument::ReturnInstructionsDetail", XSD::QName.new(NsV19, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetail,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStorageDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetailType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["filePath", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FilePath")], [0, 1]],
      ["fileNaming", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentNamingType", XSD::QName.new(NsV19, "FileNaming")], [0, 1]],
      ["fileSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileSuffix")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::UploadDocument::SignatureOptionType", XSD::QName.new(NsV19, "OptionType")], [0, 1]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::UploadDocument::SmartPostIndiciaType", XSD::QName.new(NsV19, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::UploadDocument::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV19, "AncillaryEndorsement")], [0, 1]],
      ["specialServices", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServices")], [0, nil]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerManifestId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmsDetail,
    :schema_type => XSD::QName.new(NsV19, "SmsDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumberCountryCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV19, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentLineItem[]", XSD::QName.new(NsV19, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::SpecialEquipmentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialServiceDescription,
    :schema_type => XSD::QName.new(NsV19, "SpecialServiceDescription"),
    :schema_element => [
      ["identifier", ["FedexWebServices::Soap::UploadDocument::OfferingIdentifierDetail", XSD::QName.new(NsV19, "Identifier")], [0, 1]],
      ["names", ["FedexWebServices::Soap::UploadDocument::ProductName[]", XSD::QName.new(NsV19, "Names")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentDetail,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::SplitPaymentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "Payment")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentSpecification,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentSpecification"),
    :schema_element => [
      ["payments", ["FedexWebServices::Soap::UploadDocument::SplitPaymentDetail[]", XSD::QName.new(NsV19, "Payments")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StorageDetail,
    :schema_type => XSD::QName.new(NsV19, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV19, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StringBarcode,
    :schema_type => XSD::QName.new(NsV19, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::StringBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Surcharge,
    :schema_type => XSD::QName.new(NsV19, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::UploadDocument::SurchargeType", XSD::QName.new(NsV19, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::UploadDocument::SurchargeLevelType", XSD::QName.new(NsV19, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Tax,
    :schema_type => XSD::QName.new(NsV19, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::UploadDocument::TaxType", XSD::QName.new(NsV19, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV19, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::UploadDocument::TinType", XSD::QName.new(NsV19, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TrackingId,
    :schema_type => XSD::QName.new(NsV19, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::UploadDocument::TrackingIdType", XSD::QName.new(NsV19, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::UploadDocument::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionLtlDetail,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionLtlDetail"),
    :schema_element => [
      ["payment", ["FedexWebServices::Soap::UploadDocument::Payment", XSD::QName.new(NsV19, "Payment")], [0, 1]],
      ["ltlScacCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LtlScacCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServiceType[]", XSD::QName.new(NsV19, "SpecialServiceTypes")], [0, nil]],
      ["transborderDistributionLtlDetail", ["FedexWebServices::Soap::UploadDocument::TransborderDistributionLtlDetail", XSD::QName.new(NsV19, "TransborderDistributionLtlDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSummaryDetail,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSummaryDetail"),
    :schema_element => [
      ["expressPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ExpressPackageCount")], [0, 1]],
      ["expressTotalPackageWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalPackageWeight")], [0, 1]],
      ["expressTotalPackageAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalPackageAdjustedWeight")], [0, 1]],
      ["expressFreightPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ExpressFreightPackageCount")], [0, 1]],
      ["expressTotalFreightWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalFreightWeight")], [0, 1]],
      ["expressTotalFreightAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "ExpressTotalFreightAdjustedWeight")], [0, 1]],
      ["groundPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "GroundPackageCount")], [0, 1]],
      ["groundTotalPackageWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "GroundTotalPackageWeight")], [0, 1]],
      ["groundTotalPackageAdjustedWeight", ["FedexWebServices::Soap::UploadDocument::Weight", XSD::QName.new(NsV19, "GroundTotalPackageAdjustedWeight")], [0, 1]],
      ["numberOfUnconsolidatedCommodities", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfUnconsolidatedCommodities")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileName")], [0, 1]],
      ["documentContent", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "DocumentContent")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType", XSD::QName.new(NsV19, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer", XSD::QName.new(NsV19, "DocumentIdProducer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerReference")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType", XSD::QName.new(NsV19, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::UploadDocument::UploadDocumentType", XSD::QName.new(NsV19, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FileName")], [0, 1]],
      ["status", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusInfo", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusInfoType", XSD::QName.new(NsV19, "StatusInfo")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer", XSD::QName.new(NsV19, "DocumentIdProducer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionType[]", XSD::QName.new(NsV19, "Options")], [0, nil]],
      ["postShipmentUploadDetail", ["FedexWebServices::Soap::UploadDocument::PostShipmentUploadDetail", XSD::QName.new(NsV19, "PostShipmentUploadDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsReply,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentRequirements", ["FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail", XSD::QName.new(NsV19, "DocumentRequirements")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]],
      ["originCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginCountryCode")], [0, 1]],
      ["originStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginStateOrProvinceCode")], [0, 1]],
      ["originPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginPostalCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginLocationId")], [0, 1]],
      ["destinationCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationCountryCode")], [0, 1]],
      ["destinationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationStateOrProvinceCode")], [0, 1]],
      ["destinationPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationPostalCode")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationId")], [0, 1]],
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FolderId")], [0, 1]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ShipTimestamp")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["usage", ["FedexWebServices::Soap::UploadDocument::DocumentUsageType", XSD::QName.new(NsV19, "Usage")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataReply,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentReferenceStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentReferenceStatuses")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["shippingDocumentTypesToProduce", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "ShippingDocumentTypesToProduce")], [0, nil]],
      ["customerProvidedImages", ["FedexWebServices::Soap::UploadDocument::CustomerProvidedImage[]", XSD::QName.new(NsV19, "CustomerProvidedImages")], [0, nil]],
      ["requestedShipment", ["FedexWebServices::Soap::UploadDocument::RequestedShipment", XSD::QName.new(NsV19, "RequestedShipment")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::UploadDocument::CompletedShipmentDetail", XSD::QName.new(NsV19, "CompletedShipmentDetail")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageDetail,
    :schema_type => XSD::QName.new(NsV19, "UploadImageDetail"),
    :schema_element => [
      ["id", ["FedexWebServices::Soap::UploadDocument::ImageId", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesReply,
    :schema_type => XSD::QName.new(NsV19, "UploadImagesReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["imageStatuses", ["FedexWebServices::Soap::UploadDocument::ImageUploadStatusDetail[]", XSD::QName.new(NsV19, "ImageStatuses")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesRequest,
    :schema_type => XSD::QName.new(NsV19, "UploadImagesRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["images", ["FedexWebServices::Soap::UploadDocument::UploadImageDetail[]", XSD::QName.new(NsV19, "Images")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::UploadDocument::DateRange", XSD::QName.new(NsV19, "BlanketPeriod")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType", XSD::QName.new(NsV19, "CertifierSpecification")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaImporterSpecificationType", XSD::QName.new(NsV19, "ImporterSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType", XSD::QName.new(NsV19, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Producer")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCommercialInvoiceCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCommercialInvoiceCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::UploadDocument::ShippingDocumentFormat", XSD::QName.new(NsV19, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::UploadDocument::CustomerImageUsage[]", XSD::QName.new(NsV19, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormVersion")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType", XSD::QName.new(NsV19, "CertifierSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType", XSD::QName.new(NsV19, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::UploadDocument::Party", XSD::QName.new(NsV19, "Producer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCommodityDetail,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCommodityDetail"),
    :schema_element => [
      ["originCriterion", ["FedexWebServices::Soap::UploadDocument::UsmcaOriginCriterionCode", XSD::QName.new(NsV19, "OriginCriterion")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityDescription", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityDetail", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["massPoints", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "MassPoints")], [0, 1]],
      ["options", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionDetail", XSD::QName.new(NsV19, "Options")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::UploadDocument::NetExplosiveDetail", XSD::QName.new(NsV19, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType", XSD::QName.new(NsV19, "PackingGroup")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PackingInstructions")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingName")], [0, 1]],
      ["properShippingNameAndDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProperShippingNameAndDescription")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TechnicalName")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "SubsidiaryClasses")], [0, nil]],
      ["symbols", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Symbols")], [0, 1]],
      ["tunnelRestrictionCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TunnelRestrictionCode")], [0, 1]],
      ["specialProvisions", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SpecialProvisions")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::UploadDocument::HazardousCommodityAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Authorization")], [0, 1]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LabelText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ValidatedHazardousContainer,
    :schema_type => XSD::QName.new(NsV19, "ValidatedHazardousContainer"),
    :schema_element => [
      ["qValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "QValue")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::UploadDocument::ValidatedHazardousCommodityContent[]", XSD::QName.new(NsV19, "HazardousCommodities")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV19, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::UploadDocument::RateElementBasisType", XSD::QName.new(NsV19, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::UploadDocument::RateTypeBasisType", XSD::QName.new(NsV19, "RateTypeBasis")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::UploadDocument::RateLevelBasisType", XSD::QName.new(NsV19, "RateLevelBasis")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV19, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::UploadDocument::Money", XSD::QName.new(NsV19, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Volume,
    :schema_type => XSD::QName.new(NsV19, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::UploadDocument::VolumeUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeighingDetail,
    :schema_type => XSD::QName.new(NsV19, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::UploadDocument::WeighingScaleType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::Weight,
    :schema_type => XSD::QName.new(NsV19, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::UploadDocument::WeightUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential", XSD::QName.new(NsV19, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential", XSD::QName.new(NsV19, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VersionId,
    :schema_type => XSD::QName.new(NsV19, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV19, "AccessorRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV19, "AdditionalLabelsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV19, "AlcoholRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV19, "AncillaryFeeAndTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedAccountNumberType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedShipmentType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::AssociatedTrackingIdType,
    :schema_type => XSD::QName.new(NsV19, "AssociatedTrackingIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV19, "B13AFilingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV19, "BarcodeSymbologyType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV19, "BatteryMaterialType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV19, "BatteryPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV19, "BatteryRegulatorySubType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BinaryBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "BinaryBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::BrokerType,
    :schema_type => XSD::QName.new(NsV19, "BrokerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV19, "CarrierCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV19, "ChargeBasisLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV19, "ClearanceBrokerageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV19, "CodAddTransportationChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodAdjustmentType,
    :schema_type => XSD::QName.new(NsV19, "CodAdjustmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodCollectionType,
    :schema_type => XSD::QName.new(NsV19, "CodCollectionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV19, "CodReturnReferenceIndicatorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV19, "CommodityPurposeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CompletedEtdType,
    :schema_type => XSD::QName.new(NsV19, "CompletedEtdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationShipmentRoleType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationShipmentRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ConsolidationType,
    :schema_type => XSD::QName.new(NsV19, "ConsolidationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardAuthorizationType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardAuthorizationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardSettlementScheduleType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardSettlementScheduleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardTransactionAttributeType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardTransactionAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CreditCardType,
    :schema_type => XSD::QName.new(NsV19, "CreditCardType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV19, "CustomDeliveryWindowType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV19, "CustomLabelCoordinateUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomRatingOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomRatingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV19, "CustomerImageUsageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV19, "CustomerReferenceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomerSpecifiedLabelGenerationOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsDeclarationStatementType,
    :schema_type => XSD::QName.new(NsV19, "CustomsDeclarationStatementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DamageStatusType,
    :schema_type => XSD::QName.new(NsV19, "DamageStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsAccessibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsDescriptorType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsDescriptorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV19, "DangerousGoodsPackingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV19, "DayOfWeekType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DeleteRecordedShipmentRequestServiceLevel,
    :schema_type => XSD::QName.new(NsV19, "DeleteRecordedShipmentRequestServiceLevel")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV19, "DestinationControlStatementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DistributionClearanceType,
    :schema_type => XSD::QName.new(NsV19, "DistributionClearanceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabContentType,
    :schema_type => XSD::QName.new(NsV19, "DocTabContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV19, "DocTabZoneJustificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV19, "DocumentFormatOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DocumentUsageType,
    :schema_type => XSD::QName.new(NsV19, "DocumentUsageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::DropoffType,
    :schema_type => XSD::QName.new(NsV19, "DropoffType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV19, "EMailNotificationRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentModeType,
    :schema_type => XSD::QName.new(NsV19, "EPaymentModeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EPaymentProcessorType,
    :schema_type => XSD::QName.new(NsV19, "EPaymentProcessorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtRequestType,
    :schema_type => XSD::QName.new(NsV19, "EdtRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EdtTaxType,
    :schema_type => XSD::QName.new(NsV19, "EdtTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EmailOptionType,
    :schema_type => XSD::QName.new(NsV19, "EmailOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EnterpriseDocumentType,
    :schema_type => XSD::QName.new(NsV19, "EnterpriseDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ErrorLabelBehaviorType,
    :schema_type => XSD::QName.new(NsV19, "ErrorLabelBehaviorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV19, "EtdAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV19, "EtdConfirmationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FedExDistributionLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExDistributionLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FedExLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV19, "FlatbedTrailerOption")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV19, "FreightBaseChargeCalculationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV19, "FreightChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightClassType,
    :schema_type => XSD::QName.new(NsV19, "FreightClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV19, "FreightCollectTermsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV19, "FreightGuaranteeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV19, "FreightOnValueType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV19, "FreightRateQuoteType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV19, "FreightShipmentRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::GroundDeliveryEligibilityType,
    :schema_type => XSD::QName.new(NsV19, "GroundDeliveryEligibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityAttributeType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityDescriptionProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityLabelTextOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityPackingGroupType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityQuantityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV19, "HazardousCommodityRegulationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV19, "HazardousContainerPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV19, "HomeDeliveryPremiumType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ImageId,
    :schema_type => XSD::QName.new(NsV19, "ImageId")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InspectionStatusType,
    :schema_type => XSD::QName.new(NsV19, "InspectionStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternalImageType,
    :schema_type => XSD::QName.new(NsV19, "InternalImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV19, "InternationalControlledExportType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV19, "InternationalDocumentContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelFormatType,
    :schema_type => XSD::QName.new(NsV19, "LabelFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV19, "LabelMaskableDataType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelOrderType,
    :schema_type => XSD::QName.new(NsV19, "LabelOrderType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV19, "LabelPrintingOrientationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelRotationType,
    :schema_type => XSD::QName.new(NsV19, "LabelRotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelSpecificationProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "LabelSpecificationProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LabelStockType,
    :schema_type => XSD::QName.new(NsV19, "LabelStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV19, "LiabilityCoverageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::LinearUnits,
    :schema_type => XSD::QName.new(NsV19, "LinearUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV19, "MinimumChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV19, "NetExplosiveClassificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationContentType,
    :schema_type => XSD::QName.new(NsV19, "NotificationContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationEventType,
    :schema_type => XSD::QName.new(NsV19, "NotificationEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV19, "NotificationFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV19, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::NotificationType,
    :schema_type => XSD::QName.new(NsV19, "NotificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::OversizeClassType,
    :schema_type => XSD::QName.new(NsV19, "OversizeClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackageLineItemStatusType,
    :schema_type => XSD::QName.new(NsV19, "PackageLineItemStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PackagePackedByType,
    :schema_type => XSD::QName.new(NsV19, "PackagePackedByType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV19, "PageQuadrantType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PaymentType,
    :schema_type => XSD::QName.new(NsV19, "PaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV19, "PendingShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalFormType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalPackagingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV19, "PickupRequestSourceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PickupRequestType,
    :schema_type => XSD::QName.new(NsV19, "PickupRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PricingCodeType,
    :schema_type => XSD::QName.new(NsV19, "PricingCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PrintedReferenceType,
    :schema_type => XSD::QName.new(NsV19, "PrintedReferenceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV19, "PriorityAlertEnhancementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV19, "PurposeOfShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV19, "RadioactiveContainerClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactiveLabelType,
    :schema_type => XSD::QName.new(NsV19, "RadioactiveLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV19, "RadioactivityUnitOfMeasure")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV19, "RateDimensionalDivisorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateDiscountType,
    :schema_type => XSD::QName.new(NsV19, "RateDiscountType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateElementBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateLevelBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateLevelBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateRequestType,
    :schema_type => XSD::QName.new(NsV19, "RateRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV19, "RateTypeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV19, "RatedWeightMethod")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RebateType,
    :schema_type => XSD::QName.new(NsV19, "RebateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV19, "RecipientCustomsIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RecommendedDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryControlType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV19, "RegulatoryLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV19, "RelativeVerticalPositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RequestedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequiredDocumentType,
    :schema_type => XSD::QName.new(NsV19, "RequiredDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RequirementType,
    :schema_type => XSD::QName.new(NsV19, "RequirementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "ReturnEMailAllowedSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnType,
    :schema_type => XSD::QName.new(NsV19, "ReturnType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV19, "ReturnedRateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ReturnedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "ReturnedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::RotationType,
    :schema_type => XSD::QName.new(NsV19, "RotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "SecondaryBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ServiceCategoryType,
    :schema_type => XSD::QName.new(NsV19, "ServiceCategoryType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentDryIceProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationAggregationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentOnlyFieldsType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentOnlyFieldsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentDispositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentEMailGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentNamingType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentNamingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::ShippingDocumentStorageDetailType,
    :schema_type => XSD::QName.new(NsV19, "ShippingDocumentStorageDetailType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV19, "SignatureOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostAncillaryEndorsementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostIndiciaType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SmartPostShipmentSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "SmartPostShipmentSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV19, "SpecialEquipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV19, "SpecialRatingAppliedType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SplitPaymentType,
    :schema_type => XSD::QName.new(NsV19, "SplitPaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "StringBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV19, "SurchargeLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::SurchargeType,
    :schema_type => XSD::QName.new(NsV19, "SurchargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxType,
    :schema_type => XSD::QName.new(NsV19, "TaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV19, "TaxesOrMiscellaneousChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TinType,
    :schema_type => XSD::QName.new(NsV19, "TinType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TrackingIdType,
    :schema_type => XSD::QName.new(NsV19, "TrackingIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransborderDistributionSpecialServiceType,
    :schema_type => XSD::QName.new(NsV19, "TransborderDistributionSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::TransitTimeType,
    :schema_type => XSD::QName.new(NsV19, "TransitTimeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentIdProducer")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentProducerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusInfoType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusInfoType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentStatusType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "UploadDocumentsProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageStatusInfoType,
    :schema_type => XSD::QName.new(NsV19, "UploadImageStatusInfoType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImageStatusType,
    :schema_type => XSD::QName.new(NsV19, "UploadImageStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaCertifierSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaCertifierSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaImporterSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaOriginCriterionCode,
    :schema_type => XSD::QName.new(NsV19, "UsmcaOriginCriterionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UsmcaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV19, "UsmcaProducerSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::VolumeUnits,
    :schema_type => XSD::QName.new(NsV19, "VolumeUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV19, "WeighingScaleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeightSource,
    :schema_type => XSD::QName.new(NsV19, "WeightSource")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::WeightUnits,
    :schema_type => XSD::QName.new(NsV19, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsReply,
    :schema_name => XSD::QName.new(NsV19, "UploadDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentRequirements", ["FedexWebServices::Soap::UploadDocument::DocumentRequirementsDetail", XSD::QName.new(NsV19, "DocumentRequirements")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsRequest,
    :schema_name => XSD::QName.new(NsV19, "UploadDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["processingOptions", ["FedexWebServices::Soap::UploadDocument::UploadDocumentsProcessingOptionsRequested", XSD::QName.new(NsV19, "ProcessingOptions")], [0, 1]],
      ["originCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginCountryCode")], [0, 1]],
      ["originStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginStateOrProvinceCode")], [0, 1]],
      ["originPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginPostalCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginLocationId")], [0, 1]],
      ["destinationCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationCountryCode")], [0, 1]],
      ["destinationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationStateOrProvinceCode")], [0, 1]],
      ["destinationPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationPostalCode")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationId")], [0, 1]],
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FolderId")], [0, 1]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "ShipTimestamp")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::UploadDocument::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["usage", ["FedexWebServices::Soap::UploadDocument::DocumentUsageType", XSD::QName.new(NsV19, "Usage")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataReply,
    :schema_name => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documentStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentStatuses")], [0, nil]],
      ["documentReferenceStatuses", ["FedexWebServices::Soap::UploadDocument::UploadDocumentStatusDetail[]", XSD::QName.new(NsV19, "DocumentReferenceStatuses")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadDocumentsWithShipmentDataRequest,
    :schema_name => XSD::QName.new(NsV19, "UploadDocumentsWithShipmentDataRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["shippingDocumentTypesToProduce", ["FedexWebServices::Soap::UploadDocument::RequestedShippingDocumentType[]", XSD::QName.new(NsV19, "ShippingDocumentTypesToProduce")], [0, nil]],
      ["customerProvidedImages", ["FedexWebServices::Soap::UploadDocument::CustomerProvidedImage[]", XSD::QName.new(NsV19, "CustomerProvidedImages")], [0, nil]],
      ["requestedShipment", ["FedexWebServices::Soap::UploadDocument::RequestedShipment", XSD::QName.new(NsV19, "RequestedShipment")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::UploadDocument::CompletedShipmentDetail", XSD::QName.new(NsV19, "CompletedShipmentDetail")], [0, 1]],
      ["documents", ["FedexWebServices::Soap::UploadDocument::UploadDocumentDetail[]", XSD::QName.new(NsV19, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::UploadDocument::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV19, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesReply,
    :schema_name => XSD::QName.new(NsV19, "UploadImagesReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::UploadDocument::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::UploadDocument::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["imageStatuses", ["FedexWebServices::Soap::UploadDocument::ImageUploadStatusDetail[]", XSD::QName.new(NsV19, "ImageStatuses")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::UploadDocument::UploadImagesRequest,
    :schema_name => XSD::QName.new(NsV19, "UploadImagesRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::UploadDocument::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::UploadDocument::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::UploadDocument::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::UploadDocument::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["images", ["FedexWebServices::Soap::UploadDocument::UploadImageDetail[]", XSD::QName.new(NsV19, "Images")], [0, nil]]
    ]
  )
end

end; end; end
