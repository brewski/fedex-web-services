# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'ShipServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module Ship

module ShipServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV28 = "http://fedex.com/ws/ship/v28"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AdditionalLabelsType", XSD::QName.new(NsV28, "Type")]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Address,
    :schema_type => XSD::QName.new(NsV28, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV28, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GeographicCoordinates")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdrLicenseDetail,
    :schema_type => XSD::QName.new(NsV28, "AdrLicenseDetail"),
    :schema_element => [
      ["licenseOrPermitDetail", ["FedexWebServices::Soap::Ship::LicenseOrPermitDetail", XSD::QName.new(NsV28, "LicenseOrPermitDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV28, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Ship::AlcoholRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AncillaryFeeAndTaxType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV28, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AssociatedAccountNumberType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AssociatedShipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["sender", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Sender")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, nil]],
      ["shipmentOperationalDetail", ["FedexWebServices::Soap::Ship::ShipmentOperationalDetail", XSD::QName.new(NsV28, "ShipmentOperationalDetail")], [0, 1]],
      ["packageOperationalDetail", ["FedexWebServices::Soap::Ship::PackageOperationalDetail", XSD::QName.new(NsV28, "PackageOperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV28, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::Ship::BatteryMaterialType", XSD::QName.new(NsV28, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::Ship::BatteryPackingType", XSD::QName.new(NsV28, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::Ship::BatteryRegulatorySubType", XSD::QName.new(NsV28, "RegulatorySubType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BinaryBarcode,
    :schema_type => XSD::QName.new(NsV28, "BinaryBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::BinaryBarcodeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPBase64", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BrokerDetail,
    :schema_type => XSD::QName.new(NsV28, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::BrokerType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Broker")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ClientDetail,
    :schema_type => XSD::QName.new(NsV28, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")]],
      ["groundShipperNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GroundShipperNumber")], [0, 1]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterNumber")]],
      ["masterMeterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MasterMeterNumber")], [0, 1]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterInstance")], [0, 1]],
      ["companyId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyId")], [0, 1]],
      ["softwareId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SoftwareId")], [0, 1]],
      ["softwareRelease", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SoftwareRelease")], [0, 1]],
      ["clientProductId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ClientProductId")], [0, 1]],
      ["clientProductVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ClientProductVersion")], [0, 1]],
      ["middlewareProductId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddlewareProductId")], [0, 1]],
      ["middlewareProductVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddlewareProductVersion")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Ship::ExpressRegionCode", XSD::QName.new(NsV28, "Region")], [0, 1]],
      ["autoConfigurationType", ["FedexWebServices::Soap::Ship::AutoConfigurationType", XSD::QName.new(NsV28, "AutoConfigurationType")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Ship::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Ship::CodAddTransportationChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Ship::ChargeBasisLevelType", XSD::QName.new(NsV28, "ChargeBasisLevel")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodDetail,
    :schema_type => XSD::QName.new(NsV28, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Ship::CodAddTransportationChargesDetail", XSD::QName.new(NsV28, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Ship::CodCollectionType", XSD::QName.new(NsV28, "CollectionType")]],
      ["codRecipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Ship::CodReturnReferenceIndicatorType", XSD::QName.new(NsV28, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "ReturnTrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodReturnPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CodReturnPackageDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::Ship::CodAdjustmentType", XSD::QName.new(NsV28, "AdjustmentType")], [0, 1]],
      ["electronic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Electronic")], [0, 1]],
      ["barcodes", ["FedexWebServices::Soap::Ship::PackageBarcodes", XSD::QName.new(NsV28, "Barcodes")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Comments")], [0, 99]],
      ["freightCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::Ship::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Ship::PurposeOfShipmentType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["purposeOfShipmentDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PurposeOfShipmentDescription")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, nil]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TermsOfSale")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormVersion")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Commodity,
    :schema_type => XSD::QName.new(NsV28, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfPieces")]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Ship::CommodityPurposeType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryOfManufacture")]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Ship::Measure[]", XSD::QName.new(NsV28, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Ship::EdtExciseCondition[]", XSD::QName.new(NsV28, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["usmcaDetail", ["FedexWebServices::Soap::Ship::UsmcaCommodityDetail", XSD::QName.new(NsV28, "UsmcaDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedCodDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedCodDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::Ship::CodAdjustmentType", XSD::QName.new(NsV28, "AdjustmentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedEtdDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedEtdDetail"),
    :schema_element => [
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FolderId")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Ship::CompletedEtdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["uploadDocumentReferenceDetails", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "UploadDocumentReferenceDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousPackageDetail"),
    :schema_element => [
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::Ship::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["radioactiveTransportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "RadioactiveTransportIndex")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::Ship::RadioactiveLabelType", XSD::QName.new(NsV28, "LabelType")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Ship::ValidatedHazardousContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousShipmentDetail"),
    :schema_element => [
      ["hazardousSummaryDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousSummaryDetail", XSD::QName.new(NsV28, "HazardousSummaryDetail")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::Ship::ShipmentDryIceDetail", XSD::QName.new(NsV28, "DryIceDetail")], [0, 1]],
      ["adrLicense", ["FedexWebServices::Soap::Ship::AdrLicenseDetail", XSD::QName.new(NsV28, "AdrLicense")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousSummaryDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousSummaryDetail"),
    :schema_element => [
      ["smallQuantityExceptionPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SmallQuantityExceptionPackageCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHoldAtLocationDetail"),
    :schema_element => [
      ["holdingLocation", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "HoldingLocation")], [0, 1]],
      ["holdingLocationType", ["FedexWebServices::Soap::Ship::FedExLocationType", XSD::QName.new(NsV28, "HoldingLocationType")], [0, 1]],
      ["holdingLocationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HoldingLocationTypeForDisplay")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedPackageDetail"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::Ship::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::Ship::OversizeClassType", XSD::QName.new(NsV28, "OversizeClass")], [0, 1]],
      ["packageRating", ["FedexWebServices::Soap::Ship::PackageRating", XSD::QName.new(NsV28, "PackageRating")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::Ship::SpecialServiceDescription[]", XSD::QName.new(NsV28, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::Ship::PackageOperationalDetail", XSD::QName.new(NsV28, "OperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]],
      ["packageDocuments", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "PackageDocuments")], [0, nil]],
      ["codReturnDetail", ["FedexWebServices::Soap::Ship::CodReturnPackageDetail", XSD::QName.new(NsV28, "CodReturnDetail")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::Ship::SignatureOptionType", XSD::QName.new(NsV28, "SignatureOption")], [0, 1]],
      ["dryIceWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["hazardousPackageDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousPackageDetail", XSD::QName.new(NsV28, "HazardousPackageDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedShipmentDetail"),
    :schema_element => [
      ["usDomestic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "UsDomestic")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Ship::CarrierCodeType", XSD::QName.new(NsV28, "CarrierCode")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "MasterTrackingId")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Ship::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["packagingDescription", ["FedexWebServices::Soap::Ship::PackagingDescription", XSD::QName.new(NsV28, "PackagingDescription")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::Ship::SpecialServiceDescription[]", XSD::QName.new(NsV28, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::Ship::ShipmentOperationalDetail", XSD::QName.new(NsV28, "OperationalDetail")], [0, 1]],
      ["accessDetail", ["FedexWebServices::Soap::Ship::PendingShipmentAccessDetail", XSD::QName.new(NsV28, "AccessDetail")], [0, 1]],
      ["tagDetail", ["FedexWebServices::Soap::Ship::CompletedTagDetail", XSD::QName.new(NsV28, "TagDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Ship::CompletedSmartPostDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["hazardousShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousShipmentDetail", XSD::QName.new(NsV28, "HazardousShipmentDetail")], [0, 1]],
      ["shipmentRating", ["FedexWebServices::Soap::Ship::ShipmentRating", XSD::QName.new(NsV28, "ShipmentRating")], [0, 1]],
      ["completedHoldAtLocationDetail", ["FedexWebServices::Soap::Ship::CompletedHoldAtLocationDetail", XSD::QName.new(NsV28, "CompletedHoldAtLocationDetail")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["documentRequirements", ["FedexWebServices::Soap::Ship::DocumentRequirementsDetail", XSD::QName.new(NsV28, "DocumentRequirements")], [0, 1]],
      ["completedEtdDetail", ["FedexWebServices::Soap::Ship::CompletedEtdDetail", XSD::QName.new(NsV28, "CompletedEtdDetail")], [0, 1]],
      ["shipmentDocuments", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "ShipmentDocuments")], [0, nil]],
      ["associatedShipments", ["FedexWebServices::Soap::Ship::AssociatedShipmentDetail[]", XSD::QName.new(NsV28, "AssociatedShipments")], [0, nil]],
      ["completedCodDetail", ["FedexWebServices::Soap::Ship::CompletedCodDetail", XSD::QName.new(NsV28, "CompletedCodDetail")], [0, 1]],
      ["completedPackageDetails", ["FedexWebServices::Soap::Ship::CompletedPackageDetail[]", XSD::QName.new(NsV28, "CompletedPackageDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedSmartPostDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedSmartPostDetail"),
    :schema_element => [
      ["pickUpCarrier", ["FedexWebServices::Soap::Ship::CarrierCodeType", XSD::QName.new(NsV28, "PickUpCarrier")], [0, 1]],
      ["machinable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Machinable")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedTagDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedTagDetail"),
    :schema_element => [
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ConfirmationNumber")]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "AccessTime")], [0, 1]],
      ["cutoffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "CutoffTime")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Location")], [0, 1]],
      ["deliveryCommitment", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "DeliveryCommitment")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DispatchDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV28, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Contact,
    :schema_type => XSD::QName.new(NsV28, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ContentRecord,
    :schema_type => XSD::QName.new(NsV28, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCard,
    :schema_type => XSD::QName.new(NsV28, "CreditCard"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")]],
      ["creditCardType", ["FedexWebServices::Soap::Ship::CreditCardType", XSD::QName.new(NsV28, "CreditCardType")]],
      ["expirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExpirationDate")]],
      ["verificationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "VerificationCode")], [0, 1]],
      ["creditCardHolder", ["FedexWebServices::Soap::Ship::ParsedContactAndAddress", XSD::QName.new(NsV28, "CreditCardHolder")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionAttributesDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionAttributesDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::CreditCardTransactionAttributeType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionDetail"),
    :schema_element => [
      ["authorizationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AuthorizationId")], [0, 1]],
      ["authorizationType", ["FedexWebServices::Soap::Ship::CreditCardAuthorizationType", XSD::QName.new(NsV28, "AuthorizationType")], [0, 1]],
      ["fraudDetectionDetail", ["FedexWebServices::Soap::Ship::CreditFraudDetectionDetail", XSD::QName.new(NsV28, "FraudDetectionDetail")], [0, 1]],
      ["payorAuthenticationSessionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PayorAuthenticationSessionId")], [0, 1]],
      ["attributesDetail", ["FedexWebServices::Soap::Ship::CreditCardTransactionAttributesDetail", XSD::QName.new(NsV28, "AttributesDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditFraudDetectionDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditFraudDetectionDetail"),
    :schema_element => [
      ["ipAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IpAddress")], [0, 1]],
      ["clientCookiesEnabled", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ClientCookiesEnabled")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV28, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Rate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomDeliveryWindowType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Ship::DateRange", XSD::QName.new(NsV28, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "RequestDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDiscountExclusionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDiscountExclusionDetail"),
    :schema_element => [
      ["excludedTypes", ["FedexWebServices::Soap::Ship::RateDiscountType[]", XSD::QName.new(NsV28, "ExcludedTypes")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Ship::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Ship::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecificationId")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomDocumentIdentifier")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::Ship::BarcodeSymbologyType", XSD::QName.new(NsV28, "BarcodeSymbology")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::Ship::CustomLabelCoordinateUnits", XSD::QName.new(NsV28, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::Ship::CustomLabelTextEntry[]", XSD::QName.new(NsV28, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::Ship::CustomLabelGraphicEntry[]", XSD::QName.new(NsV28, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::Ship::CustomLabelBoxEntry[]", XSD::QName.new(NsV28, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::Ship::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV28, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::Ship::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV28, "BarcodeEntries")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileGraphicFullName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "X")]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Y")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Ship::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Ship::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomRatingOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomRatingOptionDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::CustomRatingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["customDiscountExclusionDetail", ["FedexWebServices::Soap::Ship::CustomDiscountExclusionDetail", XSD::QName.new(NsV28, "CustomDiscountExclusionDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomTransitTimeDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomTransitTimeDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomerImageUsageType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::Ship::ImageId", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::Ship::InternalImageType", XSD::QName.new(NsV28, "InternalImageType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerReference,
    :schema_type => XSD::QName.new(NsV28, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "CustomerReferenceType")]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Ship::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::Ship::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV28, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::Ship::LabelMaskableDataType[]", XSD::QName.new(NsV28, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::Ship::SecondaryBarcodeType", XSD::QName.new(NsV28, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::Ship::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV28, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::Ship::AdditionalLabelsDetail[]", XSD::QName.new(NsV28, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::Ship::BrokerDetail[]", XSD::QName.new(NsV28, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Ship::ClearanceBrokerageType", XSD::QName.new(NsV28, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::Ship::CustomsOptionDetail", XSD::QName.new(NsV28, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::Ship::RecipientCustomsId", XSD::QName.new(NsV28, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::Ship::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::Ship::FreightOnValueType", XSD::QName.new(NsV28, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::Ship::CommercialInvoice", XSD::QName.new(NsV28, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Ship::Commodity[]", XSD::QName.new(NsV28, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::Ship::ExportDetail", XSD::QName.new(NsV28, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::Ship::RegulatoryControlType[]", XSD::QName.new(NsV28, "RegulatoryControls")], [0, nil]],
      ["declarationStatementDetail", ["FedexWebServices::Soap::Ship::CustomsDeclarationStatementDetail", XSD::QName.new(NsV28, "DeclarationStatementDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsDeclarationStatementDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsDeclarationStatementDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::CustomsDeclarationStatementType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomsOptionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::Ship::HazardousContainerPackingType", XSD::QName.new(NsV28, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::Ship::RadioactiveContainerClassType", XSD::QName.new(NsV28, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Ship::HazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsDetail"),
    :schema_element => [
      ["uploadedTrackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UploadedTrackingNumber")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::Ship::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::Ship::DangerousGoodsPackingOptionType", XSD::QName.new(NsV28, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Ship::DangerousGoodsContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::Ship::HazardousCommodityPackagingDetail", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::Ship::DangerousGoodsSignatory", XSD::QName.new(NsV28, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::Ship::RadioactivityDetail", XSD::QName.new(NsV28, "RadioactivityDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Place")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DateRange,
    :schema_type => XSD::QName.new(NsV28, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "DeleteShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]],
      ["deletionControl", ["FedexWebServices::Soap::Ship::DeletionControlType", XSD::QName.new(NsV28, "DeletionControl")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteTagRequest,
    :schema_type => XSD::QName.new(NsV28, "DeleteTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["dispatchLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DispatchLocationId")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DispatchDate")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "Payment")]],
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ConfirmationNumber")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::Ship::DestinationControlStatementType[]", XSD::QName.new(NsV28, "StatementTypes")], [1, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EndUser")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DetentionDetail,
    :schema_type => XSD::QName.new(NsV28, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Dimensions,
    :schema_type => XSD::QName.new(NsV28, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Length")]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Width")]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Height")]],
      ["units", ["FedexWebServices::Soap::Ship::LinearUnits", XSD::QName.new(NsV28, "Units")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContent,
    :schema_type => XSD::QName.new(NsV28, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::Ship::DocTabContentType", XSD::QName.new(NsV28, "DocTabContentType")]],
      ["zone001", ["FedexWebServices::Soap::Ship::DocTabContentZone001", XSD::QName.new(NsV28, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::Ship::DocTabContentBarcoded", XSD::QName.new(NsV28, "Barcoded")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::Ship::BarcodeSymbologyType", XSD::QName.new(NsV28, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::Ship::DocTabZoneSpecification", XSD::QName.new(NsV28, "Specification")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::Ship::DocTabZoneSpecification[]", XSD::QName.new(NsV28, "DocTabZoneSpecifications")], [1, 12]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::Ship::DocTabZoneJustificationType", XSD::QName.new(NsV28, "Justification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::DocumentFormatOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentGenerationDetail,
    :schema_type => XSD::QName.new(NsV28, "DocumentGenerationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::EnterpriseDocumentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["minimumCopiesRequired", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "MinimumCopiesRequired")], [0, 1]],
      ["letterhead", ["FedexWebServices::Soap::Ship::RequirementType", XSD::QName.new(NsV28, "Letterhead")], [0, 1]],
      ["electronicSignature", ["FedexWebServices::Soap::Ship::RequirementType", XSD::QName.new(NsV28, "ElectronicSignature")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentRequirementsDetail,
    :schema_type => XSD::QName.new(NsV28, "DocumentRequirementsDetail"),
    :schema_element => [
      ["requiredDocuments", ["FedexWebServices::Soap::Ship::RequiredDocumentType[]", XSD::QName.new(NsV28, "RequiredDocuments")], [0, nil]],
      ["generationDetails", ["FedexWebServices::Soap::Ship::DocumentGenerationDetail[]", XSD::QName.new(NsV28, "GenerationDetails")], [0, nil]],
      ["prohibitedDocuments", ["FedexWebServices::Soap::Ship::EnterpriseDocumentType[]", XSD::QName.new(NsV28, "ProhibitedDocuments")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::Ship::EMailRecipient[]", XSD::QName.new(NsV28, "Recipients")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Ship::AccessorRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Ship::EmailOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentDetail,
    :schema_type => XSD::QName.new(NsV28, "EPaymentDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["ePaymentProcessor", ["FedexWebServices::Soap::Ship::EPaymentProcessorType", XSD::QName.new(NsV28, "EPaymentProcessor")], [0, 1]],
      ["ePaymentMode", ["FedexWebServices::Soap::Ship::EPaymentModeType", XSD::QName.new(NsV28, "EPaymentMode")], [0, 1]],
      ["maskedCreditCard", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MaskedCreditCard")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::Ship::CreditCardType", XSD::QName.new(NsV28, "CreditCardType")], [0, 1]],
      ["creditCardExpirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CreditCardExpirationDate")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV28, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::Ship::EdtTaxDetail[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Total")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV28, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Ship::EdtTaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::EmailOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdDetail,
    :schema_type => XSD::QName.new(NsV28, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::Ship::EtdConfirmationType", XSD::QName.new(NsV28, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Ship::EtdAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Ship::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "RequestedDocumentCopies")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExportDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::Ship::B13AFilingOptionType", XSD::QName.new(NsV28, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::Ship::DestinationControlDetail", XSD::QName.new(NsV28, "DestinationControlDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::Ship::ExpressFreightDetailContact", XSD::QName.new(NsV28, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::Ship::ExpressFreightDetailContact", XSD::QName.new(NsV28, "UndeliverableContact")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Phone")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV28, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::FlatbedTrailerOption[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::Ship::PageQuadrantType", XSD::QName.new(NsV28, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Ship::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Ship::FreightChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "ExtendedAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBillOfLadingDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightBillOfLadingDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::FreightGuaranteeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "Time")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::Ship::FreightRateQuoteType", XSD::QName.new(NsV28, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::Ship::FreightBaseChargeCalculationType", XSD::QName.new(NsV28, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::Ship::FreightBaseCharge[]", XSD::QName.new(NsV28, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::Ship::FreightRateNotation[]", XSD::QName.new(NsV28, "Notations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV28, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "AlternateBilling")], [0, 1]],
      ["printedReferences", ["FedexWebServices::Soap::Ship::PrintedReference[]", XSD::QName.new(NsV28, "PrintedReferences")], [0, nil]],
      ["role", ["FedexWebServices::Soap::Ship::FreightShipmentRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::Ship::FreightCollectTermsType", XSD::QName.new(NsV28, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Ship::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::Ship::FreightSpecialServicePayment[]", XSD::QName.new(NsV28, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsEmergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsEmergencyContactNumber")], [0, 1]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Ship::FreightShipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["classProvidedByCustomer", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ClassProvidedByCustomer")], [0, 1]],
      ["billingMaskName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BillingMaskName")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Ship::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["handlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "HandlingUnits")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Ship::PhysicalPackagingType", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Pieces")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["hazardousMaterials", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionType", XSD::QName.new(NsV28, "HazardousMaterials")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PurchaseOrderNumber")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::Ship::Volume", XSD::QName.new(NsV28, "Volume")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV28, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Ship::FreightShipmentRoleType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Ship::HazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::Ship::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV28, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::Ship::RadionuclideDetail", XSD::QName.new(NsV28, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Ship::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingDetail", XSD::QName.new(NsV28, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV28, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::Ship::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV28, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityType", XSD::QName.new(NsV28, "QuantityType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Ship::FedExLocationType", XSD::QName.new(NsV28, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Ship::HomeDeliveryPremiumType", XSD::QName.new(NsV28, "HomeDeliveryPremiumType")]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::InternationalControlledExportType", XSD::QName.new(NsV28, "Type")]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelSpecification,
    :schema_type => XSD::QName.new(NsV28, "LabelSpecification"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["labelFormatType", ["FedexWebServices::Soap::Ship::LabelFormatType", XSD::QName.new(NsV28, "LabelFormatType")]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::Ship::LabelStockType", XSD::QName.new(NsV28, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Ship::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Ship::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::Ship::LabelOrderType", XSD::QName.new(NsV28, "LabelOrder")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::Ship::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV28, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::Ship::LiabilityCoverageType", XSD::QName.new(NsV28, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CoverageAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LicenseOrPermitDetail,
    :schema_type => XSD::QName.new(NsV28, "LicenseOrPermitDetail"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LinearMeasure,
    :schema_type => XSD::QName.new(NsV28, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Ship::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Localization,
    :schema_type => XSD::QName.new(NsV28, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV28, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "Count")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Measure,
    :schema_type => XSD::QName.new(NsV28, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Message,
    :schema_type => XSD::QName.new(NsV28, "Message"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["text", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Text")], [0, 1]],
      ["localizedText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedText")], [0, 1]],
      ["parameters", ["FedexWebServices::Soap::Ship::MessageParameter[]", XSD::QName.new(NsV28, "Parameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::MessageParameter,
    :schema_type => XSD::QName.new(NsV28, "MessageParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Money,
    :schema_type => XSD::QName.new(NsV28, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Currency")]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::NetExplosiveClassificationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV28, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PersonHours")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Notification,
    :schema_type => XSD::QName.new(NsV28, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "Severity")]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Source")]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Ship::NotificationParameter[]", XSD::QName.new(NsV28, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Ship::NotificationType", XSD::QName.new(NsV28, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Ship::EMailDetail", XSD::QName.new(NsV28, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationParameter,
    :schema_type => XSD::QName.new(NsV28, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::OfferingIdentifierDetail,
    :schema_type => XSD::QName.new(NsV28, "OfferingIdentifierDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Op900Detail,
    :schema_type => XSD::QName.new(NsV28, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::OperationalInstruction,
    :schema_type => XSD::QName.new(NsV28, "OperationalInstruction"),
    :schema_element => [
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["content", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Content")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageBarcodes,
    :schema_type => XSD::QName.new(NsV28, "PackageBarcodes"),
    :schema_element => [
      ["binaryBarcodes", ["FedexWebServices::Soap::Ship::BinaryBarcode[]", XSD::QName.new(NsV28, "BinaryBarcodes")], [0, nil]],
      ["stringBarcodes", ["FedexWebServices::Soap::Ship::StringBarcode[]", XSD::QName.new(NsV28, "StringBarcodes")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageOperationalDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageOperationalDetail"),
    :schema_element => [
      ["astraHandlingText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraHandlingText")], [0, 1]],
      ["operationalInstructions", ["FedexWebServices::Soap::Ship::OperationalInstruction[]", XSD::QName.new(NsV28, "OperationalInstructions")], [0, nil]],
      ["barcodes", ["FedexWebServices::Soap::Ship::PackageBarcodes", XSD::QName.new(NsV28, "Barcodes")], [0, 1]],
      ["groundServiceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GroundServiceCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageRating,
    :schema_type => XSD::QName.new(NsV28, "PackageRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["packageRateDetails", ["FedexWebServices::Soap::Ship::PackageRateDetail[]", XSD::QName.new(NsV28, "PackageRateDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Ship::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Ship::DangerousGoodsDetail", XSD::QName.new(NsV28, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::Ship::BatteryClassificationDetail[]", XSD::QName.new(NsV28, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::Ship::SignatureOptionDetail", XSD::QName.new(NsV28, "SignatureOptionDetail")], [0, 1]],
      ["pieceCountVerificationBoxCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCountVerificationBoxCount")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Ship::PriorityAlertDetail", XSD::QName.new(NsV28, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::Ship::AlcoholDetail", XSD::QName.new(NsV28, "AlcoholDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackagingDescription,
    :schema_type => XSD::QName.new(NsV28, "PackagingDescription"),
    :schema_element => [
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV28, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV28, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedContact,
    :schema_type => XSD::QName.new(NsV28, "ParsedContact"),
    :schema_element => [
      ["personName", ["FedexWebServices::Soap::Ship::ParsedPersonName", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ParsedContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Ship::ParsedContact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedPersonName,
    :schema_type => XSD::QName.new(NsV28, "ParsedPersonName"),
    :schema_element => [
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FirstName")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddleName")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LastName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Party,
    :schema_type => XSD::QName.new(NsV28, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Ship::TaxpayerIdentification[]", XSD::QName.new(NsV28, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Payment,
    :schema_type => XSD::QName.new(NsV28, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Ship::PaymentType", XSD::QName.new(NsV28, "PaymentType")]],
      ["payor", ["FedexWebServices::Soap::Ship::Payor", XSD::QName.new(NsV28, "Payor")], [0, 1]],
      ["ePaymentDetail", ["FedexWebServices::Soap::Ship::EPaymentDetail", XSD::QName.new(NsV28, "EPaymentDetail")], [0, 1]],
      ["creditCard", ["FedexWebServices::Soap::Ship::CreditCard", XSD::QName.new(NsV28, "CreditCard")], [0, 1]],
      ["creditCardTransactionDetail", ["FedexWebServices::Soap::Ship::CreditCardTransactionDetail", XSD::QName.new(NsV28, "CreditCardTransactionDetail")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Payor,
    :schema_type => XSD::QName.new(NsV28, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::Ship::AssociatedAccount[]", XSD::QName.new(NsV28, "AssociatedAccounts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentAccessDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentAccessDetail"),
    :schema_element => [
      ["accessorDetails", ["FedexWebServices::Soap::Ship::PendingShipmentAccessorDetail[]", XSD::QName.new(NsV28, "AccessorDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentAccessorDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentAccessorDetail"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Ship::AccessorRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")], [0, 1]],
      ["emailLabelUrl", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailLabelUrl")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::PendingShipmentType", XSD::QName.new(NsV28, "Type")]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::Ship::EMailLabelDetail", XSD::QName.new(NsV28, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Ship::RecommendedDocumentSpecification", XSD::QName.new(NsV28, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupDetail,
    :schema_type => XSD::QName.new(NsV28, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::Ship::PickupRequestType", XSD::QName.new(NsV28, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::Ship::PickupRequestSourceType", XSD::QName.new(NsV28, "RequestSource")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PrintedReference,
    :schema_type => XSD::QName.new(NsV28, "PrintedReference"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::PrintedReferenceType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Ship::PriorityAlertEnhancementType[]", XSD::QName.new(NsV28, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Content")], [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentReply,
    :schema_type => XSD::QName.new(NsV28, "ProcessShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "JobId")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]],
      ["errorLabels", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "ErrorLabels")], [0, nil]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "ProcessShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagReply,
    :schema_type => XSD::QName.new(NsV28, "ProcessTagReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagRequest,
    :schema_type => XSD::QName.new(NsV28, "ProcessTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProductName,
    :schema_type => XSD::QName.new(NsV28, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::Ship::RadioactivityUnitOfMeasure", XSD::QName.new(NsV28, "UnitOfMeasure")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::Ship::RadionuclideActivity", XSD::QName.new(NsV28, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::Ship::PhysicalFormType", XSD::QName.new(NsV28, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ChemicalForm")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDiscount,
    :schema_type => XSD::QName.new(NsV28, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::Ship::RateDiscountType", XSD::QName.new(NsV28, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Rebate,
    :schema_type => XSD::QName.new(NsV28, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::Ship::RebateType", XSD::QName.new(NsV28, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::RecipientCustomsIdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::RecommendedDocumentType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryAdvisoryDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryAdvisoryDetail"),
    :schema_element => [
      ["prohibitions", ["FedexWebServices::Soap::Ship::RegulatoryProhibition[]", XSD::QName.new(NsV28, "Prohibitions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::RegulatoryLabelType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::Ship::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV28, "GenerationOptions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryProhibition,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryProhibition"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::Ship::ProhibitionStatusType", XSD::QName.new(NsV28, "Status")], [0, 1]],
      ["source", ["FedexWebServices::Soap::Ship::ProhibitionSourceType", XSD::QName.new(NsV28, "Source")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Ship::ProhibitionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["categories", ["FedexWebServices::Soap::Ship::ShipmentRuleType[]", XSD::QName.new(NsV28, "Categories")], [0, nil]],
      ["commodityIndex", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "CommodityIndex")], [0, 1]],
      ["derivedHarmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DerivedHarmonizedCode")], [0, 1]],
      ["advisory", ["FedexWebServices::Soap::Ship::Message", XSD::QName.new(NsV28, "Advisory")], [0, 1]],
      ["waiver", ["FedexWebServices::Soap::Ship::RegulatoryWaiver", XSD::QName.new(NsV28, "Waiver")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryWaiver,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryWaiver"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["advisories", ["FedexWebServices::Soap::Ship::Message[]", XSD::QName.new(NsV28, "Advisories")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV28, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupPackageCount")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::Ship::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Ship::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["weightSource", ["FedexWebServices::Soap::Ship::WeightSource", XSD::QName.new(NsV28, "WeightSource")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::Ship::PhysicalPackagingType", XSD::QName.new(NsV28, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::Ship::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV28, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, 10]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Ship::PackageSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::Ship::ContentRecord[]", XSD::QName.new(NsV28, "ContentRecords")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::Ship::ShipperConveyanceDetail", XSD::QName.new(NsV28, "ConveyanceDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedShipment,
    :schema_type => XSD::QName.new(NsV28, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")]],
      ["dropoffType", ["FedexWebServices::Soap::Ship::DropoffType", XSD::QName.new(NsV28, "DropoffType")]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")]],
      ["shippingCycle", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ShippingCycle")], [0, 1]],
      ["manifestDetail", ["FedexWebServices::Soap::Ship::ShipmentManifestDetail", XSD::QName.new(NsV28, "ManifestDetail")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::Ship::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV28, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalInsuredValue")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::Ship::ShipmentAuthorizationDetail", XSD::QName.new(NsV28, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Shipper")]],
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Ship::ShipmentSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["processingOptionsRequested", ["FedexWebServices::Soap::Ship::ShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Ship::ExpressFreightDetail", XSD::QName.new(NsV28, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::Ship::FreightShipmentDetail", XSD::QName.new(NsV28, "FreightShipmentDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Ship::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::Ship::CustomsClearanceDetail", XSD::QName.new(NsV28, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::Ship::PickupDetail", XSD::QName.new(NsV28, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Ship::SmartPostShipmentDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "BlockInsightVisibility")], [0, 1]],
      ["errorLabelBehavior", ["FedexWebServices::Soap::Ship::ErrorLabelBehaviorType", XSD::QName.new(NsV28, "ErrorLabelBehavior")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::Ship::LabelSpecification", XSD::QName.new(NsV28, "LabelSpecification")]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::Ship::ShippingDocumentSpecification", XSD::QName.new(NsV28, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::Ship::RateRequestType[]", XSD::QName.new(NsV28, "RateRequestTypes")], [0, nil]],
      ["customerSelectedActualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "CustomerSelectedActualRateType")], [0, 1]],
      ["edtRequestType", ["FedexWebServices::Soap::Ship::EdtRequestType", XSD::QName.new(NsV28, "EdtRequestType")], [0, 1]],
      ["customRatingOptionDetail", ["FedexWebServices::Soap::Ship::CustomRatingOptionDetail", XSD::QName.new(NsV28, "CustomRatingOptionDetail")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "MasterTrackingId")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")]],
      ["configurationData", ["FedexWebServices::Soap::Ship::ShipmentConfigurationData", XSD::QName.new(NsV28, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::Ship::RequestedPackageLineItem[]", XSD::QName.new(NsV28, "RequestedPackageLineItems")], [0, 999]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ShipDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Ship::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV28, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Ship::ReturnType", XSD::QName.new(NsV28, "ReturnType")]],
      ["rma", ["FedexWebServices::Soap::Ship::Rma", XSD::QName.new(NsV28, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Ship::ReturnEMailDetail", XSD::QName.new(NsV28, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Ship::ReturnAssociationDetail", XSD::QName.new(NsV28, "ReturnAssociation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Rma,
    :schema_type => XSD::QName.new(NsV28, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Reason")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "ServiceDescription"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAdvisoryDetail"),
    :schema_element => [
      ["regulatoryAdvisory", ["FedexWebServices::Soap::Ship::RegulatoryAdvisoryDetail", XSD::QName.new(NsV28, "RegulatoryAdvisory")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV28, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::Ship::DangerousGoodsDetail[]", XSD::QName.new(NsV28, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")]],
      ["totalWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalWeight")]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Ship::ShipmentNotificationAggregationType", XSD::QName.new(NsV28, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Ship::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV28, "EventNotifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Ship::ShipmentNotificationRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Ship::NotificationEventType[]", XSD::QName.new(NsV28, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Ship::NotificationDetail", XSD::QName.new(NsV28, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Ship::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV28, "FormatSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Ship::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Ship::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Ship::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Ship::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::Ship::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Ship::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentManifestDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentManifestDetail"),
    :schema_element => [
      ["manifestReferenceType", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "ManifestReferenceType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::NotificationFormatType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentOperationalDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentOperationalDetail"),
    :schema_element => [
      ["ursaPrefixCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrsaPrefixCode")], [0, 1]],
      ["ursaSuffixCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrsaSuffixCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginLocationId")], [0, 1]],
      ["originLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "OriginLocationNumber")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginServiceArea")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationLocationId")], [0, 1]],
      ["destinationLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "DestinationLocationNumber")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["destinationLocationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationLocationStateOrProvinceCode")], [0, 1]],
      ["deliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DeliveryDate")], [0, 1]],
      ["deliveryDay", ["FedexWebServices::Soap::Ship::DayOfWeekType", XSD::QName.new(NsV28, "DeliveryDay")], [0, 1]],
      ["publishedDeliveryTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "PublishedDeliveryTime")], [0, 1]],
      ["commitDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "CommitDate")], [0, 1]],
      ["commitDay", ["FedexWebServices::Soap::Ship::DayOfWeekType", XSD::QName.new(NsV28, "CommitDay")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["customTransitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "CustomTransitTime")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["deliveryEligibilities", ["FedexWebServices::Soap::Ship::GroundDeliveryEligibilityType[]", XSD::QName.new(NsV28, "DeliveryEligibilities")], [0, nil]],
      ["astraPlannedServiceLevel", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraPlannedServiceLevel")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AirportId")], [0, 1]],
      ["serviceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceCode")], [0, 1]],
      ["packagingCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingCode")], [0, 1]],
      ["scac", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Scac")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::ShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["customTransitTimeDetail", ["FedexWebServices::Soap::Ship::CustomTransitTimeDetail", XSD::QName.new(NsV28, "CustomTransitTimeDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Ship::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["quoteCreatorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteCreatorId")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Ship::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Ship::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Ship::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::Ship::ShipmentLegRateDetail[]", XSD::QName.new(NsV28, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::Ship::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Ship::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::Ship::AncillaryFeeAndTax[]", XSD::QName.new(NsV28, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRating,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["shipmentRateDetails", ["FedexWebServices::Soap::Ship::ShipmentRateDetail[]", XSD::QName.new(NsV28, "ShipmentRateDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentReply,
    :schema_type => XSD::QName.new(NsV28, "ShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Ship::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Ship::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Ship::HoldAtLocationDetail", XSD::QName.new(NsV28, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Ship::ShipmentEventNotificationDetail", XSD::QName.new(NsV28, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Ship::ReturnShipmentDetail", XSD::QName.new(NsV28, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Ship::PendingShipmentDetail", XSD::QName.new(NsV28, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Ship::InternationalControlledExportDetail", XSD::QName.new(NsV28, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Ship::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Ship::ShipmentDryIceDetail", XSD::QName.new(NsV28, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Ship::HomeDeliveryPremiumDetail", XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Ship::FlatbedTrailerDetail", XSD::QName.new(NsV28, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Ship::FreightGuaranteeDetail", XSD::QName.new(NsV28, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Ship::EtdDetail", XSD::QName.new(NsV28, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::Ship::ExtraLaborDetail", XSD::QName.new(NsV28, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::Ship::PalletShrinkwrapDetail", XSD::QName.new(NsV28, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::Ship::PalletsProvidedDetail", XSD::QName.new(NsV28, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::Ship::DetentionDetail", XSD::QName.new(NsV28, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::Ship::MarkingOrTaggingDetail", XSD::QName.new(NsV28, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::Ship::NonBusinessTimeDetail", XSD::QName.new(NsV28, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::Ship::ShipmentAssemblyDetail", XSD::QName.new(NsV28, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::Ship::SortAndSegregateDetail", XSD::QName.new(NsV28, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::Ship::SpecialEquipmentDetail", XSD::QName.new(NsV28, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Ship::StorageDetail", XSD::QName.new(NsV28, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::Ship::WeighingDetail", XSD::QName.new(NsV28, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Ship::CustomDeliveryWindowDetail", XSD::QName.new(NsV28, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Values")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocument,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::ReturnedShippingDocumentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::Ship::Localization[]", XSD::QName.new(NsV28, "Localizations")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["shippingDocumentDisposition", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "ShippingDocumentDisposition")], [0, 1]],
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccessReference")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Resolution")], [0, 1]],
      ["copiesToPrint", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "CopiesToPrint")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::Ship::ShippingDocumentPart[]", XSD::QName.new(NsV28, "Parts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentStorageDetail", XSD::QName.new(NsV28, "StorageDetail")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailDetail", XSD::QName.new(NsV28, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentPrintDetail", XSD::QName.new(NsV28, "PrintDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV28, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Ship::EMailNotificationRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::Ship::LinearMeasure", XSD::QName.new(NsV28, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::Ship::ShippingDocumentStockType", XSD::QName.new(NsV28, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Ship::DocumentFormatOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomDocumentIdentifier")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentPart,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPart"),
    :schema_element => [
      ["documentPartSequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "DocumentPartSequenceNumber")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV28, "Image")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::Ship::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "ShippingDocumentTypes")], [1, nil]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::Ship::CertificateOfOriginDetail", XSD::QName.new(NsV28, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::Ship::CommercialInvoiceDetail", XSD::QName.new(NsV28, "CommercialInvoiceDetail")], [0, 1]],
      ["usmcaCommercialInvoiceCertificationOfOriginDetail", ["FedexWebServices::Soap::Ship::UsmcaCommercialInvoiceCertificationOfOriginDetail", XSD::QName.new(NsV28, "UsmcaCommercialInvoiceCertificationOfOriginDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::Ship::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::Ship::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::Ship::ExportDeclarationDetail", XSD::QName.new(NsV28, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::Ship::GeneralAgencyAgreementDetail", XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["usmcaCertificationOfOriginDetail", ["FedexWebServices::Soap::Ship::UsmcaCertificationOfOriginDetail", XSD::QName.new(NsV28, "UsmcaCertificationOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::Ship::Op900Detail", XSD::QName.new(NsV28, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::Ship::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::Ship::FreightAddressLabelDetail", XSD::QName.new(NsV28, "FreightAddressLabelDetail")], [0, 1]],
      ["freightBillOfLadingDetail", ["FedexWebServices::Soap::Ship::FreightBillOfLadingDetail", XSD::QName.new(NsV28, "FreightBillOfLadingDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::Ship::ReturnInstructionsDetail", XSD::QName.new(NsV28, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStorageDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStorageDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::ShippingDocumentStorageDetailType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["filePath", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FilePath")], [0, 1]],
      ["fileNaming", ["FedexWebServices::Soap::Ship::ShippingDocumentNamingType", XSD::QName.new(NsV28, "FileNaming")], [0, 1]],
      ["fileSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileSuffix")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::Ship::SignatureOptionType", XSD::QName.new(NsV28, "OptionType")]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::Ship::SmartPostIndiciaType", XSD::QName.new(NsV28, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::Ship::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV28, "AncillaryEndorsement")], [0, 1]],
      ["specialServices", ["FedexWebServices::Soap::Ship::SmartPostShipmentSpecialServiceType[]", XSD::QName.new(NsV28, "SpecialServices")], [0, nil]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerManifestId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV28, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::Ship::SpecialEquipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::SpecialEquipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "SpecialServiceDescription"),
    :schema_element => [
      ["identifier", ["FedexWebServices::Soap::Ship::OfferingIdentifierDetail", XSD::QName.new(NsV28, "Identifier")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::StorageDetail,
    :schema_type => XSD::QName.new(NsV28, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::StringBarcode,
    :schema_type => XSD::QName.new(NsV28, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::StringBarcodeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Surcharge,
    :schema_type => XSD::QName.new(NsV28, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::Ship::SurchargeType", XSD::QName.new(NsV28, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Ship::SurchargeLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Tax,
    :schema_type => XSD::QName.new(NsV28, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Ship::TaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV28, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Ship::TinType", XSD::QName.new(NsV28, "TinType")]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TrackingId,
    :schema_type => XSD::QName.new(NsV28, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Ship::TrackingIdType", XSD::QName.new(NsV28, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]],
      ["internalTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InternalTransactionId")], [0, 1]],
      ["tracing", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Tracing")], [0, 1]],
      ["sourceFormat", ["FedexWebServices::Soap::Ship::TransactionSourceFormat", XSD::QName.new(NsV28, "SourceFormat")], [0, 1]],
      ["environment", ["FedexWebServices::Soap::Ship::WebServiceEnvironment", XSD::QName.new(NsV28, "Environment")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Ship::UploadDocumentProducerType", XSD::QName.new(NsV28, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Ship::UploadDocumentType", XSD::QName.new(NsV28, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Ship::UploadDocumentIdProducer", XSD::QName.new(NsV28, "DocumentIdProducer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UserDetail,
    :schema_type => XSD::QName.new(NsV28, "UserDetail"),
    :schema_element => [
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")], [0, 1]],
      ["uniqueUserId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UniqueUserId")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::Ship::DateRange", XSD::QName.new(NsV28, "BlanketPeriod")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType", XSD::QName.new(NsV28, "CertifierSpecification")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::Ship::UsmcaImporterSpecificationType", XSD::QName.new(NsV28, "ImporterSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCommercialInvoiceCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCommercialInvoiceCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormVersion")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType", XSD::QName.new(NsV28, "CertifierSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCommodityDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCommodityDetail"),
    :schema_element => [
      ["originCriterion", ["FedexWebServices::Soap::Ship::UsmcaOriginCriterionCode", XSD::QName.new(NsV28, "OriginCriterion")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidateShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "ValidateShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Ship::ValidatedHazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["massPoints", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "MassPoints")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Ship::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["properShippingNameAndDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingNameAndDescription")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["symbols", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Symbols")], [0, 1]],
      ["tunnelRestrictionCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TunnelRestrictionCode")], [0, 1]],
      ["specialProvisions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialProvisions")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Ship::HazardousCommodityAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousContainer,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousContainer"),
    :schema_element => [
      ["qValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "QValue")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Ship::ValidatedHazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::Ship::RateElementBasisType", XSD::QName.new(NsV28, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::Ship::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Volume,
    :schema_type => XSD::QName.new(NsV28, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Ship::VolumeUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeighingDetail,
    :schema_type => XSD::QName.new(NsV28, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::WeighingScaleType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::Weight,
    :schema_type => XSD::QName.new(NsV28, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Ship::WeightUnits", XSD::QName.new(NsV28, "Units")]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Ship::WebAuthenticationCredential", XSD::QName.new(NsV28, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Ship::WebAuthenticationCredential", XSD::QName.new(NsV28, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::VersionId,
    :schema_type => XSD::QName.new(NsV28, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV28, "AccessorRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV28, "AlcoholRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV28, "AssociatedAccountNumberType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedShipmentType,
    :schema_type => XSD::QName.new(NsV28, "AssociatedShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::AutoConfigurationType,
    :schema_type => XSD::QName.new(NsV28, "AutoConfigurationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV28, "B13AFilingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV28, "BarcodeSymbologyType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV28, "BatteryMaterialType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV28, "BatteryPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV28, "BatteryRegulatorySubType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BinaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "BinaryBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::BrokerType,
    :schema_type => XSD::QName.new(NsV28, "BrokerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV28, "CarrierCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV28, "ChargeBasisLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV28, "ClearanceBrokerageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAdjustmentType,
    :schema_type => XSD::QName.new(NsV28, "CodAdjustmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodCollectionType,
    :schema_type => XSD::QName.new(NsV28, "CodCollectionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV28, "CodReturnReferenceIndicatorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV28, "CommodityPurposeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedEtdType,
    :schema_type => XSD::QName.new(NsV28, "CompletedEtdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardAuthorizationType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardAuthorizationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionAttributeType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelCoordinateUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomRatingOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomRatingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV28, "CustomerReferenceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelGenerationOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsDeclarationStatementType,
    :schema_type => XSD::QName.new(NsV28, "CustomsDeclarationStatementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsAccessibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsPackingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV28, "DayOfWeekType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeletionControlType,
    :schema_type => XSD::QName.new(NsV28, "DeletionControlType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlStatementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentType,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneJustificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::DropoffType,
    :schema_type => XSD::QName.new(NsV28, "DropoffType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV28, "EMailNotificationRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentModeType,
    :schema_type => XSD::QName.new(NsV28, "EPaymentModeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentProcessorType,
    :schema_type => XSD::QName.new(NsV28, "EPaymentProcessorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtRequestType,
    :schema_type => XSD::QName.new(NsV28, "EdtRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtTaxType,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EmailOptionType,
    :schema_type => XSD::QName.new(NsV28, "EmailOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EnterpriseDocumentType,
    :schema_type => XSD::QName.new(NsV28, "EnterpriseDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ErrorLabelBehaviorType,
    :schema_type => XSD::QName.new(NsV28, "ErrorLabelBehaviorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV28, "EtdAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV28, "EtdConfirmationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV28, "ExpressRegionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FedExLocationType,
    :schema_type => XSD::QName.new(NsV28, "FedExLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerOption")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseChargeCalculationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "FreightChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightClassType,
    :schema_type => XSD::QName.new(NsV28, "FreightClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV28, "FreightCollectTermsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV28, "FreightOnValueType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV28, "FreightRateQuoteType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::GroundDeliveryEligibilityType,
    :schema_type => XSD::QName.new(NsV28, "GroundDeliveryEligibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityAttributeType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescriptionProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityLabelTextOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingGroupType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityRegulationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV28, "HazardousContainerPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ImageId,
    :schema_type => XSD::QName.new(NsV28, "ImageId")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternalImageType,
    :schema_type => XSD::QName.new(NsV28, "InternalImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV28, "InternationalDocumentContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelFormatType,
    :schema_type => XSD::QName.new(NsV28, "LabelFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV28, "LabelMaskableDataType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelOrderType,
    :schema_type => XSD::QName.new(NsV28, "LabelOrderType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV28, "LabelPrintingOrientationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelRotationType,
    :schema_type => XSD::QName.new(NsV28, "LabelRotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelStockType,
    :schema_type => XSD::QName.new(NsV28, "LabelStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::LinearUnits,
    :schema_type => XSD::QName.new(NsV28, "LinearUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV28, "MinimumChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveClassificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationEventType,
    :schema_type => XSD::QName.new(NsV28, "NotificationEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV28, "NotificationFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV28, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationType,
    :schema_type => XSD::QName.new(NsV28, "NotificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::OversizeClassType,
    :schema_type => XSD::QName.new(NsV28, "OversizeClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV28, "PageQuadrantType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PaymentType,
    :schema_type => XSD::QName.new(NsV28, "PaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalFormType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalPackagingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestSourceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupRequestType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PricingCodeType,
    :schema_type => XSD::QName.new(NsV28, "PricingCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PrintedReferenceType,
    :schema_type => XSD::QName.new(NsV28, "PrintedReferenceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertEnhancementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionSourceType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionSourceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionStatusType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PurposeOfShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveContainerClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactiveLabelType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityUnitOfMeasure")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV28, "RateDimensionalDivisorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDiscountType,
    :schema_type => XSD::QName.new(NsV28, "RateDiscountType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateElementBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateRequestType,
    :schema_type => XSD::QName.new(NsV28, "RateRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateTypeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV28, "RatedWeightMethod")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RebateType,
    :schema_type => XSD::QName.new(NsV28, "RebateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryControlType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV28, "RelativeVerticalPositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequestedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequiredDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequiredDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequirementType,
    :schema_type => XSD::QName.new(NsV28, "RequirementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailAllowedSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnType,
    :schema_type => XSD::QName.new(NsV28, "ReturnType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedRateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::RotationType,
    :schema_type => XSD::QName.new(NsV28, "RotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "SecondaryBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationAggregationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRuleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRuleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentNamingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentNamingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStorageDetailType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStorageDetailType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostAncillaryEndorsementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostIndiciaType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV28, "SpecialRatingAppliedType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "StringBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::SurchargeType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxType,
    :schema_type => XSD::QName.new(NsV28, "TaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TinType,
    :schema_type => XSD::QName.new(NsV28, "TinType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TrackingIdType,
    :schema_type => XSD::QName.new(NsV28, "TrackingIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransactionSourceFormat,
    :schema_type => XSD::QName.new(NsV28, "TransactionSourceFormat")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransitTimeType,
    :schema_type => XSD::QName.new(NsV28, "TransitTimeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentIdProducer")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentProducerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCertifierSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaImporterSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaOriginCriterionCode,
    :schema_type => XSD::QName.new(NsV28, "UsmcaOriginCriterionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaProducerSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::VolumeUnits,
    :schema_type => XSD::QName.new(NsV28, "VolumeUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebServiceEnvironment,
    :schema_type => XSD::QName.new(NsV28, "WebServiceEnvironment")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV28, "WeighingScaleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeightSource,
    :schema_type => XSD::QName.new(NsV28, "WeightSource")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeightUnits,
    :schema_type => XSD::QName.new(NsV28, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AdditionalLabelsType", XSD::QName.new(NsV28, "Type")]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Address,
    :schema_type => XSD::QName.new(NsV28, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV28, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GeographicCoordinates")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdrLicenseDetail,
    :schema_type => XSD::QName.new(NsV28, "AdrLicenseDetail"),
    :schema_element => [
      ["licenseOrPermitDetail", ["FedexWebServices::Soap::Ship::LicenseOrPermitDetail", XSD::QName.new(NsV28, "LicenseOrPermitDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV28, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Ship::AlcoholRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AncillaryFeeAndTaxType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV28, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AssociatedAccountNumberType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::AssociatedShipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["sender", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Sender")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, nil]],
      ["shipmentOperationalDetail", ["FedexWebServices::Soap::Ship::ShipmentOperationalDetail", XSD::QName.new(NsV28, "ShipmentOperationalDetail")], [0, 1]],
      ["packageOperationalDetail", ["FedexWebServices::Soap::Ship::PackageOperationalDetail", XSD::QName.new(NsV28, "PackageOperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV28, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::Ship::BatteryMaterialType", XSD::QName.new(NsV28, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::Ship::BatteryPackingType", XSD::QName.new(NsV28, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::Ship::BatteryRegulatorySubType", XSD::QName.new(NsV28, "RegulatorySubType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BinaryBarcode,
    :schema_type => XSD::QName.new(NsV28, "BinaryBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::BinaryBarcodeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPBase64", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BrokerDetail,
    :schema_type => XSD::QName.new(NsV28, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::BrokerType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Broker")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ClientDetail,
    :schema_type => XSD::QName.new(NsV28, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")]],
      ["groundShipperNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GroundShipperNumber")], [0, 1]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterNumber")]],
      ["masterMeterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MasterMeterNumber")], [0, 1]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterInstance")], [0, 1]],
      ["companyId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyId")], [0, 1]],
      ["softwareId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SoftwareId")], [0, 1]],
      ["softwareRelease", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SoftwareRelease")], [0, 1]],
      ["clientProductId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ClientProductId")], [0, 1]],
      ["clientProductVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ClientProductVersion")], [0, 1]],
      ["middlewareProductId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddlewareProductId")], [0, 1]],
      ["middlewareProductVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddlewareProductVersion")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Ship::ExpressRegionCode", XSD::QName.new(NsV28, "Region")], [0, 1]],
      ["autoConfigurationType", ["FedexWebServices::Soap::Ship::AutoConfigurationType", XSD::QName.new(NsV28, "AutoConfigurationType")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Ship::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Ship::CodAddTransportationChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Ship::ChargeBasisLevelType", XSD::QName.new(NsV28, "ChargeBasisLevel")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodDetail,
    :schema_type => XSD::QName.new(NsV28, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Ship::CodAddTransportationChargesDetail", XSD::QName.new(NsV28, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Ship::CodCollectionType", XSD::QName.new(NsV28, "CollectionType")]],
      ["codRecipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Ship::CodReturnReferenceIndicatorType", XSD::QName.new(NsV28, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "ReturnTrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodReturnPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CodReturnPackageDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::Ship::CodAdjustmentType", XSD::QName.new(NsV28, "AdjustmentType")], [0, 1]],
      ["electronic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Electronic")], [0, 1]],
      ["barcodes", ["FedexWebServices::Soap::Ship::PackageBarcodes", XSD::QName.new(NsV28, "Barcodes")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Comments")], [0, 99]],
      ["freightCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::Ship::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Ship::PurposeOfShipmentType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["purposeOfShipmentDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PurposeOfShipmentDescription")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, nil]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TermsOfSale")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormVersion")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Commodity,
    :schema_type => XSD::QName.new(NsV28, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfPieces")]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Ship::CommodityPurposeType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryOfManufacture")]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Ship::Measure[]", XSD::QName.new(NsV28, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Ship::EdtExciseCondition[]", XSD::QName.new(NsV28, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["usmcaDetail", ["FedexWebServices::Soap::Ship::UsmcaCommodityDetail", XSD::QName.new(NsV28, "UsmcaDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedCodDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedCodDetail"),
    :schema_element => [
      ["collectionAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CollectionAmount")], [0, 1]],
      ["adjustmentType", ["FedexWebServices::Soap::Ship::CodAdjustmentType", XSD::QName.new(NsV28, "AdjustmentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedEtdDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedEtdDetail"),
    :schema_element => [
      ["folderId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FolderId")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Ship::CompletedEtdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["uploadDocumentReferenceDetails", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "UploadDocumentReferenceDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousPackageDetail"),
    :schema_element => [
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::Ship::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["radioactiveTransportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "RadioactiveTransportIndex")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::Ship::RadioactiveLabelType", XSD::QName.new(NsV28, "LabelType")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Ship::ValidatedHazardousContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousShipmentDetail"),
    :schema_element => [
      ["hazardousSummaryDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousSummaryDetail", XSD::QName.new(NsV28, "HazardousSummaryDetail")], [0, 1]],
      ["dryIceDetail", ["FedexWebServices::Soap::Ship::ShipmentDryIceDetail", XSD::QName.new(NsV28, "DryIceDetail")], [0, 1]],
      ["adrLicense", ["FedexWebServices::Soap::Ship::AdrLicenseDetail", XSD::QName.new(NsV28, "AdrLicense")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHazardousSummaryDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHazardousSummaryDetail"),
    :schema_element => [
      ["smallQuantityExceptionPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SmallQuantityExceptionPackageCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedHoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedHoldAtLocationDetail"),
    :schema_element => [
      ["holdingLocation", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "HoldingLocation")], [0, 1]],
      ["holdingLocationType", ["FedexWebServices::Soap::Ship::FedExLocationType", XSD::QName.new(NsV28, "HoldingLocationType")], [0, 1]],
      ["holdingLocationTypeForDisplay", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HoldingLocationTypeForDisplay")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedPackageDetail"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::Ship::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::Ship::OversizeClassType", XSD::QName.new(NsV28, "OversizeClass")], [0, 1]],
      ["packageRating", ["FedexWebServices::Soap::Ship::PackageRating", XSD::QName.new(NsV28, "PackageRating")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::Ship::SpecialServiceDescription[]", XSD::QName.new(NsV28, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::Ship::PackageOperationalDetail", XSD::QName.new(NsV28, "OperationalDetail")], [0, 1]],
      ["label", ["FedexWebServices::Soap::Ship::ShippingDocument", XSD::QName.new(NsV28, "Label")], [0, 1]],
      ["packageDocuments", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "PackageDocuments")], [0, nil]],
      ["codReturnDetail", ["FedexWebServices::Soap::Ship::CodReturnPackageDetail", XSD::QName.new(NsV28, "CodReturnDetail")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::Ship::SignatureOptionType", XSD::QName.new(NsV28, "SignatureOption")], [0, 1]],
      ["dryIceWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["hazardousPackageDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousPackageDetail", XSD::QName.new(NsV28, "HazardousPackageDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedShipmentDetail"),
    :schema_element => [
      ["usDomestic", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "UsDomestic")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Ship::CarrierCodeType", XSD::QName.new(NsV28, "CarrierCode")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "MasterTrackingId")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Ship::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["packagingDescription", ["FedexWebServices::Soap::Ship::PackagingDescription", XSD::QName.new(NsV28, "PackagingDescription")], [0, 1]],
      ["specialServiceDescriptions", ["FedexWebServices::Soap::Ship::SpecialServiceDescription[]", XSD::QName.new(NsV28, "SpecialServiceDescriptions")], [0, nil]],
      ["operationalDetail", ["FedexWebServices::Soap::Ship::ShipmentOperationalDetail", XSD::QName.new(NsV28, "OperationalDetail")], [0, 1]],
      ["accessDetail", ["FedexWebServices::Soap::Ship::PendingShipmentAccessDetail", XSD::QName.new(NsV28, "AccessDetail")], [0, 1]],
      ["tagDetail", ["FedexWebServices::Soap::Ship::CompletedTagDetail", XSD::QName.new(NsV28, "TagDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Ship::CompletedSmartPostDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["hazardousShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedHazardousShipmentDetail", XSD::QName.new(NsV28, "HazardousShipmentDetail")], [0, 1]],
      ["shipmentRating", ["FedexWebServices::Soap::Ship::ShipmentRating", XSD::QName.new(NsV28, "ShipmentRating")], [0, 1]],
      ["completedHoldAtLocationDetail", ["FedexWebServices::Soap::Ship::CompletedHoldAtLocationDetail", XSD::QName.new(NsV28, "CompletedHoldAtLocationDetail")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["documentRequirements", ["FedexWebServices::Soap::Ship::DocumentRequirementsDetail", XSD::QName.new(NsV28, "DocumentRequirements")], [0, 1]],
      ["completedEtdDetail", ["FedexWebServices::Soap::Ship::CompletedEtdDetail", XSD::QName.new(NsV28, "CompletedEtdDetail")], [0, 1]],
      ["shipmentDocuments", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "ShipmentDocuments")], [0, nil]],
      ["associatedShipments", ["FedexWebServices::Soap::Ship::AssociatedShipmentDetail[]", XSD::QName.new(NsV28, "AssociatedShipments")], [0, nil]],
      ["completedCodDetail", ["FedexWebServices::Soap::Ship::CompletedCodDetail", XSD::QName.new(NsV28, "CompletedCodDetail")], [0, 1]],
      ["completedPackageDetails", ["FedexWebServices::Soap::Ship::CompletedPackageDetail[]", XSD::QName.new(NsV28, "CompletedPackageDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedSmartPostDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedSmartPostDetail"),
    :schema_element => [
      ["pickUpCarrier", ["FedexWebServices::Soap::Ship::CarrierCodeType", XSD::QName.new(NsV28, "PickUpCarrier")], [0, 1]],
      ["machinable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Machinable")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedTagDetail,
    :schema_type => XSD::QName.new(NsV28, "CompletedTagDetail"),
    :schema_element => [
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ConfirmationNumber")]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "AccessTime")], [0, 1]],
      ["cutoffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "CutoffTime")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Location")], [0, 1]],
      ["deliveryCommitment", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "DeliveryCommitment")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DispatchDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV28, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Contact,
    :schema_type => XSD::QName.new(NsV28, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ContentRecord,
    :schema_type => XSD::QName.new(NsV28, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCard,
    :schema_type => XSD::QName.new(NsV28, "CreditCard"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")]],
      ["creditCardType", ["FedexWebServices::Soap::Ship::CreditCardType", XSD::QName.new(NsV28, "CreditCardType")]],
      ["expirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExpirationDate")]],
      ["verificationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "VerificationCode")], [0, 1]],
      ["creditCardHolder", ["FedexWebServices::Soap::Ship::ParsedContactAndAddress", XSD::QName.new(NsV28, "CreditCardHolder")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionAttributesDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionAttributesDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::CreditCardTransactionAttributeType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionDetail"),
    :schema_element => [
      ["authorizationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AuthorizationId")], [0, 1]],
      ["authorizationType", ["FedexWebServices::Soap::Ship::CreditCardAuthorizationType", XSD::QName.new(NsV28, "AuthorizationType")], [0, 1]],
      ["fraudDetectionDetail", ["FedexWebServices::Soap::Ship::CreditFraudDetectionDetail", XSD::QName.new(NsV28, "FraudDetectionDetail")], [0, 1]],
      ["payorAuthenticationSessionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PayorAuthenticationSessionId")], [0, 1]],
      ["attributesDetail", ["FedexWebServices::Soap::Ship::CreditCardTransactionAttributesDetail", XSD::QName.new(NsV28, "AttributesDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditFraudDetectionDetail,
    :schema_type => XSD::QName.new(NsV28, "CreditFraudDetectionDetail"),
    :schema_element => [
      ["ipAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IpAddress")], [0, 1]],
      ["clientCookiesEnabled", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ClientCookiesEnabled")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV28, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Rate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomDeliveryWindowType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Ship::DateRange", XSD::QName.new(NsV28, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "RequestDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDiscountExclusionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDiscountExclusionDetail"),
    :schema_element => [
      ["excludedTypes", ["FedexWebServices::Soap::Ship::RateDiscountType[]", XSD::QName.new(NsV28, "ExcludedTypes")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Ship::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Ship::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecificationId")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomDocumentIdentifier")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::Ship::BarcodeSymbologyType", XSD::QName.new(NsV28, "BarcodeSymbology")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::Ship::CustomLabelCoordinateUnits", XSD::QName.new(NsV28, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::Ship::CustomLabelTextEntry[]", XSD::QName.new(NsV28, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::Ship::CustomLabelGraphicEntry[]", XSD::QName.new(NsV28, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::Ship::CustomLabelBoxEntry[]", XSD::QName.new(NsV28, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::Ship::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV28, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::Ship::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV28, "BarcodeEntries")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileGraphicFullName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "X")]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Y")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Ship::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Ship::CustomLabelPosition", XSD::QName.new(NsV28, "Position")]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Ship::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomRatingOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomRatingOptionDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::CustomRatingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["customDiscountExclusionDetail", ["FedexWebServices::Soap::Ship::CustomDiscountExclusionDetail", XSD::QName.new(NsV28, "CustomDiscountExclusionDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomTransitTimeDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomTransitTimeDetail"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomerImageUsageType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::Ship::ImageId", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["internalId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InternalId")], [0, 1]],
      ["internalImageType", ["FedexWebServices::Soap::Ship::InternalImageType", XSD::QName.new(NsV28, "InternalImageType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerReference,
    :schema_type => XSD::QName.new(NsV28, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "CustomerReferenceType")]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Ship::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::Ship::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV28, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::Ship::LabelMaskableDataType[]", XSD::QName.new(NsV28, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::Ship::SecondaryBarcodeType", XSD::QName.new(NsV28, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::Ship::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV28, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::Ship::AdditionalLabelsDetail[]", XSD::QName.new(NsV28, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::Ship::BrokerDetail[]", XSD::QName.new(NsV28, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Ship::ClearanceBrokerageType", XSD::QName.new(NsV28, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::Ship::CustomsOptionDetail", XSD::QName.new(NsV28, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::Ship::RecipientCustomsId", XSD::QName.new(NsV28, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::Ship::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::Ship::FreightOnValueType", XSD::QName.new(NsV28, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::Ship::CommercialInvoice", XSD::QName.new(NsV28, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Ship::Commodity[]", XSD::QName.new(NsV28, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::Ship::ExportDetail", XSD::QName.new(NsV28, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::Ship::RegulatoryControlType[]", XSD::QName.new(NsV28, "RegulatoryControls")], [0, nil]],
      ["declarationStatementDetail", ["FedexWebServices::Soap::Ship::CustomsDeclarationStatementDetail", XSD::QName.new(NsV28, "DeclarationStatementDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsDeclarationStatementDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsDeclarationStatementDetail"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::CustomsDeclarationStatementType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::CustomsOptionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::Ship::HazardousContainerPackingType", XSD::QName.new(NsV28, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::Ship::RadioactiveContainerClassType", XSD::QName.new(NsV28, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Ship::HazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsDetail"),
    :schema_element => [
      ["uploadedTrackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UploadedTrackingNumber")], [0, 1]],
      ["regulation", ["FedexWebServices::Soap::Ship::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::Ship::DangerousGoodsPackingOptionType", XSD::QName.new(NsV28, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Ship::DangerousGoodsContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::Ship::HazardousCommodityPackagingDetail", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::Ship::DangerousGoodsSignatory", XSD::QName.new(NsV28, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::Ship::RadioactivityDetail", XSD::QName.new(NsV28, "RadioactivityDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Place")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DateRange,
    :schema_type => XSD::QName.new(NsV28, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "DeleteShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]],
      ["deletionControl", ["FedexWebServices::Soap::Ship::DeletionControlType", XSD::QName.new(NsV28, "DeletionControl")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteTagRequest,
    :schema_type => XSD::QName.new(NsV28, "DeleteTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["dispatchLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DispatchLocationId")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DispatchDate")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "Payment")]],
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ConfirmationNumber")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::Ship::DestinationControlStatementType[]", XSD::QName.new(NsV28, "StatementTypes")], [1, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EndUser")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DetentionDetail,
    :schema_type => XSD::QName.new(NsV28, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Dimensions,
    :schema_type => XSD::QName.new(NsV28, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Length")]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Width")]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Height")]],
      ["units", ["FedexWebServices::Soap::Ship::LinearUnits", XSD::QName.new(NsV28, "Units")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContent,
    :schema_type => XSD::QName.new(NsV28, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::Ship::DocTabContentType", XSD::QName.new(NsV28, "DocTabContentType")]],
      ["zone001", ["FedexWebServices::Soap::Ship::DocTabContentZone001", XSD::QName.new(NsV28, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::Ship::DocTabContentBarcoded", XSD::QName.new(NsV28, "Barcoded")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::Ship::BarcodeSymbologyType", XSD::QName.new(NsV28, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::Ship::DocTabZoneSpecification", XSD::QName.new(NsV28, "Specification")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::Ship::DocTabZoneSpecification[]", XSD::QName.new(NsV28, "DocTabZoneSpecifications")], [1, 12]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::Ship::DocTabZoneJustificationType", XSD::QName.new(NsV28, "Justification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::DocumentFormatOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentGenerationDetail,
    :schema_type => XSD::QName.new(NsV28, "DocumentGenerationDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::EnterpriseDocumentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["minimumCopiesRequired", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "MinimumCopiesRequired")], [0, 1]],
      ["letterhead", ["FedexWebServices::Soap::Ship::RequirementType", XSD::QName.new(NsV28, "Letterhead")], [0, 1]],
      ["electronicSignature", ["FedexWebServices::Soap::Ship::RequirementType", XSD::QName.new(NsV28, "ElectronicSignature")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentRequirementsDetail,
    :schema_type => XSD::QName.new(NsV28, "DocumentRequirementsDetail"),
    :schema_element => [
      ["requiredDocuments", ["FedexWebServices::Soap::Ship::RequiredDocumentType[]", XSD::QName.new(NsV28, "RequiredDocuments")], [0, nil]],
      ["generationDetails", ["FedexWebServices::Soap::Ship::DocumentGenerationDetail[]", XSD::QName.new(NsV28, "GenerationDetails")], [0, nil]],
      ["prohibitedDocuments", ["FedexWebServices::Soap::Ship::EnterpriseDocumentType[]", XSD::QName.new(NsV28, "ProhibitedDocuments")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::Ship::EMailRecipient[]", XSD::QName.new(NsV28, "Recipients")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Ship::AccessorRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Ship::EmailOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentDetail,
    :schema_type => XSD::QName.new(NsV28, "EPaymentDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["ePaymentProcessor", ["FedexWebServices::Soap::Ship::EPaymentProcessorType", XSD::QName.new(NsV28, "EPaymentProcessor")], [0, 1]],
      ["ePaymentMode", ["FedexWebServices::Soap::Ship::EPaymentModeType", XSD::QName.new(NsV28, "EPaymentMode")], [0, 1]],
      ["maskedCreditCard", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MaskedCreditCard")], [0, 1]],
      ["creditCardType", ["FedexWebServices::Soap::Ship::CreditCardType", XSD::QName.new(NsV28, "CreditCardType")], [0, 1]],
      ["creditCardExpirationDate", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CreditCardExpirationDate")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV28, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::Ship::EdtTaxDetail[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Total")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV28, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Ship::EdtTaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::EmailOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdDetail,
    :schema_type => XSD::QName.new(NsV28, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::Ship::EtdConfirmationType", XSD::QName.new(NsV28, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Ship::EtdAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Ship::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "RequestedDocumentCopies")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExportDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::Ship::B13AFilingOptionType", XSD::QName.new(NsV28, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::Ship::DestinationControlDetail", XSD::QName.new(NsV28, "DestinationControlDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::Ship::ExpressFreightDetailContact", XSD::QName.new(NsV28, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::Ship::ExpressFreightDetailContact", XSD::QName.new(NsV28, "UndeliverableContact")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Phone")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV28, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::FlatbedTrailerOption[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::Ship::PageQuadrantType", XSD::QName.new(NsV28, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Ship::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Ship::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Ship::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Ship::FreightChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "ExtendedAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBillOfLadingDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightBillOfLadingDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::FreightGuaranteeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "Time")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::Ship::FreightRateQuoteType", XSD::QName.new(NsV28, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::Ship::FreightBaseChargeCalculationType", XSD::QName.new(NsV28, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::Ship::FreightBaseCharge[]", XSD::QName.new(NsV28, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::Ship::FreightRateNotation[]", XSD::QName.new(NsV28, "Notations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV28, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "AlternateBilling")], [0, 1]],
      ["printedReferences", ["FedexWebServices::Soap::Ship::PrintedReference[]", XSD::QName.new(NsV28, "PrintedReferences")], [0, nil]],
      ["role", ["FedexWebServices::Soap::Ship::FreightShipmentRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::Ship::FreightCollectTermsType", XSD::QName.new(NsV28, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Ship::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::Ship::FreightSpecialServicePayment[]", XSD::QName.new(NsV28, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsEmergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsEmergencyContactNumber")], [0, 1]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Ship::FreightShipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::Ship::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["classProvidedByCustomer", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ClassProvidedByCustomer")], [0, 1]],
      ["billingMaskName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BillingMaskName")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Ship::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["handlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "HandlingUnits")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Ship::PhysicalPackagingType", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Pieces")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["hazardousMaterials", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionType", XSD::QName.new(NsV28, "HazardousMaterials")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PurchaseOrderNumber")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::Ship::Volume", XSD::QName.new(NsV28, "Volume")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV28, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Ship::FreightShipmentRoleType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Ship::HazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::Ship::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV28, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::Ship::RadionuclideDetail", XSD::QName.new(NsV28, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Ship::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingDetail", XSD::QName.new(NsV28, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV28, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::Ship::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV28, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityType", XSD::QName.new(NsV28, "QuantityType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Ship::FedExLocationType", XSD::QName.new(NsV28, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Ship::HomeDeliveryPremiumType", XSD::QName.new(NsV28, "HomeDeliveryPremiumType")]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::InternationalControlledExportType", XSD::QName.new(NsV28, "Type")]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelSpecification,
    :schema_type => XSD::QName.new(NsV28, "LabelSpecification"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["labelFormatType", ["FedexWebServices::Soap::Ship::LabelFormatType", XSD::QName.new(NsV28, "LabelFormatType")]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::Ship::LabelStockType", XSD::QName.new(NsV28, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Ship::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Ship::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::Ship::LabelOrderType", XSD::QName.new(NsV28, "LabelOrder")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::Ship::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV28, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::Ship::LiabilityCoverageType", XSD::QName.new(NsV28, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "CoverageAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LicenseOrPermitDetail,
    :schema_type => XSD::QName.new(NsV28, "LicenseOrPermitDetail"),
    :schema_element => [
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LinearMeasure,
    :schema_type => XSD::QName.new(NsV28, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Ship::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Localization,
    :schema_type => XSD::QName.new(NsV28, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV28, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "Count")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Measure,
    :schema_type => XSD::QName.new(NsV28, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Message,
    :schema_type => XSD::QName.new(NsV28, "Message"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["text", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Text")], [0, 1]],
      ["localizedText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedText")], [0, 1]],
      ["parameters", ["FedexWebServices::Soap::Ship::MessageParameter[]", XSD::QName.new(NsV28, "Parameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::MessageParameter,
    :schema_type => XSD::QName.new(NsV28, "MessageParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Money,
    :schema_type => XSD::QName.new(NsV28, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Currency")]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::NetExplosiveClassificationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV28, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PersonHours")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Notification,
    :schema_type => XSD::QName.new(NsV28, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "Severity")]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Source")]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Ship::NotificationParameter[]", XSD::QName.new(NsV28, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Ship::NotificationType", XSD::QName.new(NsV28, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Ship::EMailDetail", XSD::QName.new(NsV28, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationParameter,
    :schema_type => XSD::QName.new(NsV28, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::OfferingIdentifierDetail,
    :schema_type => XSD::QName.new(NsV28, "OfferingIdentifierDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Op900Detail,
    :schema_type => XSD::QName.new(NsV28, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::OperationalInstruction,
    :schema_type => XSD::QName.new(NsV28, "OperationalInstruction"),
    :schema_element => [
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["content", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Content")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageBarcodes,
    :schema_type => XSD::QName.new(NsV28, "PackageBarcodes"),
    :schema_element => [
      ["binaryBarcodes", ["FedexWebServices::Soap::Ship::BinaryBarcode[]", XSD::QName.new(NsV28, "BinaryBarcodes")], [0, nil]],
      ["stringBarcodes", ["FedexWebServices::Soap::Ship::StringBarcode[]", XSD::QName.new(NsV28, "StringBarcodes")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageOperationalDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageOperationalDetail"),
    :schema_element => [
      ["astraHandlingText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraHandlingText")], [0, 1]],
      ["operationalInstructions", ["FedexWebServices::Soap::Ship::OperationalInstruction[]", XSD::QName.new(NsV28, "OperationalInstructions")], [0, nil]],
      ["barcodes", ["FedexWebServices::Soap::Ship::PackageBarcodes", XSD::QName.new(NsV28, "Barcodes")], [0, 1]],
      ["groundServiceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GroundServiceCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageRating,
    :schema_type => XSD::QName.new(NsV28, "PackageRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["packageRateDetails", ["FedexWebServices::Soap::Ship::PackageRateDetail[]", XSD::QName.new(NsV28, "PackageRateDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Ship::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Ship::DangerousGoodsDetail", XSD::QName.new(NsV28, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::Ship::BatteryClassificationDetail[]", XSD::QName.new(NsV28, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::Ship::SignatureOptionDetail", XSD::QName.new(NsV28, "SignatureOptionDetail")], [0, 1]],
      ["pieceCountVerificationBoxCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCountVerificationBoxCount")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Ship::PriorityAlertDetail", XSD::QName.new(NsV28, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::Ship::AlcoholDetail", XSD::QName.new(NsV28, "AlcoholDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PackagingDescription,
    :schema_type => XSD::QName.new(NsV28, "PackagingDescription"),
    :schema_element => [
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV28, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV28, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedContact,
    :schema_type => XSD::QName.new(NsV28, "ParsedContact"),
    :schema_element => [
      ["personName", ["FedexWebServices::Soap::Ship::ParsedPersonName", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ParsedContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Ship::ParsedContact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ParsedPersonName,
    :schema_type => XSD::QName.new(NsV28, "ParsedPersonName"),
    :schema_element => [
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FirstName")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MiddleName")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LastName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Party,
    :schema_type => XSD::QName.new(NsV28, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Ship::TaxpayerIdentification[]", XSD::QName.new(NsV28, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Ship::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Payment,
    :schema_type => XSD::QName.new(NsV28, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Ship::PaymentType", XSD::QName.new(NsV28, "PaymentType")]],
      ["payor", ["FedexWebServices::Soap::Ship::Payor", XSD::QName.new(NsV28, "Payor")], [0, 1]],
      ["ePaymentDetail", ["FedexWebServices::Soap::Ship::EPaymentDetail", XSD::QName.new(NsV28, "EPaymentDetail")], [0, 1]],
      ["creditCard", ["FedexWebServices::Soap::Ship::CreditCard", XSD::QName.new(NsV28, "CreditCard")], [0, 1]],
      ["creditCardTransactionDetail", ["FedexWebServices::Soap::Ship::CreditCardTransactionDetail", XSD::QName.new(NsV28, "CreditCardTransactionDetail")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Payor,
    :schema_type => XSD::QName.new(NsV28, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::Ship::AssociatedAccount[]", XSD::QName.new(NsV28, "AssociatedAccounts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentAccessDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentAccessDetail"),
    :schema_element => [
      ["accessorDetails", ["FedexWebServices::Soap::Ship::PendingShipmentAccessorDetail[]", XSD::QName.new(NsV28, "AccessorDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentAccessorDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentAccessorDetail"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Ship::AccessorRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")], [0, 1]],
      ["emailLabelUrl", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailLabelUrl")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::PendingShipmentType", XSD::QName.new(NsV28, "Type")]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::Ship::EMailLabelDetail", XSD::QName.new(NsV28, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Ship::RecommendedDocumentSpecification", XSD::QName.new(NsV28, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupDetail,
    :schema_type => XSD::QName.new(NsV28, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::Ship::PickupRequestType", XSD::QName.new(NsV28, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::Ship::PickupRequestSourceType", XSD::QName.new(NsV28, "RequestSource")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PrintedReference,
    :schema_type => XSD::QName.new(NsV28, "PrintedReference"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::PrintedReferenceType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Ship::PriorityAlertEnhancementType[]", XSD::QName.new(NsV28, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Content")], [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentReply,
    :schema_type => XSD::QName.new(NsV28, "ProcessShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "JobId")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]],
      ["errorLabels", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "ErrorLabels")], [0, nil]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "ProcessShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagReply,
    :schema_type => XSD::QName.new(NsV28, "ProcessTagReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagRequest,
    :schema_type => XSD::QName.new(NsV28, "ProcessTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProductName,
    :schema_type => XSD::QName.new(NsV28, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::Ship::RadioactivityUnitOfMeasure", XSD::QName.new(NsV28, "UnitOfMeasure")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::Ship::RadionuclideActivity", XSD::QName.new(NsV28, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::Ship::PhysicalFormType", XSD::QName.new(NsV28, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ChemicalForm")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDiscount,
    :schema_type => XSD::QName.new(NsV28, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::Ship::RateDiscountType", XSD::QName.new(NsV28, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Rebate,
    :schema_type => XSD::QName.new(NsV28, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::Ship::RebateType", XSD::QName.new(NsV28, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::RecipientCustomsIdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Ship::RecommendedDocumentType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryAdvisoryDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryAdvisoryDetail"),
    :schema_element => [
      ["prohibitions", ["FedexWebServices::Soap::Ship::RegulatoryProhibition[]", XSD::QName.new(NsV28, "Prohibitions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::RegulatoryLabelType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::Ship::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV28, "GenerationOptions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryProhibition,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryProhibition"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::Ship::ProhibitionStatusType", XSD::QName.new(NsV28, "Status")], [0, 1]],
      ["source", ["FedexWebServices::Soap::Ship::ProhibitionSourceType", XSD::QName.new(NsV28, "Source")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Ship::ProhibitionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["categories", ["FedexWebServices::Soap::Ship::ShipmentRuleType[]", XSD::QName.new(NsV28, "Categories")], [0, nil]],
      ["commodityIndex", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "CommodityIndex")], [0, 1]],
      ["derivedHarmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DerivedHarmonizedCode")], [0, 1]],
      ["advisory", ["FedexWebServices::Soap::Ship::Message", XSD::QName.new(NsV28, "Advisory")], [0, 1]],
      ["waiver", ["FedexWebServices::Soap::Ship::RegulatoryWaiver", XSD::QName.new(NsV28, "Waiver")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryWaiver,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryWaiver"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["advisories", ["FedexWebServices::Soap::Ship::Message[]", XSD::QName.new(NsV28, "Advisories")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV28, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupPackageCount")], [0, 1]],
      ["trackingIds", ["FedexWebServices::Soap::Ship::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Ship::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["weightSource", ["FedexWebServices::Soap::Ship::WeightSource", XSD::QName.new(NsV28, "WeightSource")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Ship::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::Ship::PhysicalPackagingType", XSD::QName.new(NsV28, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::Ship::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV28, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Ship::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, 10]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Ship::PackageSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::Ship::ContentRecord[]", XSD::QName.new(NsV28, "ContentRecords")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::Ship::ShipperConveyanceDetail", XSD::QName.new(NsV28, "ConveyanceDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedShipment,
    :schema_type => XSD::QName.new(NsV28, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")]],
      ["dropoffType", ["FedexWebServices::Soap::Ship::DropoffType", XSD::QName.new(NsV28, "DropoffType")]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")]],
      ["shippingCycle", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ShippingCycle")], [0, 1]],
      ["manifestDetail", ["FedexWebServices::Soap::Ship::ShipmentManifestDetail", XSD::QName.new(NsV28, "ManifestDetail")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::Ship::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV28, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalInsuredValue")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::Ship::ShipmentAuthorizationDetail", XSD::QName.new(NsV28, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Shipper")]],
      ["recipient", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Recipient")]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::Ship::ContactAndAddress", XSD::QName.new(NsV28, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Ship::ShipmentSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["processingOptionsRequested", ["FedexWebServices::Soap::Ship::ShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Ship::ExpressFreightDetail", XSD::QName.new(NsV28, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::Ship::FreightShipmentDetail", XSD::QName.new(NsV28, "FreightShipmentDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Ship::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::Ship::CustomsClearanceDetail", XSD::QName.new(NsV28, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::Ship::PickupDetail", XSD::QName.new(NsV28, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Ship::SmartPostShipmentDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "BlockInsightVisibility")], [0, 1]],
      ["errorLabelBehavior", ["FedexWebServices::Soap::Ship::ErrorLabelBehaviorType", XSD::QName.new(NsV28, "ErrorLabelBehavior")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::Ship::LabelSpecification", XSD::QName.new(NsV28, "LabelSpecification")]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::Ship::ShippingDocumentSpecification", XSD::QName.new(NsV28, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::Ship::RateRequestType[]", XSD::QName.new(NsV28, "RateRequestTypes")], [0, nil]],
      ["customerSelectedActualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "CustomerSelectedActualRateType")], [0, 1]],
      ["edtRequestType", ["FedexWebServices::Soap::Ship::EdtRequestType", XSD::QName.new(NsV28, "EdtRequestType")], [0, 1]],
      ["customRatingOptionDetail", ["FedexWebServices::Soap::Ship::CustomRatingOptionDetail", XSD::QName.new(NsV28, "CustomRatingOptionDetail")], [0, 1]],
      ["masterTrackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "MasterTrackingId")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")]],
      ["configurationData", ["FedexWebServices::Soap::Ship::ShipmentConfigurationData", XSD::QName.new(NsV28, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::Ship::RequestedPackageLineItem[]", XSD::QName.new(NsV28, "RequestedPackageLineItems")], [0, 999]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ShipDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Ship::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV28, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Ship::ReturnType", XSD::QName.new(NsV28, "ReturnType")]],
      ["rma", ["FedexWebServices::Soap::Ship::Rma", XSD::QName.new(NsV28, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Ship::ReturnEMailDetail", XSD::QName.new(NsV28, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Ship::ReturnAssociationDetail", XSD::QName.new(NsV28, "ReturnAssociation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Rma,
    :schema_type => XSD::QName.new(NsV28, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Reason")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "ServiceDescription"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAdvisoryDetail"),
    :schema_element => [
      ["regulatoryAdvisory", ["FedexWebServices::Soap::Ship::RegulatoryAdvisoryDetail", XSD::QName.new(NsV28, "RegulatoryAdvisory")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV28, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::Ship::DangerousGoodsDetail[]", XSD::QName.new(NsV28, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")]],
      ["totalWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalWeight")]],
      ["processingOptions", ["FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Ship::ShipmentNotificationAggregationType", XSD::QName.new(NsV28, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Ship::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV28, "EventNotifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Ship::ShipmentNotificationRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Ship::NotificationEventType[]", XSD::QName.new(NsV28, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Ship::NotificationDetail", XSD::QName.new(NsV28, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Ship::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV28, "FormatSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::Ship::Address", XSD::QName.new(NsV28, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Ship::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Ship::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Ship::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Ship::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::Ship::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Ship::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentManifestDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentManifestDetail"),
    :schema_element => [
      ["manifestReferenceType", ["FedexWebServices::Soap::Ship::CustomerReferenceType", XSD::QName.new(NsV28, "ManifestReferenceType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::NotificationFormatType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentOperationalDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentOperationalDetail"),
    :schema_element => [
      ["ursaPrefixCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrsaPrefixCode")], [0, 1]],
      ["ursaSuffixCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrsaSuffixCode")], [0, 1]],
      ["originLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginLocationId")], [0, 1]],
      ["originLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "OriginLocationNumber")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginServiceArea")], [0, 1]],
      ["destinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationLocationId")], [0, 1]],
      ["destinationLocationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "DestinationLocationNumber")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["destinationLocationStateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationLocationStateOrProvinceCode")], [0, 1]],
      ["deliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DeliveryDate")], [0, 1]],
      ["deliveryDay", ["FedexWebServices::Soap::Ship::DayOfWeekType", XSD::QName.new(NsV28, "DeliveryDay")], [0, 1]],
      ["publishedDeliveryTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "PublishedDeliveryTime")], [0, 1]],
      ["commitDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "CommitDate")], [0, 1]],
      ["commitDay", ["FedexWebServices::Soap::Ship::DayOfWeekType", XSD::QName.new(NsV28, "CommitDay")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["customTransitTime", ["FedexWebServices::Soap::Ship::TransitTimeType", XSD::QName.new(NsV28, "CustomTransitTime")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["deliveryEligibilities", ["FedexWebServices::Soap::Ship::GroundDeliveryEligibilityType[]", XSD::QName.new(NsV28, "DeliveryEligibilities")], [0, nil]],
      ["astraPlannedServiceLevel", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraPlannedServiceLevel")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AirportId")], [0, 1]],
      ["serviceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceCode")], [0, 1]],
      ["packagingCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingCode")], [0, 1]],
      ["scac", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Scac")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::ShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["customTransitTimeDetail", ["FedexWebServices::Soap::Ship::CustomTransitTimeDetail", XSD::QName.new(NsV28, "CustomTransitTimeDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Ship::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Ship::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Ship::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["quoteCreatorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteCreatorId")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Ship::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Ship::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Ship::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::Ship::ShipmentLegRateDetail[]", XSD::QName.new(NsV28, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::Ship::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Ship::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Ship::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Ship::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Ship::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Ship::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::Ship::AncillaryFeeAndTax[]", XSD::QName.new(NsV28, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Ship::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRating,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRating"),
    :schema_element => [
      ["actualRateType", ["FedexWebServices::Soap::Ship::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["shipmentRateDetails", ["FedexWebServices::Soap::Ship::ShipmentRateDetail[]", XSD::QName.new(NsV28, "ShipmentRateDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentReply,
    :schema_type => XSD::QName.new(NsV28, "ShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Ship::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Ship::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Ship::HoldAtLocationDetail", XSD::QName.new(NsV28, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Ship::ShipmentEventNotificationDetail", XSD::QName.new(NsV28, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Ship::ReturnShipmentDetail", XSD::QName.new(NsV28, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Ship::PendingShipmentDetail", XSD::QName.new(NsV28, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Ship::InternationalControlledExportDetail", XSD::QName.new(NsV28, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Ship::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Ship::ShipmentDryIceDetail", XSD::QName.new(NsV28, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Ship::HomeDeliveryPremiumDetail", XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Ship::FlatbedTrailerDetail", XSD::QName.new(NsV28, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Ship::FreightGuaranteeDetail", XSD::QName.new(NsV28, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Ship::EtdDetail", XSD::QName.new(NsV28, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::Ship::ExtraLaborDetail", XSD::QName.new(NsV28, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::Ship::PalletShrinkwrapDetail", XSD::QName.new(NsV28, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::Ship::PalletsProvidedDetail", XSD::QName.new(NsV28, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::Ship::DetentionDetail", XSD::QName.new(NsV28, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::Ship::MarkingOrTaggingDetail", XSD::QName.new(NsV28, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::Ship::NonBusinessTimeDetail", XSD::QName.new(NsV28, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::Ship::ShipmentAssemblyDetail", XSD::QName.new(NsV28, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::Ship::SortAndSegregateDetail", XSD::QName.new(NsV28, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::Ship::SpecialEquipmentDetail", XSD::QName.new(NsV28, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Ship::StorageDetail", XSD::QName.new(NsV28, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::Ship::WeighingDetail", XSD::QName.new(NsV28, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Ship::CustomDeliveryWindowDetail", XSD::QName.new(NsV28, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Values")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocument,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::ReturnedShippingDocumentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::Ship::Localization[]", XSD::QName.new(NsV28, "Localizations")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["shippingDocumentDisposition", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "ShippingDocumentDisposition")], [0, 1]],
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccessReference")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Resolution")], [0, 1]],
      ["copiesToPrint", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "CopiesToPrint")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::Ship::ShippingDocumentPart[]", XSD::QName.new(NsV28, "Parts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentStorageDetail", XSD::QName.new(NsV28, "StorageDetail")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailDetail", XSD::QName.new(NsV28, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::Ship::ShippingDocumentPrintDetail", XSD::QName.new(NsV28, "PrintDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV28, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Ship::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Ship::EMailNotificationRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Ship::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::Ship::LinearMeasure", XSD::QName.new(NsV28, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Ship::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::Ship::ShippingDocumentStockType", XSD::QName.new(NsV28, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Ship::DocumentFormatOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]],
      ["customDocumentIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomDocumentIdentifier")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentPart,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPart"),
    :schema_element => [
      ["documentPartSequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "DocumentPartSequenceNumber")], [0, 1]],
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV28, "Image")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::Ship::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "ShippingDocumentTypes")], [1, nil]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::Ship::CertificateOfOriginDetail", XSD::QName.new(NsV28, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::Ship::CommercialInvoiceDetail", XSD::QName.new(NsV28, "CommercialInvoiceDetail")], [0, 1]],
      ["usmcaCommercialInvoiceCertificationOfOriginDetail", ["FedexWebServices::Soap::Ship::UsmcaCommercialInvoiceCertificationOfOriginDetail", XSD::QName.new(NsV28, "UsmcaCommercialInvoiceCertificationOfOriginDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::Ship::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::Ship::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::Ship::ExportDeclarationDetail", XSD::QName.new(NsV28, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::Ship::GeneralAgencyAgreementDetail", XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["usmcaCertificationOfOriginDetail", ["FedexWebServices::Soap::Ship::UsmcaCertificationOfOriginDetail", XSD::QName.new(NsV28, "UsmcaCertificationOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::Ship::Op900Detail", XSD::QName.new(NsV28, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::Ship::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::Ship::FreightAddressLabelDetail", XSD::QName.new(NsV28, "FreightAddressLabelDetail")], [0, 1]],
      ["freightBillOfLadingDetail", ["FedexWebServices::Soap::Ship::FreightBillOfLadingDetail", XSD::QName.new(NsV28, "FreightBillOfLadingDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::Ship::ReturnInstructionsDetail", XSD::QName.new(NsV28, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStorageDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStorageDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::ShippingDocumentStorageDetailType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["filePath", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FilePath")], [0, 1]],
      ["fileNaming", ["FedexWebServices::Soap::Ship::ShippingDocumentNamingType", XSD::QName.new(NsV28, "FileNaming")], [0, 1]],
      ["fileSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileSuffix")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::Ship::SignatureOptionType", XSD::QName.new(NsV28, "OptionType")]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::Ship::SmartPostIndiciaType", XSD::QName.new(NsV28, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::Ship::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV28, "AncillaryEndorsement")], [0, 1]],
      ["specialServices", ["FedexWebServices::Soap::Ship::SmartPostShipmentSpecialServiceType[]", XSD::QName.new(NsV28, "SpecialServices")], [0, nil]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerManifestId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV28, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Ship::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::Ship::SpecialEquipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::SpecialEquipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "SpecialServiceDescription"),
    :schema_element => [
      ["identifier", ["FedexWebServices::Soap::Ship::OfferingIdentifierDetail", XSD::QName.new(NsV28, "Identifier")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Ship::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::StorageDetail,
    :schema_type => XSD::QName.new(NsV28, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::StringBarcode,
    :schema_type => XSD::QName.new(NsV28, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::StringBarcodeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Surcharge,
    :schema_type => XSD::QName.new(NsV28, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::Ship::SurchargeType", XSD::QName.new(NsV28, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Ship::SurchargeLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Tax,
    :schema_type => XSD::QName.new(NsV28, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Ship::TaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV28, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Ship::TinType", XSD::QName.new(NsV28, "TinType")]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TrackingId,
    :schema_type => XSD::QName.new(NsV28, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Ship::TrackingIdType", XSD::QName.new(NsV28, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Ship::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]],
      ["internalTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InternalTransactionId")], [0, 1]],
      ["tracing", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Tracing")], [0, 1]],
      ["sourceFormat", ["FedexWebServices::Soap::Ship::TransactionSourceFormat", XSD::QName.new(NsV28, "SourceFormat")], [0, 1]],
      ["environment", ["FedexWebServices::Soap::Ship::WebServiceEnvironment", XSD::QName.new(NsV28, "Environment")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Ship::UploadDocumentProducerType", XSD::QName.new(NsV28, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Ship::UploadDocumentType", XSD::QName.new(NsV28, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Ship::UploadDocumentIdProducer", XSD::QName.new(NsV28, "DocumentIdProducer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UserDetail,
    :schema_type => XSD::QName.new(NsV28, "UserDetail"),
    :schema_element => [
      ["userId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UserId")], [0, 1]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")], [0, 1]],
      ["uniqueUserId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UniqueUserId")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::Ship::DateRange", XSD::QName.new(NsV28, "BlanketPeriod")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType", XSD::QName.new(NsV28, "CertifierSpecification")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::Ship::UsmcaImporterSpecificationType", XSD::QName.new(NsV28, "ImporterSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCommercialInvoiceCertificationOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCommercialInvoiceCertificationOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Ship::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Ship::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["formVersion", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormVersion")], [0, 1]],
      ["certifierSpecification", ["FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType", XSD::QName.new(NsV28, "CertifierSpecification")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Ship::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCommodityDetail,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCommodityDetail"),
    :schema_element => [
      ["originCriterion", ["FedexWebServices::Soap::Ship::UsmcaOriginCriterionCode", XSD::QName.new(NsV28, "OriginCriterion")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidateShipmentRequest,
    :schema_type => XSD::QName.new(NsV28, "ValidateShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Ship::ValidatedHazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Ship::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["massPoints", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "MassPoints")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Ship::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Ship::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["properShippingNameAndDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingNameAndDescription")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["symbols", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Symbols")], [0, 1]],
      ["tunnelRestrictionCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TunnelRestrictionCode")], [0, 1]],
      ["specialProvisions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialProvisions")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Ship::HazardousCommodityAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidatedHazardousContainer,
    :schema_type => XSD::QName.new(NsV28, "ValidatedHazardousContainer"),
    :schema_element => [
      ["qValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "QValue")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Ship::ValidatedHazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::Ship::RateElementBasisType", XSD::QName.new(NsV28, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::Ship::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::Ship::Money", XSD::QName.new(NsV28, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Volume,
    :schema_type => XSD::QName.new(NsV28, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Ship::VolumeUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeighingDetail,
    :schema_type => XSD::QName.new(NsV28, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Ship::WeighingScaleType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::Weight,
    :schema_type => XSD::QName.new(NsV28, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Ship::WeightUnits", XSD::QName.new(NsV28, "Units")]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Ship::WebAuthenticationCredential", XSD::QName.new(NsV28, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Ship::WebAuthenticationCredential", XSD::QName.new(NsV28, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::VersionId,
    :schema_type => XSD::QName.new(NsV28, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV28, "AccessorRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV28, "AlcoholRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV28, "AssociatedAccountNumberType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AssociatedShipmentType,
    :schema_type => XSD::QName.new(NsV28, "AssociatedShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::AutoConfigurationType,
    :schema_type => XSD::QName.new(NsV28, "AutoConfigurationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV28, "B13AFilingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV28, "BarcodeSymbologyType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV28, "BatteryMaterialType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV28, "BatteryPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV28, "BatteryRegulatorySubType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BinaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "BinaryBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::BrokerType,
    :schema_type => XSD::QName.new(NsV28, "BrokerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV28, "CarrierCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV28, "ChargeBasisLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV28, "ClearanceBrokerageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodAdjustmentType,
    :schema_type => XSD::QName.new(NsV28, "CodAdjustmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodCollectionType,
    :schema_type => XSD::QName.new(NsV28, "CodCollectionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV28, "CodReturnReferenceIndicatorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV28, "CommodityPurposeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CompletedEtdType,
    :schema_type => XSD::QName.new(NsV28, "CompletedEtdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardAuthorizationType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardAuthorizationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardTransactionAttributeType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardTransactionAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CreditCardType,
    :schema_type => XSD::QName.new(NsV28, "CreditCardType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelCoordinateUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomRatingOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomRatingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV28, "CustomerReferenceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelGenerationOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsDeclarationStatementType,
    :schema_type => XSD::QName.new(NsV28, "CustomsDeclarationStatementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsAccessibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsPackingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV28, "DayOfWeekType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeletionControlType,
    :schema_type => XSD::QName.new(NsV28, "DeletionControlType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlStatementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabContentType,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneJustificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DropoffType,
    :schema_type => XSD::QName.new(NsV28, "DropoffType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV28, "EMailNotificationRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentModeType,
    :schema_type => XSD::QName.new(NsV28, "EPaymentModeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EPaymentProcessorType,
    :schema_type => XSD::QName.new(NsV28, "EPaymentProcessorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtRequestType,
    :schema_type => XSD::QName.new(NsV28, "EdtRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EdtTaxType,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EmailOptionType,
    :schema_type => XSD::QName.new(NsV28, "EmailOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EnterpriseDocumentType,
    :schema_type => XSD::QName.new(NsV28, "EnterpriseDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ErrorLabelBehaviorType,
    :schema_type => XSD::QName.new(NsV28, "ErrorLabelBehaviorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV28, "EtdAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV28, "EtdConfirmationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV28, "ExpressRegionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FedExLocationType,
    :schema_type => XSD::QName.new(NsV28, "FedExLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerOption")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseChargeCalculationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "FreightChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightClassType,
    :schema_type => XSD::QName.new(NsV28, "FreightClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV28, "FreightCollectTermsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV28, "FreightOnValueType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV28, "FreightRateQuoteType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::GroundDeliveryEligibilityType,
    :schema_type => XSD::QName.new(NsV28, "GroundDeliveryEligibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityAttributeType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescriptionProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityLabelTextOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingGroupType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityRegulationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV28, "HazardousContainerPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ImageId,
    :schema_type => XSD::QName.new(NsV28, "ImageId")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternalImageType,
    :schema_type => XSD::QName.new(NsV28, "InternalImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV28, "InternationalDocumentContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelFormatType,
    :schema_type => XSD::QName.new(NsV28, "LabelFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV28, "LabelMaskableDataType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelOrderType,
    :schema_type => XSD::QName.new(NsV28, "LabelOrderType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV28, "LabelPrintingOrientationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelRotationType,
    :schema_type => XSD::QName.new(NsV28, "LabelRotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LabelStockType,
    :schema_type => XSD::QName.new(NsV28, "LabelStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::LinearUnits,
    :schema_type => XSD::QName.new(NsV28, "LinearUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV28, "MinimumChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveClassificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationEventType,
    :schema_type => XSD::QName.new(NsV28, "NotificationEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV28, "NotificationFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV28, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::NotificationType,
    :schema_type => XSD::QName.new(NsV28, "NotificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::OversizeClassType,
    :schema_type => XSD::QName.new(NsV28, "OversizeClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV28, "PageQuadrantType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PaymentType,
    :schema_type => XSD::QName.new(NsV28, "PaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalFormType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalPackagingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestSourceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PickupRequestType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PricingCodeType,
    :schema_type => XSD::QName.new(NsV28, "PricingCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PrintedReferenceType,
    :schema_type => XSD::QName.new(NsV28, "PrintedReferenceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertEnhancementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionSourceType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionSourceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionStatusType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProhibitionType,
    :schema_type => XSD::QName.new(NsV28, "ProhibitionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PurposeOfShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveContainerClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactiveLabelType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityUnitOfMeasure")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV28, "RateDimensionalDivisorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateDiscountType,
    :schema_type => XSD::QName.new(NsV28, "RateDiscountType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateElementBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateRequestType,
    :schema_type => XSD::QName.new(NsV28, "RateRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateTypeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV28, "RatedWeightMethod")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RebateType,
    :schema_type => XSD::QName.new(NsV28, "RebateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryControlType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV28, "RelativeVerticalPositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequestedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequiredDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequiredDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RequirementType,
    :schema_type => XSD::QName.new(NsV28, "RequirementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailAllowedSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnType,
    :schema_type => XSD::QName.new(NsV28, "ReturnType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedRateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ReturnedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::RotationType,
    :schema_type => XSD::QName.new(NsV28, "RotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "SecondaryBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationAggregationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentRuleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRuleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentNamingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentNamingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShippingDocumentStorageDetailType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStorageDetailType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostAncillaryEndorsementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostIndiciaType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SmartPostShipmentSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV28, "SpecialEquipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV28, "SpecialRatingAppliedType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "StringBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::SurchargeType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxType,
    :schema_type => XSD::QName.new(NsV28, "TaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TinType,
    :schema_type => XSD::QName.new(NsV28, "TinType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TrackingIdType,
    :schema_type => XSD::QName.new(NsV28, "TrackingIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransactionSourceFormat,
    :schema_type => XSD::QName.new(NsV28, "TransactionSourceFormat")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::TransitTimeType,
    :schema_type => XSD::QName.new(NsV28, "TransitTimeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentIdProducer")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentProducerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaCertifierSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaCertifierSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaImporterSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaOriginCriterionCode,
    :schema_type => XSD::QName.new(NsV28, "UsmcaOriginCriterionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::UsmcaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "UsmcaProducerSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::VolumeUnits,
    :schema_type => XSD::QName.new(NsV28, "VolumeUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WebServiceEnvironment,
    :schema_type => XSD::QName.new(NsV28, "WebServiceEnvironment")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV28, "WeighingScaleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeightSource,
    :schema_type => XSD::QName.new(NsV28, "WeightSource")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::WeightUnits,
    :schema_type => XSD::QName.new(NsV28, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteShipmentRequest,
    :schema_name => XSD::QName.new(NsV28, "DeleteShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Ship::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]],
      ["deletionControl", ["FedexWebServices::Soap::Ship::DeletionControlType", XSD::QName.new(NsV28, "DeletionControl")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::DeleteTagRequest,
    :schema_name => XSD::QName.new(NsV28, "DeleteTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["dispatchLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DispatchLocationId")], [0, 1]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "DispatchDate")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::Ship::Payment", XSD::QName.new(NsV28, "Payment")]],
      ["confirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ConfirmationNumber")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentReply,
    :schema_name => XSD::QName.new(NsV28, "ProcessShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "JobId")], [0, 1]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]],
      ["errorLabels", ["FedexWebServices::Soap::Ship::ShippingDocument[]", XSD::QName.new(NsV28, "ErrorLabels")], [0, nil]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessShipmentRequest,
    :schema_name => XSD::QName.new(NsV28, "ProcessShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagReply,
    :schema_name => XSD::QName.new(NsV28, "ProcessTagReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["completedShipmentDetail", ["FedexWebServices::Soap::Ship::CompletedShipmentDetail", XSD::QName.new(NsV28, "CompletedShipmentDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ProcessTagRequest,
    :schema_name => XSD::QName.new(NsV28, "ProcessTagRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ShipmentReply,
    :schema_name => XSD::QName.new(NsV28, "ShipmentReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Ship::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Ship::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["advisoryDetail", ["FedexWebServices::Soap::Ship::ShipmentAdvisoryDetail", XSD::QName.new(NsV28, "AdvisoryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Ship::ValidateShipmentRequest,
    :schema_name => XSD::QName.new(NsV28, "ValidateShipmentRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Ship::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Ship::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["userDetail", ["FedexWebServices::Soap::Ship::UserDetail", XSD::QName.new(NsV28, "UserDetail")], [0, 1]],
      ["transactionDetail", ["FedexWebServices::Soap::Ship::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Ship::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["requestedShipment", ["FedexWebServices::Soap::Ship::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")]]
    ]
  )
end

end; end; end
